import require$$0$1 from"url";import require$$1 from"util";import{createReadStream,readFileSync}from"node:fs";import fs$1,{appendFile}from"node:fs/promises";import{createHash}from"node:crypto";import{tmpdir}from"node:os";import path from"node:path";var numberConstructor=(0).constructor;numberConstructor.isFinite,numberConstructor.isInteger,[].constructor.isArray;var cacheSize=1e3,Cache=function(){function e(e){this.size=e,this.reset()}return e.prototype.reset=function(){this.oldestIndex=0,this.map={},this.cachedKeys=new Array(this.size)},e.prototype.get=function(e){return this.map[e]},e.prototype.set=function(e,t){this.map[e]=t;var r=this.cachedKeys[this.oldestIndex];void 0!==r&&delete this.map[r],this.cachedKeys[this.oldestIndex]=e,this.oldestIndex++,this.oldestIndex%=this.size},e}();function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}new Cache(cacheSize);var error={exports:{}},stringify=function(...e){try{return JSON.stringify(...e)}catch(e){return"[Cannot display object: "+e.message+"]"}};!function(e,t){const r=stringify;e.exports=class extends Error{constructor(e){super(e.filter((e=>""!==e)).map((e=>"string"==typeof e?e:e instanceof Error?e.message:r(e))).join(" ")||"Unknown error"),"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,t.assert)}}}(error,error.exports);var errorExports=error.exports;const AssertError=errorExports;var assert=function(e,...t){if(!e){if(1===t.length&&t[0]instanceof Error)throw t[0];throw new AssertError(t)}};const Assert$5=assert,internals$9={};var reach=function(e,t,r){if(!1===t||null==t)return e;"string"==typeof(r=r||{})&&(r={separator:r});const s=Array.isArray(t);Assert$5(!s||!r.separator,"Separator option is not valid for array-based chain");const n=s?t:t.split(r.separator||".");let i=e;for(let e=0;e<n.length;++e){let s=n[e];const a=r.iterables&&internals$9.iterables(i);if(Array.isArray(i)||"set"===a){const e=Number(s);Number.isInteger(e)&&(s=e<0?i.length+e:e)}if(!i||"function"==typeof i&&!1===r.functions||!a&&void 0===i[s]){Assert$5(!r.strict||e+1===n.length,"Missing segment",s,"in reach path ",t),Assert$5("object"==typeof i||!0===r.functions||"function"!=typeof i,"Invalid segment",s,"in reach path ",t),i=r.default;break}i=a?"set"===a?[...i][s]:i.get(s):i[s]}return i};internals$9.iterables=function(e){return e instanceof Set?"set":e instanceof Map?"map":void 0};var types$1={exports:{}};!function(e,t){const r={};t=e.exports={array:Array.prototype,buffer:Buffer&&Buffer.prototype,date:Date.prototype,error:Error.prototype,generic:Object.prototype,map:Map.prototype,promise:Promise.prototype,regex:RegExp.prototype,set:Set.prototype,weakMap:WeakMap.prototype,weakSet:WeakSet.prototype},r.typeMap=new Map([["[object Error]",t.error],["[object Map]",t.map],["[object Promise]",t.promise],["[object Set]",t.set],["[object WeakMap]",t.weakMap],["[object WeakSet]",t.weakSet]]),t.getInternalProto=function(e){if(Array.isArray(e))return t.array;if(Buffer&&e instanceof Buffer)return t.buffer;if(e instanceof Date)return t.date;if(e instanceof RegExp)return t.regex;if(e instanceof Error)return t.error;const s=Object.prototype.toString.call(e);return r.typeMap.get(s)||t.generic}}(types$1,types$1.exports);var typesExports=types$1.exports,utils={keys:function(e,t={}){return!1!==t.symbols?Reflect.ownKeys(e):Object.getOwnPropertyNames(e)}};const Reach$1=reach,Types$1=typesExports,Utils$1=utils,internals$8={needsProtoHack:new Set([Types$1.set,Types$1.map,Types$1.weakSet,Types$1.weakMap])};var clone=internals$8.clone=function(e,t={},r=null){if("object"!=typeof e||null===e)return e;let s=internals$8.clone,n=r;if(t.shallow){if(!0!==t.shallow)return internals$8.cloneWithShallow(e,t);s=e=>e}else if(n){const t=n.get(e);if(t)return t}else n=new Map;const i=Types$1.getInternalProto(e);if(i===Types$1.buffer)return Buffer&&Buffer.from(e);if(i===Types$1.date)return new Date(e.getTime());if(i===Types$1.regex)return new RegExp(e);const a=internals$8.base(e,i,t);if(a===e)return e;if(n&&n.set(e,a),i===Types$1.set)for(const r of e)a.add(s(r,t,n));else if(i===Types$1.map)for(const[r,i]of e)a.set(r,s(i,t,n));const o=Utils$1.keys(e,t);for(const r of o){if("__proto__"===r)continue;if(i===Types$1.array&&"length"===r){a.length=e.length;continue}const o=Object.getOwnPropertyDescriptor(e,r);o?o.get||o.set?Object.defineProperty(a,r,o):o.enumerable?a[r]=s(e[r],t,n):Object.defineProperty(a,r,{enumerable:!1,writable:!0,configurable:!0,value:s(e[r],t,n)}):Object.defineProperty(a,r,{enumerable:!0,writable:!0,configurable:!0,value:s(e[r],t,n)})}return a};internals$8.cloneWithShallow=function(e,t){const r=t.shallow;(t=Object.assign({},t)).shallow=!1;const s=new Map;for(const t of r){const r=Reach$1(e,t);"object"!=typeof r&&"function"!=typeof r||s.set(r,r)}return internals$8.clone(e,t,s)},internals$8.base=function(e,t,r){if(!1===r.prototype)return internals$8.needsProtoHack.has(t)?new t.constructor:t===Types$1.array?[]:{};const s=Object.getPrototypeOf(e);if(s&&s.isImmutable)return e;if(t===Types$1.array){const e=[];return s!==t&&Object.setPrototypeOf(e,s),e}if(internals$8.needsProtoHack.has(t)){const e=new s.constructor;return s!==t&&Object.setPrototypeOf(e,s),e}return Object.create(s)};var cache={},common={},name="joi",description="Object schema validation",version$1="17.13.3",repository="git://github.com/hapijs/joi",main="lib/index.js",types="lib/index.d.ts",browser="dist/joi-browser.min.js",files=["lib/**/*","dist/*"],keywords=["schema","validation"],dependencies={"@hapi/hoek":"^9.3.0","@hapi/topo":"^5.1.0","@sideway/address":"^4.1.5","@sideway/formula":"^3.0.1","@sideway/pinpoint":"^2.0.0"},devDependencies={"@hapi/bourne":"2.x.x","@hapi/code":"8.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"^25.1.3","@types/node":"^14.18.63",typescript:"4.3.x"},scripts={prepublishOnly:"cd browser && npm install && npm run build",test:"lab -t 100 -a @hapi/code -L -Y","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},license="BSD-3-Clause",require$$2={name:name,description:description,version:version$1,repository:repository,main:main,types:types,browser:browser,files:files,keywords:keywords,dependencies:dependencies,devDependencies:devDependencies,scripts:scripts,license:license},schemas={},hasRequiredSchemas;function requireSchemas(){if(hasRequiredSchemas)return schemas;hasRequiredSchemas=1;const e=requireLib(),t={};return t.wrap=e.string().min(1).max(2).allow(!1),schemas.preferences=e.object({allowUnknown:e.boolean(),abortEarly:e.boolean(),artifacts:e.boolean(),cache:e.boolean(),context:e.object(),convert:e.boolean(),dateFormat:e.valid("date","iso","string","time","utc"),debug:e.boolean(),errors:{escapeHtml:e.boolean(),label:e.valid("path","key",!1),language:[e.string(),e.object().ref()],render:e.boolean(),stack:e.boolean(),wrap:{label:t.wrap,array:t.wrap,string:t.wrap}},externals:e.boolean(),messages:e.object(),noDefaults:e.boolean(),nonEnumerables:e.boolean(),presence:e.valid("required","optional","forbidden"),skipFunctions:e.boolean(),stripUnknown:e.object({arrays:e.boolean(),objects:e.boolean()}).or("arrays","objects").allow(!0,!1),warnings:e.boolean()}).strict(),t.nameRx=/^[a-zA-Z0-9]\w*$/,t.rule=e.object({alias:e.array().items(e.string().pattern(t.nameRx)).single(),args:e.array().items(e.string(),e.object({name:e.string().pattern(t.nameRx).required(),ref:e.boolean(),assert:e.alternatives([e.function(),e.object().schema()]).conditional("ref",{is:!0,then:e.required()}),normalize:e.function(),message:e.string().when("assert",{is:e.function(),then:e.required()})})),convert:e.boolean(),manifest:e.boolean(),method:e.function().allow(!1),multi:e.boolean(),validate:e.function()}),schemas.extension=e.object({type:e.alternatives([e.string(),e.object().regex()]).required(),args:e.function(),cast:e.object().pattern(t.nameRx,e.object({from:e.function().maxArity(1).required(),to:e.function().minArity(1).maxArity(2).required()})),base:e.object().schema().when("type",{is:e.object().regex(),then:e.forbidden()}),coerce:[e.function().maxArity(3),e.object({method:e.function().maxArity(3).required(),from:e.array().items(e.string()).single()})],flags:e.object().pattern(t.nameRx,e.object({setter:e.string(),default:e.any()})),manifest:{build:e.function().arity(2)},messages:[e.object(),e.string()],modifiers:e.object().pattern(t.nameRx,e.function().minArity(1).maxArity(2)),overrides:e.object().pattern(t.nameRx,e.function()),prepare:e.function().maxArity(3),rebuild:e.function().arity(1),rules:e.object().pattern(t.nameRx,t.rule),terms:e.object().pattern(t.nameRx,e.object({init:e.array().allow(null).required(),manifest:e.object().pattern(/.+/,[e.valid("schema","single"),e.object({mapped:e.object({from:e.string().required(),to:e.string().required()}).required()})])})),validate:e.function().maxArity(3)}).strict(),schemas.extensions=e.array().items(e.object(),e.function().arity(1)).strict(),t.desc={buffer:e.object({buffer:e.string()}),func:e.object({function:e.function().required(),options:{literal:!0}}),override:e.object({override:!0}),ref:e.object({ref:e.object({type:e.valid("value","global","local"),path:e.array().required(),separator:e.string().length(1).allow(!1),ancestor:e.number().min(0).integer().allow("root"),map:e.array().items(e.array().length(2)).min(1),adjust:e.function(),iterables:e.boolean(),in:e.boolean(),render:e.boolean()}).required()}),regex:e.object({regex:e.string().min(3)}),special:e.object({special:e.valid("deep").required()}),template:e.object({template:e.string().required(),options:e.object()}),value:e.object({value:e.alternatives([e.object(),e.array()]).required()})},t.desc.entity=e.alternatives([e.array().items(e.link("...")),e.boolean(),e.function(),e.number(),e.string(),t.desc.buffer,t.desc.func,t.desc.ref,t.desc.regex,t.desc.special,t.desc.template,t.desc.value,e.link("/")]),t.desc.values=e.array().items(null,e.boolean(),e.function(),e.number().allow(1/0,-1/0),e.string().allow(""),e.symbol(),t.desc.buffer,t.desc.func,t.desc.override,t.desc.ref,t.desc.regex,t.desc.template,t.desc.value),t.desc.messages=e.object().pattern(/.+/,[e.string(),t.desc.template,e.object().pattern(/.+/,[e.string(),t.desc.template])]),schemas.description=e.object({type:e.string().required(),flags:e.object({cast:e.string(),default:e.any(),description:e.string(),empty:e.link("/"),failover:t.desc.entity,id:e.string(),label:e.string(),only:!0,presence:["optional","required","forbidden"],result:["raw","strip"],strip:e.boolean(),unit:e.string()}).unknown(),preferences:{allowUnknown:e.boolean(),abortEarly:e.boolean(),artifacts:e.boolean(),cache:e.boolean(),convert:e.boolean(),dateFormat:["date","iso","string","time","utc"],errors:{escapeHtml:e.boolean(),label:["path","key"],language:[e.string(),t.desc.ref],wrap:{label:t.wrap,array:t.wrap}},externals:e.boolean(),messages:t.desc.messages,noDefaults:e.boolean(),nonEnumerables:e.boolean(),presence:["required","optional","forbidden"],skipFunctions:e.boolean(),stripUnknown:e.object({arrays:e.boolean(),objects:e.boolean()}).or("arrays","objects").allow(!0,!1),warnings:e.boolean()},allow:t.desc.values,invalid:t.desc.values,rules:e.array().min(1).items({name:e.string().required(),args:e.object().min(1),keep:e.boolean(),message:[e.string(),t.desc.messages],warn:e.boolean()}),keys:e.object().pattern(/.*/,e.link("/")),link:t.desc.ref}).pattern(/^[a-z]\w*$/,e.any()),schemas}var messages={},template={exports:{}};const internals$7={};var escapeHtml=function(e){if(!e)return"";let t="";for(let r=0;r<e.length;++r){const s=e.charCodeAt(r);internals$7.isSafe(s)?t+=e[r]:t+=internals$7.escapeHtmlChar(s)}return t};internals$7.escapeHtmlChar=function(e){const t=internals$7.namedHtml.get(e);if(t)return t;if(e>=256)return"&#"+e+";";return`&#x${e.toString(16).padStart(2,"0")};`},internals$7.isSafe=function(e){return internals$7.safeCharCodes.has(e)},internals$7.namedHtml=new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[34,"&quot;"],[160,"&nbsp;"],[162,"&cent;"],[163,"&pound;"],[164,"&curren;"],[169,"&copy;"],[174,"&reg;"]]),internals$7.safeCharCodes=function(){const e=new Set;for(let t=32;t<123;++t)(t>=97||t>=65&&t<=90||t>=48&&t<=57||32===t||46===t||44===t||45===t||58===t||95===t)&&e.add(t);return e}();var lib$4={};!function(e){const t={operators:["!","^","*","/","%","+","-","<","<=",">",">=","==","!=","&&","||","??"],operatorCharacters:["!","^","*","/","%","+","-","<","=",">","&","|","?"],operatorsOrder:[["^"],["*","/","%"],["+","-"],["<","<=",">",">="],["==","!="],["&&"],["||","??"]],operatorsPrefix:["!","n"],literals:{'"':'"',"`":"`","'":"'","[":"]"},numberRx:/^(?:[0-9]*(\.[0-9]*)?){1}$/,tokenRx:/^[\w\$\#\.\@\:\{\}]+$/,symbol:Symbol("formula"),settings:Symbol("settings")};e.Parser=class{constructor(e,r={}){if(!r[t.settings]&&r.constants)for(const e in r.constants){const t=r.constants[e];if(null!==t&&!["boolean","number","string"].includes(typeof t))throw new Error(`Formula constant ${e} contains invalid ${typeof t} value type`)}this.settings=r[t.settings]?r:Object.assign({[t.settings]:!0,constants:{},functions:{}},r),this.single=null,this._parts=null,this._parse(e)}_parse(r){let s=[],n="",i=0,a=!1;const o=r=>{if(i)throw new Error("Formula missing closing parenthesis");const o=s.length?s[s.length-1]:null;if(a||n||r){if(o&&"reference"===o.type&&")"===r)return o.type="function",o.value=this._subFormula(n,o.value),void(n="");if(")"===r){const t=new e.Parser(n,this.settings);s.push({type:"segment",value:t})}else if(a){if("]"===a)return s.push({type:"reference",value:n}),void(n="");s.push({type:"literal",value:n})}else if(t.operatorCharacters.includes(n))o&&"operator"===o.type&&t.operators.includes(o.value+n)?o.value+=n:s.push({type:"operator",value:n});else if(n.match(t.numberRx))s.push({type:"constant",value:parseFloat(n)});else if(void 0!==this.settings.constants[n])s.push({type:"constant",value:this.settings.constants[n]});else{if(!n.match(t.tokenRx))throw new Error(`Formula contains invalid token: ${n}`);s.push({type:"reference",value:n})}n=""}};for(const e of r)a?e===a?(o(),a=!1):n+=e:i?"("===e?(n+=e,++i):")"===e?(--i,i?n+=e:o(e)):n+=e:e in t.literals?a=t.literals[e]:"("===e?(o(),++i):t.operatorCharacters.includes(e)?(o(),n=e,o()):" "!==e?n+=e:o();o(),s=s.map(((e,t)=>"operator"!==e.type||"-"!==e.value||t&&"operator"!==s[t-1].type?e:{type:"operator",value:"n"}));let l=!1;for(const e of s){if("operator"===e.type){if(t.operatorsPrefix.includes(e.value))continue;if(!l)throw new Error("Formula contains an operator in invalid position");if(!t.operators.includes(e.value))throw new Error(`Formula contains an unknown operator ${e.value}`)}else if(l)throw new Error("Formula missing expected operator");l=!l}if(!l)throw new Error("Formula contains invalid trailing operator");1===s.length&&["reference","literal","constant"].includes(s[0].type)&&(this.single={type:"reference"===s[0].type?"reference":"value",value:s[0].value}),this._parts=s.map((e=>{if("operator"===e.type)return t.operatorsPrefix.includes(e.value)?e:e.value;if("reference"!==e.type)return e.value;if(this.settings.tokenRx&&!this.settings.tokenRx.test(e.value))throw new Error(`Formula contains invalid reference ${e.value}`);return this.settings.reference?this.settings.reference(e.value):t.reference(e.value)}))}_subFormula(r,s){const n=this.settings.functions[s];if("function"!=typeof n)throw new Error(`Formula contains unknown function ${s}`);let i=[];if(r){let e="",n=0,a=!1;const o=()=>{if(!e)throw new Error(`Formula contains function ${s} with invalid arguments ${r}`);i.push(e),e=""};for(let s=0;s<r.length;++s){const i=r[s];a?(e+=i,i===a&&(a=!1)):i in t.literals&&!n?(e+=i,a=t.literals[i]):","!==i||n?(e+=i,"("===i?++n:")"===i&&--n):o()}o()}return i=i.map((t=>new e.Parser(t,this.settings))),function(e){const t=[];for(const r of i)t.push(r.evaluate(e));return n.call(e,...t)}}evaluate(e){const r=this._parts.slice();for(let s=r.length-2;s>=0;--s){const n=r[s];if(n&&"operator"===n.type){const i=r[s+1];r.splice(s+1,1);const a=t.evaluate(i,e);r[s]=t.single(n.value,a)}}return t.operatorsOrder.forEach((s=>{for(let n=1;n<r.length-1;)if(s.includes(r[n])){const s=r[n],i=t.evaluate(r[n-1],e),a=t.evaluate(r[n+1],e);r.splice(n,2);const o=t.calculate(s,i,a);r[n-1]=0===o?0:o}else n+=2})),t.evaluate(r[0],e)}},e.Parser.prototype[t.symbol]=!0,t.reference=function(e){return function(t){return t&&void 0!==t[e]?t[e]:null}},t.evaluate=function(e,r){return null===e?null:"function"==typeof e?e(r):e[t.symbol]?e.evaluate(r):e},t.single=function(e,t){if("!"===e)return!t;const r=-t;return 0===r?0:r},t.calculate=function(e,r,s){if("??"===e)return t.exists(r)?r:s;if("string"==typeof r||"string"==typeof s){if("+"===e)return(r=t.exists(r)?r:"")+(s=t.exists(s)?s:"")}else switch(e){case"^":return Math.pow(r,s);case"*":return r*s;case"/":return r/s;case"%":return r%s;case"+":return r+s;case"-":return r-s}switch(e){case"<":return r<s;case"<=":return r<=s;case">":return r>s;case">=":return r>=s;case"==":return r===s;case"!=":return r!==s;case"&&":return r&&s;case"||":return r||s}return null},t.exists=function(e){return null!=e}}(lib$4);var errors$1={},annotate={},hasRequiredAnnotate,hasRequiredErrors;function requireAnnotate(){if(hasRequiredAnnotate)return annotate;hasRequiredAnnotate=1;const e=clone,t=requireCommon(),r={annotations:Symbol("annotations")};return annotate.error=function(s){if(!this._original||"object"!=typeof this._original)return this.details[0].message;const n=s?"":"[31m",i=s?"":"[41m",a=s?"":"[0m",o=e(this._original);for(let e=this.details.length-1;e>=0;--e){const s=e+1,n=this.details[e],i=n.path;let a=o;for(let e=0;;++e){const o=i[e];if(t.isSchema(a)&&(a=a.clone()),!(e+1<i.length&&"string"!=typeof a[o])){const e=a[r.annotations]||{errors:{},missing:{}};a[r.annotations]=e;const t=o||n.context.key;void 0!==a[o]?(e.errors[t]=e.errors[t]||[],e.errors[t].push(s)):e.missing[t]=s;break}a=a[o]}}const l=/_\$key\$_([, \d]+)_\$end\$_"/g,c=/"_\$miss\$_([^|]+)\|(\d+)_\$end\$_": "__missing__"/g,d=/\s*"_\$idx\$_([, \d]+)_\$end\$_",?\n(.*)/g,u=/"\[(NaN|Symbol.*|-?Infinity|function.*|\(.*)]"/g;let p=r.safeStringify(o,2).replace(l,((e,t)=>`" ${n}[${t}]${a}`)).replace(c,((e,t,r)=>`${i}"${t}"${a}${n} [${r}]: -- missing --${a}`)).replace(d,((e,t,r)=>`\n${r} ${n}[${t}]${a}`)).replace(u,((e,t)=>t));p=`${p}\n${n}`;for(let e=0;e<this.details.length;++e){p=`${p}\n[${e+1}] ${this.details[e].message}`}return p+=a,p},r.safeStringify=function(e,t){return JSON.stringify(e,r.serializer(),t)},r.serializer=function(){const e=[],t=[],s=(r,s)=>t[0]===s?"[Circular ~]":"[Circular ~."+e.slice(0,t.indexOf(s)).join(".")+"]";return function(n,i){if(t.length>0){const r=t.indexOf(this);~r?(t.length=r+1,e.length=r+1,e[r]=n):(t.push(this),e.push(n)),~t.indexOf(i)&&(i=s.call(this,n,i))}else t.push(i);if(i){const e=i[r.annotations];if(e){if(Array.isArray(i)){const t=[];for(let r=0;r<i.length;++r)e.errors[r]&&t.push(`_$idx$_${e.errors[r].sort().join(", ")}_$end$_`),t.push(i[r]);i=t}else{for(const t in e.errors)i[`${t}_$key$_${e.errors[t].sort().join(", ")}_$end$_`]=i[t],i[t]=void 0;for(const t in e.missing)i[`_$miss$_${t}|${e.missing[t]}_$end$_`]="__missing__"}return i}}return i===1/0||i===-1/0||Number.isNaN(i)||"function"==typeof i||"symbol"==typeof i?"["+i.toString()+"]":i}},annotate}function requireErrors(){return hasRequiredErrors||(hasRequiredErrors=1,function(e){const t=requireAnnotate(),r=requireCommon(),s=requireTemplate();e.Report=class{constructor(t,r,s,n,i,a,o){if(this.code=t,this.flags=n,this.messages=i,this.path=a.path,this.prefs=o,this.state=a,this.value=r,this.message=null,this.template=null,this.local=s||{},this.local.label=e.label(this.flags,this.state,this.prefs,this.messages),void 0===this.value||this.local.hasOwnProperty("value")||(this.local.value=this.value),this.path.length){const e=this.path[this.path.length-1];"object"!=typeof e&&(this.local.key=e)}}_setTemplate(e){if(this.template=e,!this.flags.label&&0===this.path.length){const e=this._template(this.template,"root");e&&(this.local.label=e)}}toString(){if(this.message)return this.message;const e=this.code;if(!this.prefs.errors.render)return this.code;const t=this._template(this.template)||this._template(this.prefs.messages)||this._template(this.messages);return void 0===t?`Error code "${e}" is not defined, your custom type is missing the correct messages definition`:(this.message=t.render(this.value,this.state,this.prefs,this.local,{errors:this.prefs.errors,messages:[this.prefs.messages,this.messages]}),this.prefs.errors.label||(this.message=this.message.replace(/^"" /,"").trim()),this.message)}_template(t,r){return e.template(this.value,t,r||this.code,this.state,this.prefs)}},e.path=function(e){let t="";for(const r of e)"object"!=typeof r&&("string"==typeof r?(t&&(t+="."),t+=r):t+=`[${r}]`);return t},e.template=function(e,t,n,i,a){if(!t)return;if(s.isTemplate(t))return"root"!==n?t:null;let o=a.errors.language;if(r.isResolvable(o)&&(o=o.resolve(e,i,a)),o&&t[o]){if(void 0!==t[o][n])return t[o][n];if(void 0!==t[o]["*"])return t[o]["*"]}return t[n]?t[n]:t["*"]},e.label=function(t,r,s,n){if(!s.errors.label)return"";if(t.label)return t.label;let i=r.path;"key"===s.errors.label&&r.path.length>1&&(i=r.path.slice(-1));const a=e.path(i);return a||(e.template(null,s.messages,"root",r,s)||n&&e.template(null,n,"root",r,s)||"value")},e.process=function(t,r,s){if(!t)return null;const{override:n,message:i,details:a}=e.details(t);if(n)return n;if(s.errors.stack)return new e.ValidationError(i,a,r);const o=Error.stackTraceLimit;Error.stackTraceLimit=0;const l=new e.ValidationError(i,a,r);return Error.stackTraceLimit=o,l},e.details=function(e,t={}){let r=[];const s=[];for(const n of e){if(n instanceof Error){if(!1!==t.override)return{override:n};const e=n.toString();r.push(e),s.push({message:e,type:"override",context:{error:n}});continue}const e=n.toString();r.push(e),s.push({message:e,path:n.path.filter((e=>"object"!=typeof e)),type:n.code,context:n.local})}return r.length>1&&(r=[...new Set(r)]),{message:r.join(". "),details:s}},e.ValidationError=class extends Error{constructor(e,t,r){super(e),this._original=r,this.details=t}static isError(t){return t instanceof e.ValidationError}},e.ValidationError.prototype.isJoi=!0,e.ValidationError.prototype.name="ValidationError",e.ValidationError.prototype.annotate=t.error}(errors$1)),errors$1}var ref={},hasRequiredRef,hasRequiredTemplate,hasRequiredMessages,hasRequiredCommon,hasRequiredCache;function requireRef(){return hasRequiredRef||(hasRequiredRef=1,function(e){const t=assert,r=clone,s=reach,n=requireCommon();let i;const a={symbol:Symbol("ref"),defaults:{adjust:null,in:!1,iterables:null,map:null,separator:".",type:"value"}};e.create=function(e,r={}){t("string"==typeof e,"Invalid reference key:",e),n.assertOptions(r,["adjust","ancestor","in","iterables","map","prefix","render","separator"]),t(!r.prefix||"object"==typeof r.prefix,"options.prefix must be of type object");const s=Object.assign({},a.defaults,r);delete s.prefix;const i=s.separator,o=a.context(e,i,r.prefix);if(s.type=o.type,e=o.key,"value"===s.type)if(o.root&&(t(!i||e[0]!==i,"Cannot specify relative path with root prefix"),s.ancestor="root",e||(e=null)),i&&i===e)e=null,s.ancestor=0;else if(void 0!==s.ancestor)t(!i||!e||e[0]!==i,"Cannot combine prefix with ancestor option");else{const[t,r]=a.ancestor(e,i);r&&""===(e=e.slice(r))&&(e=null),s.ancestor=t}return s.path=i?null===e?[]:e.split(i):[e],new a.Ref(s)},e.in=function(t,r={}){return e.create(t,{...r,in:!0})},e.isRef=function(e){return!!e&&!!e[n.symbols.ref]},a.Ref=class{constructor(e){t("object"==typeof e,"Invalid reference construction"),n.assertOptions(e,["adjust","ancestor","in","iterables","map","path","render","separator","type","depth","key","root","display"]),t([!1,void 0].includes(e.separator)||"string"==typeof e.separator&&1===e.separator.length,"Invalid separator"),t(!e.adjust||"function"==typeof e.adjust,"options.adjust must be a function"),t(!e.map||Array.isArray(e.map),"options.map must be an array"),t(!e.map||!e.adjust,"Cannot set both map and adjust options"),Object.assign(this,a.defaults,e),t("value"===this.type||void 0===this.ancestor,"Non-value references cannot reference ancestors"),Array.isArray(this.map)&&(this.map=new Map(this.map)),this.depth=this.path.length,this.key=this.path.length?this.path.join(this.separator):null,this.root=this.path[0],this.updateDisplay()}resolve(e,r,s,n,i={}){return t(!this.in||i.in,"Invalid in() reference usage"),"global"===this.type?this._resolve(s.context,r,i):"local"===this.type?this._resolve(n,r,i):this.ancestor?"root"===this.ancestor?this._resolve(r.ancestors[r.ancestors.length-1],r,i):(t(this.ancestor<=r.ancestors.length,"Invalid reference exceeds the schema root:",this.display),this._resolve(r.ancestors[this.ancestor-1],r,i)):this._resolve(e,r,i)}_resolve(e,t,r){let n;if("value"===this.type&&t.mainstay.shadow&&!1!==r.shadow&&(n=t.mainstay.shadow.get(this.absolute(t))),void 0===n&&(n=s(e,this.path,{iterables:this.iterables,functions:!0})),this.adjust&&(n=this.adjust(n)),this.map){const e=this.map.get(n);void 0!==e&&(n=e)}return t.mainstay&&t.mainstay.tracer.resolve(t,this,n),n}toString(){return this.display}absolute(e){return[...e.path.slice(0,-this.ancestor),...this.path]}clone(){return new a.Ref(this)}describe(){const e={path:this.path};"value"!==this.type&&(e.type=this.type),"."!==this.separator&&(e.separator=this.separator),"value"===this.type&&1!==this.ancestor&&(e.ancestor=this.ancestor),this.map&&(e.map=[...this.map]);for(const t of["adjust","iterables","render"])null!==this[t]&&void 0!==this[t]&&(e[t]=this[t]);return!1!==this.in&&(e.in=!0),{ref:e}}updateDisplay(){const e=null!==this.key?this.key:"";if("value"!==this.type)return void(this.display=`ref:${this.type}:${e}`);if(!this.separator)return void(this.display=`ref:${e}`);if(!this.ancestor)return void(this.display=`ref:${this.separator}${e}`);if("root"===this.ancestor)return void(this.display=`ref:root:${e}`);if(1===this.ancestor)return void(this.display=`ref:${e||".."}`);const t=new Array(this.ancestor+1).fill(this.separator).join("");this.display=`ref:${t}${e||""}`}},a.Ref.prototype[n.symbols.ref]=!0,e.build=function(e){return"value"===(e=Object.assign({},a.defaults,e)).type&&void 0===e.ancestor&&(e.ancestor=1),new a.Ref(e)},a.context=function(e,t,r={}){if(e=e.trim(),r){const s=void 0===r.global?"$":r.global;if(s!==t&&e.startsWith(s))return{key:e.slice(s.length),type:"global"};const n=void 0===r.local?"#":r.local;if(n!==t&&e.startsWith(n))return{key:e.slice(n.length),type:"local"};const i=void 0===r.root?"/":r.root;if(i!==t&&e.startsWith(i))return{key:e.slice(i.length),type:"value",root:!0}}return{key:e,type:"value"}},a.ancestor=function(e,t){if(!t)return[1,0];if(e[0]!==t)return[1,0];if(e[1]!==t)return[0,1];let r=2;for(;e[r]===t;)++r;return[r-1,r]},e.toSibling=0,e.toParent=1,e.Manager=class{constructor(){this.refs=[]}register(t,r){if(t)if(r=void 0===r?e.toParent:r,Array.isArray(t))for(const e of t)this.register(e,r);else if(n.isSchema(t))for(const e of t._refs.refs)e.ancestor-r>=0&&this.refs.push({ancestor:e.ancestor-r,root:e.root});else e.isRef(t)&&"value"===t.type&&t.ancestor-r>=0&&this.refs.push({ancestor:t.ancestor-r,root:t.root}),i=i||requireTemplate(),i.isTemplate(t)&&this.register(t.refs(),r)}get length(){return this.refs.length}clone(){const t=new e.Manager;return t.refs=r(this.refs),t}reset(){this.refs=[]}roots(){return this.refs.filter((e=>!e.ancestor)).map((e=>e.root))}}}(ref)),ref}function requireTemplate(){return hasRequiredTemplate||(hasRequiredTemplate=1,function(e){const t=assert,r=clone,s=escapeHtml,n=lib$4,i=requireCommon(),a=requireErrors(),o=requireRef(),l={symbol:Symbol("template"),opens:new Array(1e3).join("\0"),closes:new Array(1e3).join(""),dateFormat:{date:Date.prototype.toDateString,iso:Date.prototype.toISOString,string:Date.prototype.toString,time:Date.prototype.toTimeString,utc:Date.prototype.toUTCString}};e.exports=l.Template=class{constructor(e,s){if(t("string"==typeof e,"Template source must be a string"),t(!e.includes("\0")&&!e.includes(""),"Template source cannot contain reserved control characters"),this.source=e,this.rendered=e,this._template=null,s){const{functions:e,...n}=s;this._settings=Object.keys(n).length?r(n):void 0,this._functions=e,this._functions&&(t(Object.keys(this._functions).every((e=>"string"==typeof e)),"Functions keys must be strings"),t(Object.values(this._functions).every((e=>"function"==typeof e)),"Functions values must be functions"))}else this._settings=void 0,this._functions=void 0;this._parse()}_parse(){if(!this.source.includes("{"))return;const e=l.encode(this.source),t=l.split(e);let r=!1;const s=[],n=t.shift();n&&s.push(n);for(const e of t){const t="{"!==e[0],n=t?"}":"}}",i=e.indexOf(n);if(-1===i||"{"===e[1]){s.push(`{${l.decode(e)}`);continue}let a=e.slice(t?0:1,i);const o=":"===a[0];o&&(a=a.slice(1));const c=this._ref(l.decode(a),{raw:t,wrapped:o});s.push(c),"string"!=typeof c&&(r=!0);const d=e.slice(i+n.length);d&&s.push(l.decode(d))}r?this._template=s:this.rendered=s.join("")}static date(e,t){return l.dateFormat[t.dateFormat].call(e)}describe(e={}){if(!this._settings&&e.compact)return this.source;const t={template:this.source};return this._settings&&(t.options=this._settings),this._functions&&(t.functions=this._functions),t}static build(e){return new l.Template(e.template,e.options||e.functions?{...e.options,functions:e.functions}:void 0)}isDynamic(){return!!this._template}static isTemplate(e){return!!e&&!!e[i.symbols.template]}refs(){if(!this._template)return;const e=[];for(const t of this._template)"string"!=typeof t&&e.push(...t.refs);return e}resolve(e,t,r,s){return this._template&&1===this._template.length?this._part(this._template[0],e,t,r,s,{}):this.render(e,t,r,s)}_part(e,...t){return e.ref?e.ref.resolve(...t):e.formula.evaluate(t)}render(e,t,r,n,i={}){if(!this.isDynamic())return this.rendered;const a=[];for(const o of this._template)if("string"==typeof o)a.push(o);else{const c=this._part(o,e,t,r,n,i),d=l.stringify(c,e,t,r,n,i);if(void 0!==d){const e=o.raw||!1===(i.errors&&i.errors.escapeHtml)?d:s(d);a.push(l.wrap(e,o.wrapped&&r.errors.wrap.label))}}return a.join("")}_ref(e,{raw:t,wrapped:r}){const s=[],i=e=>{const t=o.create(e,this._settings);return s.push(t),e=>{const r=t.resolve(...e);return void 0!==r?r:null}};try{const t=this._functions?{...l.functions,...this._functions}:l.functions;var a=new n.Parser(e,{reference:i,functions:t,constants:l.constants})}catch(t){throw t.message=`Invalid template variable "${e}" fails due to: ${t.message}`,t}if(a.single){if("reference"===a.single.type){const e=s[0];return{ref:e,raw:t,refs:s,wrapped:r||"local"===e.type&&"label"===e.key}}return l.stringify(a.single.value)}return{formula:a,raw:t,refs:s}}toString(){return this.source}},l.Template.prototype[i.symbols.template]=!0,l.Template.prototype.isImmutable=!0,l.encode=function(e){return e.replace(/\\(\{+)/g,((e,t)=>l.opens.slice(0,t.length))).replace(/\\(\}+)/g,((e,t)=>l.closes.slice(0,t.length)))},l.decode=function(e){return e.replace(/\u0000/g,"{").replace(/\u0001/g,"}")},l.split=function(e){const t=[];let r="";for(let s=0;s<e.length;++s){const n=e[s];if("{"===n){let n="";for(;s+1<e.length&&"{"===e[s+1];)n+="{",++s;t.push(r),r=n}else r+=n}return t.push(r),t},l.wrap=function(e,t){return t?1===t.length?`${t}${e}${t}`:`${t[0]}${e}${t[1]}`:e},l.stringify=function(e,t,r,s,n,i={}){const a=typeof e,c=s&&s.errors&&s.errors.wrap||{};let d=!1;if(o.isRef(e)&&e.render&&(d=e.in,e=e.resolve(t,r,s,n,{in:e.in,...i})),null===e)return"null";if("string"===a)return l.wrap(e,i.arrayItems&&c.string);if("number"===a||"function"===a||"symbol"===a)return e.toString();if("object"!==a)return JSON.stringify(e);if(e instanceof Date)return l.Template.date(e,s);if(e instanceof Map){const t=[];for(const[r,s]of e.entries())t.push(`${r.toString()} -> ${s.toString()}`);e=t}if(!Array.isArray(e))return e.toString();const u=[];for(const a of e)u.push(l.stringify(a,t,r,s,n,{arrayItems:!0,...i}));return l.wrap(u.join(", "),!d&&c.array)},l.constants={true:!0,false:!1,null:null,second:1e3,minute:6e4,hour:36e5,day:864e5},l.functions={if:(e,t,r)=>e?t:r,length:e=>"string"==typeof e?e.length:e&&"object"==typeof e?Array.isArray(e)?e.length:Object.keys(e).length:null,msg(e){const[t,r,s,n,i]=this,o=i.messages;if(!o)return"";const l=a.template(t,o[0],e,r,s)||a.template(t,o[1],e,r,s);return l?l.render(t,r,s,n,i):""},number:e=>"number"==typeof e?e:"string"==typeof e?parseFloat(e):"boolean"==typeof e?e?1:0:e instanceof Date?e.getTime():null}}(template)),template.exports}function requireMessages(){return hasRequiredMessages||(hasRequiredMessages=1,function(e){const t=assert,r=clone,s=requireTemplate();e.compile=function(e,n){if("string"==typeof e)return t(!n,"Cannot set single message string"),new s(e);if(s.isTemplate(e))return t(!n,"Cannot set single message template"),e;t("object"==typeof e&&!Array.isArray(e),"Invalid message options"),n=n?r(n):{};for(let r in e){const i=e[r];if("root"===r||s.isTemplate(i)){n[r]=i;continue}if("string"==typeof i){n[r]=new s(i);continue}t("object"==typeof i&&!Array.isArray(i),"Invalid message for",r);const a=r;for(r in n[a]=n[a]||{},i){const e=i[r];"root"===r||s.isTemplate(e)?n[a][r]=e:(t("string"==typeof e,"Invalid message for",r,"in",a),n[a][r]=new s(e))}}return n},e.decompile=function(e){const t={};for(let r in e){const n=e[r];if("root"===r){t.root=n;continue}if(s.isTemplate(n)){t[r]=n.describe({compact:!0});continue}const i=r;for(r in t[i]={},n){const e=n[r];"root"!==r?t[i][r]=e.describe({compact:!0}):t[i].root=e}}return t},e.merge=function(n,i){if(!n)return e.compile(i);if(!i)return n;if("string"==typeof i)return new s(i);if(s.isTemplate(i))return i;const a=r(n);for(let e in i){const r=i[e];if("root"===e||s.isTemplate(r)){a[e]=r;continue}if("string"==typeof r){a[e]=new s(r);continue}t("object"==typeof r&&!Array.isArray(r),"Invalid message for",e);const n=e;for(e in a[n]=a[n]||{},r){const i=r[e];"root"===e||s.isTemplate(i)?a[n][e]=i:(t("string"==typeof i,"Invalid message for",e,"in",n),a[n][e]=new s(i))}}return a}}(messages)),messages}function requireCommon(){return hasRequiredCommon||(hasRequiredCommon=1,function(e){const t=assert,r=errorExports,s=require$$2;let n,i;const a={isoDate:/^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/};e.version=s.version,e.defaults={abortEarly:!0,allowUnknown:!1,artifacts:!1,cache:!0,context:null,convert:!0,dateFormat:"iso",errors:{escapeHtml:!1,label:"path",language:null,render:!0,stack:!1,wrap:{label:'"',array:"[]"}},externals:!0,messages:{},nonEnumerables:!1,noDefaults:!1,presence:"optional",skipFunctions:!1,stripUnknown:!1,warnings:!1},e.symbols={any:Symbol.for("@hapi/joi/schema"),arraySingle:Symbol("arraySingle"),deepDefault:Symbol("deepDefault"),errors:Symbol("errors"),literal:Symbol("literal"),override:Symbol("override"),parent:Symbol("parent"),prefs:Symbol("prefs"),ref:Symbol("ref"),template:Symbol("template"),values:Symbol("values")},e.assertOptions=function(e,r,s="Options"){t(e&&"object"==typeof e&&!Array.isArray(e),"Options must be of type object");const n=Object.keys(e).filter((e=>!r.includes(e)));t(0===n.length,`${s} contain unknown keys: ${n}`)},e.checkPreferences=function(e){i=i||requireSchemas();const t=i.preferences.validate(e);if(t.error)throw new r([t.error.details[0].message])},e.compare=function(e,t,r){switch(r){case"=":return e===t;case">":return e>t;case"<":return e<t;case">=":return e>=t;case"<=":return e<=t}},e.default=function(e,t){return void 0===e?t:e},e.isIsoDate=function(e){return a.isoDate.test(e)},e.isNumber=function(e){return"number"==typeof e&&!isNaN(e)},e.isResolvable=function(t){return!!t&&(t[e.symbols.ref]||t[e.symbols.template])},e.isSchema=function(r,s={}){const n=r&&r[e.symbols.any];return!!n&&(t(s.legacy||n.version===e.version,"Cannot mix different versions of joi schemas"),!0)},e.isValues=function(t){return t[e.symbols.values]},e.limit=function(e){return Number.isSafeInteger(e)&&e>=0},e.preferences=function(t,r){n=n||requireMessages(),t=t||{},r=r||{};const s=Object.assign({},t,r);return r.errors&&t.errors&&(s.errors=Object.assign({},t.errors,r.errors),s.errors.wrap=Object.assign({},t.errors.wrap,r.errors.wrap)),r.messages&&(s.messages=n.compile(r.messages,t.messages)),delete s[e.symbols.prefs],s},e.tryWithPath=function(e,t,r={}){try{return e()}catch(e){throw void 0!==e.path?e.path=t+"."+e.path:e.path=t,r.append&&(e.message=`${e.message} (${e.path})`),e}},e.validateArg=function(t,r,{assert:s,message:n}){if(e.isSchema(s)){const e=s.validate(t);if(!e.error)return;return e.error.message}if(!s(t))return r?`${r} ${n}`:n},e.verifyFlat=function(e,r){for(const s of e)t(!Array.isArray(s),"Method no longer accepts array arguments:",r)}}(common)),common}function requireCache(){if(hasRequiredCache)return cache;hasRequiredCache=1;const e=assert,t=clone,r=requireCommon(),s={max:1e3,supported:new Set(["undefined","boolean","number","string"])};return cache.provider={provision:e=>new s.Cache(e)},s.Cache=class{constructor(t={}){r.assertOptions(t,["max"]),e(void 0===t.max||t.max&&t.max>0&&isFinite(t.max),"Invalid max cache size"),this._max=t.max||s.max,this._map=new Map,this._list=new s.List}get length(){return this._map.size}set(e,t){if(null!==e&&!s.supported.has(typeof e))return;let r=this._map.get(e);if(r)return r.value=t,void this._list.first(r);r=this._list.unshift({key:e,value:t}),this._map.set(e,r),this._compact()}get(e){const r=this._map.get(e);if(r)return this._list.first(r),t(r.value)}_compact(){if(this._map.size>this._max){const e=this._list.pop();this._map.delete(e.key)}}},s.List=class{constructor(){this.tail=null,this.head=null}unshift(e){return e.next=null,e.prev=this.head,this.head&&(this.head.next=e),this.head=e,this.tail||(this.tail=e),e}first(e){e!==this.head&&(this._remove(e),this.unshift(e))}pop(){return this._remove(this.tail)}_remove(e){const{next:t,prev:r}=e;return t.prev=r,r&&(r.next=t),e===this.tail&&(this.tail=t),e.prev=null,e.next=null,e}},cache}var compile={},hasRequiredCompile;function requireCompile(){return hasRequiredCompile||(hasRequiredCompile=1,function(e){const t=assert,r=requireCommon(),s=requireRef(),n={};e.schema=function(e,t,s={}){r.assertOptions(s,["appendPath","override"]);try{return n.schema(e,t,s)}catch(e){throw s.appendPath&&void 0!==e.path&&(e.message=`${e.message} (${e.path})`),e}},n.schema=function(e,s,i){t(void 0!==s,"Invalid undefined schema"),Array.isArray(s)&&(t(s.length,"Invalid empty array schema"),1===s.length&&(s=s[0]));const a=(t,...r)=>!1!==i.override?t.valid(e.override,...r):t.valid(...r);if(n.simple(s))return a(e,s);if("function"==typeof s)return e.custom(s);if(t("object"==typeof s,"Invalid schema content:",typeof s),r.isResolvable(s))return a(e,s);if(r.isSchema(s))return s;if(Array.isArray(s)){for(const t of s)if(!n.simple(t))return e.alternatives().try(...s);return a(e,...s)}return s instanceof RegExp?e.string().regex(s):s instanceof Date?a(e.date(),s):(t(Object.getPrototypeOf(s)===Object.getPrototypeOf({}),"Schema can only contain plain objects"),e.object().keys(s))},e.ref=function(e,t){return s.isRef(e)?e:s.create(e,t)},e.compile=function(s,i,a={}){r.assertOptions(a,["legacy"]);const o=i&&i[r.symbols.any];if(o)return t(a.legacy||o.version===r.version,"Cannot mix different versions of joi schemas:",o.version,r.version),i;if("object"!=typeof i||!a.legacy)return e.schema(s,i,{appendPath:!0});const l=n.walk(i);return l?l.compile(l.root,i):e.schema(s,i,{appendPath:!0})},n.walk=function(e){if("object"!=typeof e)return null;if(Array.isArray(e)){for(const t of e){const e=n.walk(t);if(e)return e}return null}const s=e[r.symbols.any];if(s)return{root:e[s.root],compile:s.compile};t(Object.getPrototypeOf(e)===Object.getPrototypeOf({}),"Schema can only contain plain objects");for(const t in e){const r=n.walk(e[t]);if(r)return r}return null},n.simple=function(e){return null===e||["boolean","string","number"].includes(typeof e)},e.when=function(i,a,o){if(void 0===o&&(t(a&&"object"==typeof a,"Missing options"),o=a,a=s.create(".")),Array.isArray(o)&&(o={switch:o}),r.assertOptions(o,["is","not","then","otherwise","switch","break"]),r.isSchema(a))return t(void 0===o.is,'"is" can not be used with a schema condition'),t(void 0===o.not,'"not" can not be used with a schema condition'),t(void 0===o.switch,'"switch" can not be used with a schema condition'),n.condition(i,{is:a,then:o.then,otherwise:o.otherwise,break:o.break});if(t(s.isRef(a)||"string"==typeof a,"Invalid condition:",a),t(void 0===o.not||void 0===o.is,'Cannot combine "is" with "not"'),void 0===o.switch){let l=o;void 0!==o.not&&(l={is:o.not,then:o.otherwise,otherwise:o.then,break:o.break});let c=void 0!==l.is?i.$_compile(l.is):i.$_root.invalid(null,!1,0,"").required();return t(void 0!==l.then||void 0!==l.otherwise,'options must have at least one of "then", "otherwise", or "switch"'),t(void 0===l.break||void 0===l.then||void 0===l.otherwise,"Cannot specify then, otherwise, and break all together"),void 0===o.is||s.isRef(o.is)||r.isSchema(o.is)||(c=c.required()),n.condition(i,{ref:e.ref(a),is:c,then:l.then,otherwise:l.otherwise,break:l.break})}t(Array.isArray(o.switch),'"switch" must be an array'),t(void 0===o.is,'Cannot combine "switch" with "is"'),t(void 0===o.not,'Cannot combine "switch" with "not"'),t(void 0===o.then,'Cannot combine "switch" with "then"');const l={ref:e.ref(a),switch:[],break:o.break};for(let e=0;e<o.switch.length;++e){const n=o.switch[e],a=e===o.switch.length-1;r.assertOptions(n,a?["is","then","otherwise"]:["is","then"]),t(void 0!==n.is,'Switch statement missing "is"'),t(void 0!==n.then,'Switch statement missing "then"');const c={is:i.$_compile(n.is),then:i.$_compile(n.then)};if(s.isRef(n.is)||r.isSchema(n.is)||(c.is=c.is.required()),a){t(void 0===o.otherwise||void 0===n.otherwise,'Cannot specify "otherwise" inside and outside a "switch"');const e=void 0!==o.otherwise?o.otherwise:n.otherwise;void 0!==e&&(t(void 0===l.break,"Cannot specify both otherwise and break"),c.otherwise=i.$_compile(e))}l.switch.push(c)}return l},n.condition=function(e,t){for(const r of["then","otherwise"])void 0===t[r]?delete t[r]:t[r]=e.$_compile(t[r]);return t}}(compile)),compile}var extend={},hasRequiredExtend;function requireExtend(){if(hasRequiredExtend)return extend;hasRequiredExtend=1;const e=assert,t=clone,r=requireCommon(),s=requireMessages(),n={};return extend.type=function(i,a){const o=Object.getPrototypeOf(i),l=t(o),c=i._assign(Object.create(l)),d=Object.assign({},a);delete d.base,l._definition=d;const u=o._definition||{};d.messages=s.merge(u.messages,d.messages),d.properties=Object.assign({},u.properties,d.properties),c.type=d.type,d.flags=Object.assign({},u.flags,d.flags);const p=Object.assign({},u.terms);if(d.terms)for(const t in d.terms){const r=d.terms[t];e(void 0===c.$_terms[t],"Invalid term override for",d.type,t),c.$_terms[t]=r.init,p[t]=r}d.terms=p,d.args||(d.args=u.args),d.prepare=n.prepare(d.prepare,u.prepare),d.coerce&&("function"==typeof d.coerce&&(d.coerce={method:d.coerce}),d.coerce.from&&!Array.isArray(d.coerce.from)&&(d.coerce={method:d.coerce.method,from:[].concat(d.coerce.from)})),d.coerce=n.coerce(d.coerce,u.coerce),d.validate=n.validate(d.validate,u.validate);const h=Object.assign({},u.rules);if(d.rules)for(const t in d.rules){const s=d.rules[t];e("object"==typeof s,"Invalid rule definition for",d.type,t);let n=s.method;if(void 0===n&&(n=function(){return this.$_addRule(t)}),n&&(e(!l[t],"Rule conflict in",d.type,t),l[t]=n),e(!h[t],"Rule conflict in",d.type,t),h[t]=s,s.alias){const e=[].concat(s.alias);for(const t of e)l[t]=s.method}s.args&&(s.argsByName=new Map,s.args=s.args.map((t=>("string"==typeof t&&(t={name:t}),e(!s.argsByName.has(t.name),"Duplicated argument name",t.name),r.isSchema(t.assert)&&(t.assert=t.assert.strict().label(t.name)),s.argsByName.set(t.name,t),t))))}d.rules=h;const f=Object.assign({},u.modifiers);if(d.modifiers)for(const t in d.modifiers){e(!l[t],"Rule conflict in",d.type,t);const r=d.modifiers[t];e("function"==typeof r,"Invalid modifier definition for",d.type,t);const s=function(e){return this.rule({[t]:e})};l[t]=s,f[t]=r}if(d.modifiers=f,d.overrides){l._super=o,c.$_super={};for(const t in d.overrides)e(o[t],"Cannot override missing",t),d.overrides[t][r.symbols.parent]=o[t],c.$_super[t]=o[t].bind(c);Object.assign(l,d.overrides)}d.cast=Object.assign({},u.cast,d.cast);const m=Object.assign({},u.manifest,d.manifest);return m.build=n.build(d.manifest&&d.manifest.build,u.manifest&&u.manifest.build),d.manifest=m,d.rebuild=n.rebuild(d.rebuild,u.rebuild),c},n.build=function(e,t){return e&&t?function(r,s){return t(e(r,s),s)}:e||t},n.coerce=function(e,t){return e&&t?{from:e.from&&t.from?[...new Set([...e.from,...t.from])]:null,method(r,s){let n;if((!t.from||t.from.includes(typeof r))&&(n=t.method(r,s),n)){if(n.errors||void 0===n.value)return n;r=n.value}if(!e.from||e.from.includes(typeof r)){const t=e.method(r,s);if(t)return t}return n}}:e||t},n.prepare=function(e,t){return e&&t?function(r,s){const n=e(r,s);if(n){if(n.errors||void 0===n.value)return n;r=n.value}return t(r,s)||n}:e||t},n.rebuild=function(e,t){return e&&t?function(r){t(r),e(r)}:e||t},n.validate=function(e,t){return e&&t?function(r,s){const n=t(r,s);if(n){if(n.errors&&(!Array.isArray(n.errors)||n.errors.length))return n;r=n.value}return e(r,s)||n}:e||t},extend}var manifest={},hasRequiredManifest;function requireManifest(){if(hasRequiredManifest)return manifest;hasRequiredManifest=1;const e=assert,t=clone,r=requireCommon(),s=requireMessages(),n=requireRef(),i=requireTemplate();let a;const o={};return manifest.describe=function(n){const i=n._definition,a={type:n.type,flags:{},rules:[]};for(const e in n._flags)"_"!==e[0]&&(a.flags[e]=o.describe(n._flags[e]));Object.keys(a.flags).length||delete a.flags,n._preferences&&(a.preferences=t(n._preferences,{shallow:["messages"]}),delete a.preferences[r.symbols.prefs],a.preferences.messages&&(a.preferences.messages=s.decompile(a.preferences.messages))),n._valids&&(a.allow=n._valids.describe()),n._invalids&&(a.invalid=n._invalids.describe());for(const e of n._rules){if(!1===i.rules[e.name].manifest)continue;const t={name:e.name};for(const r in i.modifiers)void 0!==e[r]&&(t[r]=o.describe(e[r]));if(e.args){t.args={};for(const r in e.args){const s=e.args[r];("options"!==r||Object.keys(s).length)&&(t.args[r]=o.describe(s,{assign:r}))}Object.keys(t.args).length||delete t.args}a.rules.push(t)}a.rules.length||delete a.rules;for(const t in n.$_terms){if("_"===t[0])continue;e(!a[t],"Cannot describe schema due to internal name conflict with",t);const s=n.$_terms[t];if(!s)continue;if(s instanceof Map){s.size&&(a[t]=[...s.entries()]);continue}if(r.isValues(s)){a[t]=s.describe();continue}e(i.terms[t],"Term",t,"missing configuration");const l=i.terms[t].manifest,c="object"==typeof l;if(!s.length&&!c)continue;const d=[];for(const e of s)d.push(o.describe(e));if(c){const{from:e,to:r}=l.mapped;a[t]={};for(const s of d)a[t][s[r]]=s[e]}else"single"!==l?a[t]=d:(e(1===d.length,"Term",t,"contains more than one item"),a[t]=d[0])}return o.validate(n.$_root,a),a},o.describe=function(e,s={}){if(Array.isArray(e))return e.map(o.describe);if(e===r.symbols.deepDefault)return{special:"deep"};if("object"!=typeof e||null===e)return e;if("options"===s.assign)return t(e);if(Buffer&&Buffer.isBuffer(e))return{buffer:e.toString("binary")};if(e instanceof Date)return e.toISOString();if(e instanceof Error)return e;if(e instanceof RegExp)return"regex"===s.assign?e.toString():{regex:e.toString()};if(e[r.symbols.literal])return{function:e.literal};if("function"==typeof e.describe)return"ref"===s.assign?e.describe().ref:e.describe();const n={};for(const t in e){const r=e[t];void 0!==r&&(n[t]=o.describe(r,{assign:t}))}return n},manifest.build=function(e,t){return new o.Builder(e).parse(t)},o.Builder=class{constructor(e){this.joi=e}parse(t){o.validate(this.joi,t);let r=this.joi[t.type]()._bare();const s=r._definition;if(t.flags)for(const n in t.flags){const i=s.flags[n]&&s.flags[n].setter||n;e("function"==typeof r[i],"Invalid flag",n,"for type",t.type),r=r[i](this.build(t.flags[n]))}if(t.preferences&&(r=r.preferences(this.build(t.preferences))),t.allow&&(r=r.allow(...this.build(t.allow))),t.invalid&&(r=r.invalid(...this.build(t.invalid))),t.rules)for(const n of t.rules){e("function"==typeof r[n.name],"Invalid rule",n.name,"for type",t.type);const i=[];if(n.args){const r={};for(const e in n.args)r[e]=this.build(n.args[e],{assign:e});const a=Object.keys(r),o=s.rules[n.name].args;if(o){e(a.length<=o.length,"Invalid number of arguments for",t.type,n.name,"(expected up to",o.length,", found",a.length,")");for(const{name:e}of o)i.push(r[e])}else e(1===a.length,"Invalid number of arguments for",t.type,n.name,"(expected up to 1, found",a.length,")"),i.push(r[a[0]])}r=r[n.name](...i);const a={};for(const e in s.modifiers)void 0!==n[e]&&(a[e]=this.build(n[e]));Object.keys(a).length&&(r=r.rule(a))}const n={};for(const r in t){if(["allow","flags","invalid","whens","preferences","rules","type"].includes(r))continue;e(s.terms[r],"Term",r,"missing configuration");const i=s.terms[r].manifest;if("schema"!==i)if("values"!==i)if("single"!==i)if("object"!=typeof i)n[r]=this.build(t[r]);else{n[r]={};for(const e in t[r]){const s=t[r][e];n[r][e]=this.parse(s)}}else n[r]=this.build(t[r]);else n[r]=t[r].map((e=>this.build(e)));else n[r]=t[r].map((e=>this.parse(e)))}return t.whens&&(n.whens=t.whens.map((e=>this.build(e)))),r=s.manifest.build(r,n),r.$_temp.ruleset=!1,r}build(s,a={}){if(null===s)return null;if(Array.isArray(s))return s.map((e=>this.build(e)));if(s instanceof Error)return s;if("options"===a.assign)return t(s);if("regex"===a.assign)return o.regex(s);if("ref"===a.assign)return n.build(s);if("object"!=typeof s)return s;if(1===Object.keys(s).length){if(s.buffer)return e(Buffer,"Buffers are not supported"),Buffer&&Buffer.from(s.buffer,"binary");if(s.function)return{[r.symbols.literal]:!0,literal:s.function};if(s.override)return r.symbols.override;if(s.ref)return n.build(s.ref);if(s.regex)return o.regex(s.regex);if(s.special)return e(["deep"].includes(s.special),"Unknown special value",s.special),r.symbols.deepDefault;if(s.value)return t(s.value)}if(s.type)return this.parse(s);if(s.template)return i.build(s);const l={};for(const e in s)l[e]=this.build(s[e],{assign:e});return l}},o.regex=function(e){const t=e.lastIndexOf("/"),r=e.slice(1,t),s=e.slice(t+1);return new RegExp(r,s)},o.validate=function(e,t){a=a||requireSchemas(),e.assert(t,a.description)},manifest}var trace={};const Types=typesExports,internals$6={mismatched:null};var deepEqual=function(e,t,r){return r=Object.assign({prototype:!0},r),!!internals$6.isDeepEqual(e,t,r,[])};internals$6.isDeepEqual=function(e,t,r,s){if(e===t)return 0!==e||1/e==1/t;const n=typeof e;if(n!==typeof t)return!1;if(null===e||null===t)return!1;if("function"===n){if(!r.deepFunction||e.toString()!==t.toString())return!1}else if("object"!==n)return e!=e&&t!=t;const i=internals$6.getSharedType(e,t,!!r.prototype);switch(i){case Types.buffer:return Buffer&&Buffer.prototype.equals.call(e,t);case Types.promise:return e===t;case Types.regex:return e.toString()===t.toString();case internals$6.mismatched:return!1}for(let r=s.length-1;r>=0;--r)if(s[r].isSame(e,t))return!0;s.push(new internals$6.SeenEntry(e,t));try{return!!internals$6.isDeepEqualObj(i,e,t,r,s)}finally{s.pop()}},internals$6.getSharedType=function(e,t,r){if(r)return Object.getPrototypeOf(e)!==Object.getPrototypeOf(t)?internals$6.mismatched:Types.getInternalProto(e);const s=Types.getInternalProto(e);return s!==Types.getInternalProto(t)?internals$6.mismatched:s},internals$6.valueOf=function(e){const t=e.valueOf;if(void 0===t)return e;try{return t.call(e)}catch(e){return e}},internals$6.hasOwnEnumerableProperty=function(e,t){return Object.prototype.propertyIsEnumerable.call(e,t)},internals$6.isSetSimpleEqual=function(e,t){for(const r of Set.prototype.values.call(e))if(!Set.prototype.has.call(t,r))return!1;return!0},internals$6.isDeepEqualObj=function(e,t,r,s,n){const{isDeepEqual:i,valueOf:a,hasOwnEnumerableProperty:o}=internals$6,{keys:l,getOwnPropertySymbols:c}=Object;if(e===Types.array){if(!s.part){if(t.length!==r.length)return!1;for(let e=0;e<t.length;++e)if(!i(t[e],r[e],s,n))return!1;return!0}for(const e of t)for(const t of r)if(i(e,t,s,n))return!0}else if(e===Types.set){if(t.size!==r.size)return!1;if(!internals$6.isSetSimpleEqual(t,r)){const e=new Set(Set.prototype.values.call(r));for(const r of Set.prototype.values.call(t)){if(e.delete(r))continue;let t=!1;for(const a of e)if(i(r,a,s,n)){e.delete(a),t=!0;break}if(!t)return!1}}}else if(e===Types.map){if(t.size!==r.size)return!1;for(const[e,a]of Map.prototype.entries.call(t)){if(void 0===a&&!Map.prototype.has.call(r,e))return!1;if(!i(a,Map.prototype.get.call(r,e),s,n))return!1}}else if(e===Types.error&&(t.name!==r.name||t.message!==r.message))return!1;const d=a(t),u=a(r);if((t!==d||r!==u)&&!i(d,u,s,n))return!1;const p=l(t);if(!s.part&&p.length!==l(r).length&&!s.skip)return!1;let h=0;for(const e of p)if(s.skip&&s.skip.includes(e))void 0===r[e]&&++h;else{if(!o(r,e))return!1;if(!i(t[e],r[e],s,n))return!1}if(!s.part&&p.length-h!==l(r).length)return!1;if(!1!==s.symbols){const e=c(t),a=new Set(c(r));for(const l of e){if(!s.skip||!s.skip.includes(l))if(o(t,l)){if(!o(r,l))return!1;if(!i(t[l],r[l],s,n))return!1}else if(o(r,l))return!1;a.delete(l)}for(const e of a)if(o(r,e))return!1}return!0},internals$6.SeenEntry=class{constructor(e,t){this.obj=e,this.ref=t}isSame(e,t){return this.obj===e&&this.ref===t}};var lib$3={},hasRequiredTrace;function requireTrace(){if(hasRequiredTrace)return trace;hasRequiredTrace=1;const e=deepEqual,t=lib$3,r=requireErrors(),s={codes:{error:1,pass:2,full:3},labels:{0:"never used",1:"always error",2:"always pass"}};return trace.setup=function(e){const t=function(){return e._tracer=e._tracer||new s.Tracer,e._tracer};e.trace=t,e[Symbol.for("@hapi/lab/coverage/initialize")]=t,e.untrace=()=>{e._tracer=null}},trace.location=function(e){return e.$_setFlag("_tracerLocation",t.location(2))},s.Tracer=class{constructor(){this.name="Joi",this._schemas=new Map}_register(e){const r=this._schemas.get(e);if(r)return r.store;const n=new s.Store(e),{filename:i,line:a}=e._flags._tracerLocation||t.location(5);return this._schemas.set(e,{filename:i,line:a,store:n}),n}_combine(e,t){for(const{store:r}of this._schemas.values())r._combine(e,t)}report(e){const t=[];for(const{filename:r,line:n,store:i}of this._schemas.values()){if(e&&e!==r)continue;const a=[],o=[];for(const[e,t]of i._sources.entries()){if(s.sub(t.paths,o))continue;if(!t.entry){a.push({status:"never reached",paths:[...t.paths]}),o.push(...t.paths);continue}for(const r of["valid","invalid"]){const s=e[`_${r}s`];if(!s)continue;const n=new Set(s._values),i=new Set(s._refs);for(const{value:e,ref:s}of t[r])n.delete(e),i.delete(s);(n.size||i.size)&&a.push({status:[...n,...[...i].map((e=>e.display))],rule:`${r}s`})}const r=e._rules.map((e=>e.name));for(const t of["default","failover"])void 0!==e._flags[t]&&r.push(t);for(const e of r){const r=s.labels[t.rule[e]||0];if(r){const s={rule:e,status:r};t.paths.size&&(s.paths=[...t.paths]),a.push(s)}}}a.length&&t.push({filename:r,line:n,missing:a,severity:"error",message:`Schema missing tests for ${a.map(s.message).join(", ")}`})}return t.length?t:null}},s.Store=class{constructor(e){this.active=!0,this._sources=new Map,this._combos=new Map,this._scan(e)}debug(e,t,r,s){e.mainstay.debug&&e.mainstay.debug.push({type:t,name:r,result:s,path:e.path})}entry(e,t){s.debug(t,{type:"entry"}),this._record(e,(e=>{e.entry=!0}))}filter(e,t,r,n){s.debug(t,{type:r,...n}),this._record(e,(e=>{e[r].add(n)}))}log(e,t,r,n,i){s.debug(t,{type:r,name:n,result:"full"===i?"pass":i}),this._record(e,(e=>{e[r][n]=e[r][n]||0,e[r][n]|=s.codes[i]}))}resolve(e,t,r){if(!e.mainstay.debug)return;const s={type:"resolve",ref:t.display,to:r,path:e.path};e.mainstay.debug.push(s)}value(t,r,s,n,i){if(!t.mainstay.debug||e(s,n))return;const a={type:"value",by:r,from:s,to:n,path:t.path};i&&(a.name=i),t.mainstay.debug.push(a)}_record(e,t){const r=this._sources.get(e);if(r)return void t(r);const s=this._combos.get(e);for(const e of s)this._record(e,t)}_scan(e,t){const r=t||[];let n=this._sources.get(e);n||(n={paths:new Set,entry:!1,rule:{},valid:new Set,invalid:new Set},this._sources.set(e,n)),r.length&&n.paths.add(r);e.$_modify({each:(e,t)=>{const n=s.id(e,t);this._scan(e,r.concat(n))},ref:!1})}_combine(e,t){this._combos.set(e,t)}},s.message=function(e){return`${e.paths?r.path(e.paths[0])+(e.rule?":":""):""}${e.rule||""} (${e.status})`},s.id=function(e,{source:t,name:r,path:s,key:n}){return e._flags.id?e._flags.id:n||(r=`@${r}`,"terms"===t?[r,s[Math.min(s.length-1,1)]]:r)},s.sub=function(t,r){for(const s of t)for(const t of r)if(e(s.slice(0,t.length),t))return!0;return!1},s.debug=function(e,t){e.mainstay.debug&&(t.path=e.debug?[...e.path,e.debug]:e.path,e.mainstay.debug.push(t))},trace}lib$3.location=function(e=0){const t=Error.prepareStackTrace;Error.prepareStackTrace=(e,t)=>t;const r={};Error.captureStackTrace(r,this);const s=r.stack[e+1];return Error.prepareStackTrace=t,{filename:s.getFileName(),line:s.getLineNumber()}};const Assert$4=assert,Clone$1=clone,Utils=utils,internals$5={};var merge=internals$5.merge=function(e,t,r){if(Assert$4(e&&"object"==typeof e,"Invalid target value: must be an object"),Assert$4(null==t||"object"==typeof t,"Invalid source value: must be null, undefined, or an object"),!t)return e;if(r=Object.assign({nullOverride:!0,mergeArrays:!0},r),Array.isArray(t)){Assert$4(Array.isArray(e),"Cannot merge array onto an object"),r.mergeArrays||(e.length=0);for(let s=0;s<t.length;++s)e.push(Clone$1(t[s],{symbols:r.symbols}));return e}const s=Utils.keys(t,r);for(let n=0;n<s.length;++n){const i=s[n];if("__proto__"===i||!Object.prototype.propertyIsEnumerable.call(t,i))continue;const a=t[i];if(a&&"object"==typeof a){if(e[i]===a)continue;!e[i]||"object"!=typeof e[i]||Array.isArray(e[i])!==Array.isArray(a)||a instanceof Date||Buffer&&Buffer.isBuffer(a)||a instanceof RegExp?e[i]=Clone$1(a,{symbols:r.symbols}):internals$5.merge(e[i],a,r)}else(null!=a||r.nullOverride)&&(e[i]=a)}return e},modify={},hasRequiredModify;function requireModify(){return hasRequiredModify||(hasRequiredModify=1,function(e){const t=assert,r=requireCommon(),s=requireRef(),n={};e.Ids=n.Ids=class{constructor(){this._byId=new Map,this._byKey=new Map,this._schemaChain=!1}clone(){const e=new n.Ids;return e._byId=new Map(this._byId),e._byKey=new Map(this._byKey),e._schemaChain=this._schemaChain,e}concat(e){e._schemaChain&&(this._schemaChain=!0);for(const[r,s]of e._byId.entries())t(!this._byKey.has(r),"Schema id conflicts with existing key:",r),this._byId.set(r,s);for(const[r,s]of e._byKey.entries())t(!this._byId.has(r),"Schema key conflicts with existing id:",r),this._byKey.set(r,s)}fork(e,s,i){const a=this._collect(e);a.push({schema:i});const o=a.shift();let l={id:o.id,schema:s(o.schema)};t(r.isSchema(l.schema),"adjuster function failed to return a joi schema type");for(const e of a)l={id:e.id,schema:n.fork(e.schema,l.id,l.schema)};return l.schema}labels(e,t=[]){const r=e[0],s=this._get(r);if(!s)return[...t,...e].join(".");const n=e.slice(1);return t=[...t,s.schema._flags.label||r],n.length?s.schema._ids.labels(n,t):t.join(".")}reach(e,r=[]){const s=e[0],n=this._get(s);t(n,"Schema does not contain path",[...r,...e].join("."));const i=e.slice(1);return i.length?n.schema._ids.reach(i,[...r,s]):n.schema}register(e,{key:s}={}){if(!e||!r.isSchema(e))return;(e.$_property("schemaChain")||e._ids._schemaChain)&&(this._schemaChain=!0);const n=e._flags.id;if(n){const r=this._byId.get(n);t(!r||r.schema===e,"Cannot add different schemas with the same id:",n),t(!this._byKey.has(n),"Schema id conflicts with existing key:",n),this._byId.set(n,{schema:e,id:n})}s&&(t(!this._byKey.has(s),"Schema already contains key:",s),t(!this._byId.has(s),"Schema key conflicts with existing id:",s),this._byKey.set(s,{schema:e,id:s}))}reset(){this._byId=new Map,this._byKey=new Map,this._schemaChain=!1}_collect(e,r=[],s=[]){const n=e[0],i=this._get(n);t(i,"Schema does not contain path",[...r,...e].join(".")),s=[i,...s];const a=e.slice(1);return a.length?i.schema._ids._collect(a,[...r,n],s):s}_get(e){return this._byId.get(e)||this._byKey.get(e)}},n.fork=function(t,r,s){const n=e.schema(t,{each:(e,{key:t})=>{if(r===(e._flags.id||t))return s},ref:!1});return n?n.$_mutateRebuild():t},e.schema=function(e,t){let r;for(const s in e._flags){if("_"===s[0])continue;const i=n.scan(e._flags[s],{source:"flags",name:s},t);void 0!==i&&(r=r||e.clone(),r._flags[s]=i)}for(let s=0;s<e._rules.length;++s){const i=e._rules[s],a=n.scan(i.args,{source:"rules",name:i.name},t);if(void 0!==a){r=r||e.clone();const t=Object.assign({},i);t.args=a,r._rules[s]=t;r._singleRules.get(i.name)===i&&r._singleRules.set(i.name,t)}}for(const s in e.$_terms){if("_"===s[0])continue;const i=n.scan(e.$_terms[s],{source:"terms",name:s},t);void 0!==i&&(r=r||e.clone(),r.$_terms[s]=i)}return r},n.scan=function(e,t,i,a,o){const l=a||[];if(null===e||"object"!=typeof e)return;let c;if(Array.isArray(e)){for(let r=0;r<e.length;++r){const s="terms"===t.source&&"keys"===t.name&&e[r].key,a=n.scan(e[r],t,i,[r,...l],s);void 0!==a&&(c=c||e.slice(),c[r]=a)}return c}if(!1!==i.schema&&r.isSchema(e)||!1!==i.ref&&s.isRef(e)){const r=i.each(e,{...t,path:l,key:o});if(r===e)return;return r}for(const r in e){if("_"===r[0])continue;const s=n.scan(e[r],t,i,[r,...l],o);void 0!==s&&(c=c||Object.assign({},e),c[r]=s)}return c}}(modify)),modify}var validator={},ignore=function(){},state,hasRequiredState,hasRequiredValidator,values,hasRequiredValues,base,hasRequiredBase,any,hasRequiredAny,alternatives,hasRequiredAlternatives,array,hasRequiredArray,boolean,hasRequiredBoolean,date,hasRequiredDate;function requireState(){if(hasRequiredState)return state;hasRequiredState=1;const e=clone,t=reach,r=requireCommon(),s={value:Symbol("value")};return state=s.State=class{constructor(e,t,r){this.path=e,this.ancestors=t,this.mainstay=r.mainstay,this.schemas=r.schemas,this.debug=null}localize(e,t=null,r=null){const n=new s.State(e,t,this);return r&&n.schemas&&(n.schemas=[s.schemas(r),...n.schemas]),n}nest(e,t){const r=new s.State(this.path,this.ancestors,this);return r.schemas=r.schemas&&[s.schemas(e),...r.schemas],r.debug=t,r}shadow(e,t){this.mainstay.shadow=this.mainstay.shadow||new s.Shadow,this.mainstay.shadow.set(this.path,e,t)}snapshot(){this.mainstay.shadow&&(this._snapshot=e(this.mainstay.shadow.node(this.path))),this.mainstay.snapshot()}restore(){this.mainstay.shadow&&(this.mainstay.shadow.override(this.path,this._snapshot),this._snapshot=void 0),this.mainstay.restore()}commit(){this.mainstay.shadow&&(this.mainstay.shadow.override(this.path,this._snapshot),this._snapshot=void 0),this.mainstay.commit()}},s.schemas=function(e){return r.isSchema(e)?{schema:e}:e},s.Shadow=class{constructor(){this._values=null}set(e,t,r){if(!e.length)return;if("strip"===r&&"number"==typeof e[e.length-1])return;this._values=this._values||new Map;let n=this._values;for(let t=0;t<e.length;++t){const r=e[t];let s=n.get(r);s||(s=new Map,n.set(r,s)),n=s}n[s.value]=t}get(e){const t=this.node(e);if(t)return t[s.value]}node(e){if(this._values)return t(this._values,e,{iterables:!0})}override(e,r){if(!this._values)return;const s=e.slice(0,-1),n=e[e.length-1],i=t(this._values,s,{iterables:!0});r?i.set(n,r):i&&i.delete(n)}},state}function requireValidator(){return hasRequiredValidator||(hasRequiredValidator=1,function(e){const t=assert,r=clone,s=ignore,n=reach,i=requireCommon(),a=requireErrors(),o=requireState(),l={result:Symbol("result")};e.entry=function(e,r,s){let n=i.defaults;s&&(t(void 0===s.warnings,"Cannot override warnings preference in synchronous validation"),t(void 0===s.artifacts,"Cannot override artifacts preference in synchronous validation"),n=i.preferences(i.defaults,s));const o=l.entry(e,r,n);t(!o.mainstay.externals.length,"Schema with external rules must use validateAsync()");const c={value:o.value};return o.error&&(c.error=o.error),o.mainstay.warnings.length&&(c.warning=a.details(o.mainstay.warnings)),o.mainstay.debug&&(c.debug=o.mainstay.debug),o.mainstay.artifacts&&(c.artifacts=o.mainstay.artifacts),c},e.entryAsync=async function(e,t,r){let s=i.defaults;r&&(s=i.preferences(i.defaults,r));const o=l.entry(e,t,s),c=o.mainstay;if(o.error)throw c.debug&&(o.error.debug=c.debug),o.error;if(c.externals.length){let t=o.value;const d=[];for(const o of c.externals){const u=o.state.path,p="link"===o.schema.type?c.links.get(o.schema):null;let h,f,m=t;const _=u.length?[t]:[],y=u.length?n(e,u):e;if(u.length){h=u[u.length-1];let e=t;for(const t of u.slice(0,-1))e=e[t],_.unshift(e);f=_[0],m=f[h]}try{const e=(e,t)=>(p||o.schema).$_createError(e,m,t,o.state,s),n=await o.method(m,{schema:o.schema,linked:p,state:o.state,prefs:r,original:y,error:e,errorsArray:l.errorsArray,warn:(e,t)=>c.warnings.push((p||o.schema).$_createError(e,m,t,o.state,s)),message:(e,t)=>(p||o.schema).$_createError("external",m,t,o.state,s,{messages:e})});if(void 0===n||n===m)continue;if(n instanceof a.Report){if(c.tracer.log(o.schema,o.state,"rule","external","error"),d.push(n),s.abortEarly)break;continue}if(Array.isArray(n)&&n[i.symbols.errors]){if(c.tracer.log(o.schema,o.state,"rule","external","error"),d.push(...n),s.abortEarly)break;continue}f?(c.tracer.value(o.state,"rule",m,n,"external"),f[h]=n):(c.tracer.value(o.state,"rule",t,n,"external"),t=n)}catch(e){throw s.errors.label&&(e.message+=` (${o.label})`),e}}if(o.value=t,d.length)throw o.error=a.process(d,e,s),c.debug&&(o.error.debug=c.debug),o.error}if(!s.warnings&&!s.debug&&!s.artifacts)return o.value;const d={value:o.value};return c.warnings.length&&(d.warning=a.details(c.warnings)),c.debug&&(d.debug=c.debug),c.artifacts&&(d.artifacts=c.artifacts),d},l.Mainstay=class{constructor(e,t,r){this.externals=[],this.warnings=[],this.tracer=e,this.debug=t,this.links=r,this.shadow=null,this.artifacts=null,this._snapshots=[]}snapshot(){this._snapshots.push({externals:this.externals.slice(),warnings:this.warnings.slice()})}restore(){const e=this._snapshots.pop();this.externals=e.externals,this.warnings=e.warnings}commit(){this._snapshots.pop()}},l.entry=function(t,r,s){const{tracer:n,cleanup:i}=l.tracer(r,s),c=s.debug?[]:null,d=r._ids._schemaChain?new Map:null,u=new l.Mainstay(n,c,d),p=r._ids._schemaChain?[{schema:r}]:null,h=new o([],[],{mainstay:u,schemas:p}),f=e.validate(t,r,h,s);i&&r.$_root.untrace();const m=a.process(f.errors,t,s);return{value:f.value,error:m,mainstay:u}},l.tracer=function(e,r){return e.$_root._tracer?{tracer:e.$_root._tracer._register(e)}:r.debug?(t(e.$_root.trace,"Debug mode not supported"),{tracer:e.$_root.trace()._register(e),cleanup:!0}):{tracer:l.ignore}},e.validate=function(e,t,r,s,n={}){if(t.$_terms.whens&&(t=t._generate(e,r,s).schema),t._preferences&&(s=l.prefs(t,s)),t._cache&&s.cache){const s=t._cache.get(e);if(r.mainstay.tracer.debug(r,"validate","cached",!!s),s)return s}const a=(n,i,a)=>t.$_createError(n,e,i,a||r,s),o={original:e,prefs:s,schema:t,state:r,error:a,errorsArray:l.errorsArray,warn:(e,t,s)=>r.mainstay.warnings.push(a(e,t,s)),message:(n,i)=>t.$_createError("custom",e,i,r,s,{messages:n})};r.mainstay.tracer.entry(t,r);const c=t._definition;if(c.prepare&&void 0!==e&&s.convert){const t=c.prepare(e,o);if(t){if(r.mainstay.tracer.value(r,"prepare",e,t.value),t.errors)return l.finalize(t.value,[].concat(t.errors),o);e=t.value}}if(c.coerce&&void 0!==e&&s.convert&&(!c.coerce.from||c.coerce.from.includes(typeof e))){const t=c.coerce.method(e,o);if(t){if(r.mainstay.tracer.value(r,"coerced",e,t.value),t.errors)return l.finalize(t.value,[].concat(t.errors),o);e=t.value}}const d=t._flags.empty;d&&d.$_match(l.trim(e,t),r.nest(d),i.defaults)&&(r.mainstay.tracer.value(r,"empty",e,void 0),e=void 0);const u=n.presence||t._flags.presence||(t._flags._endedSwitch?null:s.presence);if(void 0===e){if("forbidden"===u)return l.finalize(e,null,o);if("required"===u)return l.finalize(e,[t.$_createError("any.required",e,null,r,s)],o);if("optional"===u){if(t._flags.default!==i.symbols.deepDefault)return l.finalize(e,null,o);r.mainstay.tracer.value(r,"default",e,{}),e={}}}else if("forbidden"===u)return l.finalize(e,[t.$_createError("any.unknown",e,null,r,s)],o);const p=[];if(t._valids){const n=t._valids.get(e,r,s,t._flags.insensitive);if(n)return s.convert&&(r.mainstay.tracer.value(r,"valids",e,n.value),e=n.value),r.mainstay.tracer.filter(t,r,"valid",n),l.finalize(e,null,o);if(t._flags.only){const n=t.$_createError("any.only",e,{valids:t._valids.values({display:!0})},r,s);if(s.abortEarly)return l.finalize(e,[n],o);p.push(n)}}if(t._invalids){const n=t._invalids.get(e,r,s,t._flags.insensitive);if(n){r.mainstay.tracer.filter(t,r,"invalid",n);const i=t.$_createError("any.invalid",e,{invalids:t._invalids.values({display:!0})},r,s);if(s.abortEarly)return l.finalize(e,[i],o);p.push(i)}}if(c.validate){const t=c.validate(e,o);if(t&&(r.mainstay.tracer.value(r,"base",e,t.value),e=t.value,t.errors)){if(!Array.isArray(t.errors))return p.push(t.errors),l.finalize(e,p,o);if(t.errors.length)return p.push(...t.errors),l.finalize(e,p,o)}}return t._rules.length?l.rules(e,p,o):l.finalize(e,p,o)},l.rules=function(e,t,r){const{schema:s,state:n,prefs:a}=r;for(const o of s._rules){const c=s._definition.rules[o.method];if(c.convert&&a.convert){n.mainstay.tracer.log(s,n,"rule",o.name,"full");continue}let d,u=o.args;if(o._resolve.length){u=Object.assign({},u);for(const t of o._resolve){const r=c.argsByName.get(t),o=u[t].resolve(e,n,a),l=r.normalize?r.normalize(o):o,p=i.validateArg(l,null,r);if(p){d=s.$_createError("any.ref",o,{arg:t,ref:u[t],reason:p},n,a);break}u[t]=l}}d=d||c.validate(e,r,u,o);const p=l.rule(d,o);if(p.errors){if(n.mainstay.tracer.log(s,n,"rule",o.name,"error"),o.warn){n.mainstay.warnings.push(...p.errors);continue}if(a.abortEarly)return l.finalize(e,p.errors,r);t.push(...p.errors)}else n.mainstay.tracer.log(s,n,"rule",o.name,"pass"),n.mainstay.tracer.value(n,"rule",e,p.value,o.name),e=p.value}return l.finalize(e,t,r)},l.rule=function(e,t){return e instanceof a.Report?(l.error(e,t),{errors:[e],value:null}):Array.isArray(e)&&e[i.symbols.errors]?(e.forEach((e=>l.error(e,t))),{errors:e,value:null}):{errors:null,value:e}},l.error=function(e,t){return t.message&&e._setTemplate(t.message),e},l.finalize=function(e,r,s){r=r||[];const{schema:n,state:i,prefs:o}=s;if(r.length){const t=l.default("failover",void 0,r,s);void 0!==t&&(i.mainstay.tracer.value(i,"failover",e,t),e=t,r=[])}if(r.length&&n._flags.error)if("function"==typeof n._flags.error){r=n._flags.error(r),Array.isArray(r)||(r=[r]);for(const e of r)t(e instanceof Error||e instanceof a.Report,"error() must return an Error object")}else r=[n._flags.error];if(void 0===e){const t=l.default("default",e,r,s);i.mainstay.tracer.value(i,"default",e,t),e=t}if(n._flags.cast&&void 0!==e){const t=n._definition.cast[n._flags.cast];if(t.from(e)){const r=t.to(e,s);i.mainstay.tracer.value(i,"cast",e,r,n._flags.cast),e=r}}if(n.$_terms.externals&&o.externals&&!1!==o._externals)for(const{method:e}of n.$_terms.externals)i.mainstay.externals.push({method:e,schema:n,state:i,label:a.label(n._flags,i,o)});const c={value:e,errors:r.length?r:null};return n._flags.result&&(c.value="strip"===n._flags.result?void 0:s.original,i.mainstay.tracer.value(i,n._flags.result,e,c.value),i.shadow(e,n._flags.result)),n._cache&&!1!==o.cache&&!n._refs.length&&n._cache.set(s.original,c),void 0===e||c.errors||void 0===n._flags.artifact||(i.mainstay.artifacts=i.mainstay.artifacts||new Map,i.mainstay.artifacts.has(n._flags.artifact)||i.mainstay.artifacts.set(n._flags.artifact,[]),i.mainstay.artifacts.get(n._flags.artifact).push(i.path)),c},l.prefs=function(e,t){const r=t===i.defaults;return r&&e._preferences[i.symbols.prefs]?e._preferences[i.symbols.prefs]:(t=i.preferences(t,e._preferences),r&&(e._preferences[i.symbols.prefs]=t),t)},l.default=function(e,t,s,n){const{schema:a,state:o,prefs:l}=n,c=a._flags[e];if(l.noDefaults||void 0===c)return t;if(o.mainstay.tracer.log(a,o,"rule",e,"full"),!c)return c;if("function"==typeof c){const t=c.length?[r(o.ancestors[0]),n]:[];try{return c(...t)}catch(t){return void s.push(a.$_createError(`any.${e}`,null,{error:t},o,l))}}return"object"!=typeof c?c:c[i.symbols.literal]?c.literal:i.isResolvable(c)?c.resolve(t,o,l):r(c)},l.trim=function(e,t){if("string"!=typeof e)return e;const r=t.$_getRule("trim");return r&&r.args.enabled?e.trim():e},l.ignore={active:!1,debug:s,entry:s,filter:s,log:s,resolve:s,value:s},l.errorsArray=function(){const e=[];return e[i.symbols.errors]=!0,e}}(validator)),validator}function requireValues(){if(hasRequiredValues)return values;hasRequiredValues=1;const e=assert,t=deepEqual,r=requireCommon(),s={};return values=s.Values=class{constructor(e,t){this._values=new Set(e),this._refs=new Set(t),this._lowercase=s.lowercases(e),this._override=!1}get length(){return this._values.size+this._refs.size}add(e,t){r.isResolvable(e)?this._refs.has(e)||(this._refs.add(e),t&&t.register(e)):this.has(e,null,null,!1)||(this._values.add(e),"string"==typeof e&&this._lowercase.set(e.toLowerCase(),e))}static merge(e,t,r){if(e=e||new s.Values,t){if(t._override)return t.clone();for(const r of[...t._values,...t._refs])e.add(r)}if(r)for(const t of[...r._values,...r._refs])e.remove(t);return e.length?e:null}remove(e){r.isResolvable(e)?this._refs.delete(e):(this._values.delete(e),"string"==typeof e&&this._lowercase.delete(e.toLowerCase()))}has(e,t,r,s){return!!this.get(e,t,r,s)}get(e,r,s,n){if(!this.length)return!1;if(this._values.has(e))return{value:e};if("string"==typeof e&&e&&n){const t=this._lowercase.get(e.toLowerCase());if(t)return{value:t}}if(!this._refs.size&&"object"!=typeof e)return!1;if("object"==typeof e)for(const r of this._values)if(t(r,e))return{value:r};if(r)for(const i of this._refs){const a=i.resolve(e,r,s,null,{in:!0});if(void 0===a)continue;const o=i.in&&"object"==typeof a?Array.isArray(a)?a:Object.keys(a):[a];for(const r of o)if(typeof r==typeof e)if(n&&e&&"string"==typeof e){if(r.toLowerCase()===e.toLowerCase())return{value:r,ref:i}}else if(t(r,e))return{value:r,ref:i}}return!1}override(){this._override=!0}values(e){if(e&&e.display){const e=[];for(const t of[...this._values,...this._refs])void 0!==t&&e.push(t);return e}return Array.from([...this._values,...this._refs])}clone(){const e=new s.Values(this._values,this._refs);return e._override=this._override,e}concat(t){e(!t._override,"Cannot concat override set of values");const r=new s.Values([...this._values,...t._values],[...this._refs,...t._refs]);return r._override=this._override,r}describe(){const e=[];this._override&&e.push({override:!0});for(const t of this._values.values())e.push(t&&"object"==typeof t?{value:t}:t);for(const t of this._refs.values())e.push(t.describe());return e}},s.Values.prototype[r.symbols.values]=!0,s.Values.prototype.slice=s.Values.prototype.clone,s.lowercases=function(e){const t=new Map;if(e)for(const r of e)"string"==typeof r&&t.set(r.toLowerCase(),r);return t},values}function requireBase(){if(hasRequiredBase)return base;hasRequiredBase=1;const e=assert,t=clone,r=deepEqual,s=merge,n=requireCache(),i=requireCommon(),a=requireCompile(),o=requireErrors(),l=requireExtend(),c=requireManifest(),d=requireMessages(),u=requireModify(),p=requireRef(),h=requireTrace(),f=requireValidator(),m=requireValues(),_={Base:class{constructor(e){this.type=e,this.$_root=null,this._definition={},this._reset()}_reset(){this._ids=new u.Ids,this._preferences=null,this._refs=new p.Manager,this._cache=null,this._valids=null,this._invalids=null,this._flags={},this._rules=[],this._singleRules=new Map,this.$_terms={},this.$_temp={ruleset:null,whens:{}}}describe(){return e("function"==typeof c.describe,"Manifest functionality disabled"),c.describe(this)}allow(...e){return i.verifyFlat(e,"allow"),this._values(e,"_valids")}alter(t){e(t&&"object"==typeof t&&!Array.isArray(t),"Invalid targets argument"),e(!this._inRuleset(),"Cannot set alterations inside a ruleset");const r=this.clone();r.$_terms.alterations=r.$_terms.alterations||[];for(const s in t){const n=t[s];e("function"==typeof n,"Alteration adjuster for",s,"must be a function"),r.$_terms.alterations.push({target:s,adjuster:n})}return r.$_temp.ruleset=!1,r}artifact(t){return e(void 0!==t,"Artifact cannot be undefined"),e(!this._cache,"Cannot set an artifact with a rule cache"),this.$_setFlag("artifact",t)}cast(t){return e(!1===t||"string"==typeof t,"Invalid to value"),e(!1===t||this._definition.cast[t],"Type",this.type,"does not support casting to",t),this.$_setFlag("cast",!1===t?void 0:t)}default(e,t){return this._default("default",e,t)}description(t){return e(t&&"string"==typeof t,"Description must be a non-empty string"),this.$_setFlag("description",t)}empty(e){const t=this.clone();return void 0!==e&&(e=t.$_compile(e,{override:!1})),t.$_setFlag("empty",e,{clone:!1})}error(t){return e(t,"Missing error"),e(t instanceof Error||"function"==typeof t,"Must provide a valid Error object or a function"),this.$_setFlag("error",t)}example(t,r={}){return e(void 0!==t,"Missing example"),i.assertOptions(r,["override"]),this._inner("examples",t,{single:!0,override:r.override})}external(t,r){return"object"==typeof t&&(e(!r,"Cannot combine options with description"),r=t.description,t=t.method),e("function"==typeof t,"Method must be a function"),e(void 0===r||r&&"string"==typeof r,"Description must be a non-empty string"),this._inner("externals",{method:t,description:r},{single:!0})}failover(e,t){return this._default("failover",e,t)}forbidden(){return this.presence("forbidden")}id(t){return t?(e("string"==typeof t,"id must be a non-empty string"),e(/^[^\.]+$/.test(t),"id cannot contain period character"),this.$_setFlag("id",t)):this.$_setFlag("id",void 0)}invalid(...e){return this._values(e,"_invalids")}label(t){return e(t&&"string"==typeof t,"Label name must be a non-empty string"),this.$_setFlag("label",t)}meta(t){return e(void 0!==t,"Meta cannot be undefined"),this._inner("metas",t,{single:!0})}note(...t){e(t.length,"Missing notes");for(const r of t)e(r&&"string"==typeof r,"Notes must be non-empty strings");return this._inner("notes",t)}only(t=!0){return e("boolean"==typeof t,"Invalid mode:",t),this.$_setFlag("only",t)}optional(){return this.presence("optional")}prefs(t){e(t,"Missing preferences"),e(void 0===t.context,"Cannot override context"),e(void 0===t.externals,"Cannot override externals"),e(void 0===t.warnings,"Cannot override warnings"),e(void 0===t.debug,"Cannot override debug"),i.checkPreferences(t);const r=this.clone();return r._preferences=i.preferences(r._preferences,t),r}presence(t){return e(["optional","required","forbidden"].includes(t),"Unknown presence mode",t),this.$_setFlag("presence",t)}raw(e=!0){return this.$_setFlag("result",e?"raw":void 0)}result(t){return e(["raw","strip"].includes(t),"Unknown result mode",t),this.$_setFlag("result",t)}required(){return this.presence("required")}strict(e){const t=this.clone(),r=void 0!==e&&!e;return t._preferences=i.preferences(t._preferences,{convert:r}),t}strip(e=!0){return this.$_setFlag("result",e?"strip":void 0)}tag(...t){e(t.length,"Missing tags");for(const r of t)e(r&&"string"==typeof r,"Tags must be non-empty strings");return this._inner("tags",t)}unit(t){return e(t&&"string"==typeof t,"Unit name must be a non-empty string"),this.$_setFlag("unit",t)}valid(...e){i.verifyFlat(e,"valid");const t=this.allow(...e);return t.$_setFlag("only",!!t._valids,{clone:!1}),t}when(t,r){const s=this.clone();s.$_terms.whens||(s.$_terms.whens=[]);const n=a.when(s,t,r);if(!["any","link"].includes(s.type)){const t=n.is?[n]:n.switch;for(const r of t)e(!r.then||"any"===r.then.type||r.then.type===s.type,"Cannot combine",s.type,"with",r.then&&r.then.type),e(!r.otherwise||"any"===r.otherwise.type||r.otherwise.type===s.type,"Cannot combine",s.type,"with",r.otherwise&&r.otherwise.type)}return s.$_terms.whens.push(n),s.$_mutateRebuild()}cache(t){e(!this._inRuleset(),"Cannot set caching inside a ruleset"),e(!this._cache,"Cannot override schema cache"),e(void 0===this._flags.artifact,"Cannot cache a rule with an artifact");const r=this.clone();return r._cache=t||n.provider.provision(),r.$_temp.ruleset=!1,r}clone(){const e=Object.create(Object.getPrototypeOf(this));return this._assign(e)}concat(t){e(i.isSchema(t),"Invalid schema object"),e("any"===this.type||"any"===t.type||t.type===this.type,"Cannot merge type",this.type,"with another type:",t.type),e(!this._inRuleset(),"Cannot concatenate onto a schema with open ruleset"),e(!t._inRuleset(),"Cannot concatenate a schema with open ruleset");let r=this.clone();if("any"===this.type&&"any"!==t.type){const e=t.clone();for(const t of Object.keys(r))"type"!==t&&(e[t]=r[t]);r=e}r._ids.concat(t._ids),r._refs.register(t,p.toSibling),r._preferences=r._preferences?i.preferences(r._preferences,t._preferences):t._preferences,r._valids=m.merge(r._valids,t._valids,t._invalids),r._invalids=m.merge(r._invalids,t._invalids,t._valids);for(const e of t._singleRules.keys())r._singleRules.has(e)&&(r._rules=r._rules.filter((t=>t.keep||t.name!==e)),r._singleRules.delete(e));for(const e of t._rules)t._definition.rules[e.method].multi||r._singleRules.set(e.name,e),r._rules.push(e);if(r._flags.empty&&t._flags.empty){r._flags.empty=r._flags.empty.concat(t._flags.empty);const e=Object.assign({},t._flags);delete e.empty,s(r._flags,e)}else if(t._flags.empty){r._flags.empty=t._flags.empty;const e=Object.assign({},t._flags);delete e.empty,s(r._flags,e)}else s(r._flags,t._flags);for(const e in t.$_terms){const s=t.$_terms[e];s?r.$_terms[e]?r.$_terms[e]=r.$_terms[e].concat(s):r.$_terms[e]=s.slice():r.$_terms[e]||(r.$_terms[e]=s)}return this.$_root._tracer&&this.$_root._tracer._combine(r,[this,t]),r.$_mutateRebuild()}extend(t){return e(!t.base,"Cannot extend type with another base"),l.type(this,t)}extract(e){return e=Array.isArray(e)?e:e.split("."),this._ids.reach(e)}fork(t,r){e(!this._inRuleset(),"Cannot fork inside a ruleset");let s=this;for(let e of[].concat(t))e=Array.isArray(e)?e:e.split("."),s=s._ids.fork(e,r,s);return s.$_temp.ruleset=!1,s}rule(r){const s=this._definition;i.assertOptions(r,Object.keys(s.modifiers)),e(!1!==this.$_temp.ruleset,"Cannot apply rules to empty ruleset or the last rule added does not support rule properties");const n=null===this.$_temp.ruleset?this._rules.length-1:this.$_temp.ruleset;e(n>=0&&n<this._rules.length,"Cannot apply rules to empty ruleset");const a=this.clone();for(let i=n;i<a._rules.length;++i){const n=a._rules[i],o=t(n);for(const t in r)s.modifiers[t](o,r[t]),e(o.name===n.name,"Cannot change rule name");a._rules[i]=o,a._singleRules.get(o.name)===n&&a._singleRules.set(o.name,o)}return a.$_temp.ruleset=!1,a.$_mutateRebuild()}get ruleset(){e(!this._inRuleset(),"Cannot start a new ruleset without closing the previous one");const t=this.clone();return t.$_temp.ruleset=t._rules.length,t}get $(){return this.ruleset}tailor(t){t=[].concat(t),e(!this._inRuleset(),"Cannot tailor inside a ruleset");let r=this;if(this.$_terms.alterations)for(const{target:s,adjuster:n}of this.$_terms.alterations)t.includes(s)&&(r=n(r),e(i.isSchema(r),"Alteration adjuster for",s,"failed to return a schema object"));return r=r.$_modify({each:e=>e.tailor(t),ref:!1}),r.$_temp.ruleset=!1,r.$_mutateRebuild()}tracer(){return h.location?h.location(this):this}validate(e,t){return f.entry(e,this,t)}validateAsync(e,t){return f.entryAsync(e,this,t)}$_addRule(t){"string"==typeof t&&(t={name:t}),e(t&&"object"==typeof t,"Invalid options"),e(t.name&&"string"==typeof t.name,"Invalid rule name");for(const r in t)e("_"!==r[0],"Cannot set private rule properties");const r=Object.assign({},t);r._resolve=[],r.method=r.method||r.name;const s=this._definition.rules[r.method],n=r.args;e(s,"Unknown rule",r.method);const a=this.clone();if(n){e(1===Object.keys(n).length||Object.keys(n).length===this._definition.rules[r.name].args.length,"Invalid rule definition for",this.type,r.name);for(const t in n){let o=n[t];if(s.argsByName){const l=s.argsByName.get(t);if(l.ref&&i.isResolvable(o))r._resolve.push(t),a.$_mutateRegister(o);else if(l.normalize&&(o=l.normalize(o),n[t]=o),l.assert){const r=i.validateArg(o,t,l);e(!r,r,"or reference")}}void 0!==o?n[t]=o:delete n[t]}}return s.multi||(a._ruleRemove(r.name,{clone:!1}),a._singleRules.set(r.name,r)),!1===a.$_temp.ruleset&&(a.$_temp.ruleset=null),s.priority?a._rules.unshift(r):a._rules.push(r),a}$_compile(e,t){return a.schema(this.$_root,e,t)}$_createError(e,t,r,s,n,i={}){const a=!1!==i.flags?this._flags:{},l=i.messages?d.merge(this._definition.messages,i.messages):this._definition.messages;return new o.Report(e,t,r,a,l,s,n)}$_getFlag(e){return this._flags[e]}$_getRule(e){return this._singleRules.get(e)}$_mapLabels(e){return e=Array.isArray(e)?e:e.split("."),this._ids.labels(e)}$_match(e,t,r,s){(r=Object.assign({},r)).abortEarly=!0,r._externals=!1,t.snapshot();const n=!f.validate(e,this,t,r,s).errors;return t.restore(),n}$_modify(e){return i.assertOptions(e,["each","once","ref","schema"]),u.schema(this,e)||this}$_mutateRebuild(){e(!this._inRuleset(),"Cannot add this rule inside a ruleset"),this._refs.reset(),this._ids.reset();return this.$_modify({each:(e,{source:t,name:r,path:s,key:n})=>{const i=this._definition[t][r]&&this._definition[t][r].register;!1!==i&&this.$_mutateRegister(e,{family:i,key:n})}}),this._definition.rebuild&&this._definition.rebuild(this),this.$_temp.ruleset=!1,this}$_mutateRegister(e,{family:t,key:r}={}){this._refs.register(e,t),this._ids.register(e,{key:r})}$_property(e){return this._definition.properties[e]}$_reach(e){return this._ids.reach(e)}$_rootReferences(){return this._refs.roots()}$_setFlag(t,s,n={}){e("_"===t[0]||!this._inRuleset(),"Cannot set flag inside a ruleset");const i=this._definition.flags[t]||{};if(r(s,i.default)&&(s=void 0),r(s,this._flags[t]))return this;const a=!1!==n.clone?this.clone():this;return void 0!==s?(a._flags[t]=s,a.$_mutateRegister(s)):delete a._flags[t],"_"!==t[0]&&(a.$_temp.ruleset=!1),a}$_parent(e,...t){return this[e][i.symbols.parent].call(this,...t)}$_validate(e,t,r){return f.validate(e,this,t,r)}_assign(e){e.type=this.type,e.$_root=this.$_root,e.$_temp=Object.assign({},this.$_temp),e.$_temp.whens={},e._ids=this._ids.clone(),e._preferences=this._preferences,e._valids=this._valids&&this._valids.clone(),e._invalids=this._invalids&&this._invalids.clone(),e._rules=this._rules.slice(),e._singleRules=t(this._singleRules,{shallow:!0}),e._refs=this._refs.clone(),e._flags=Object.assign({},this._flags),e._cache=null,e.$_terms={};for(const t in this.$_terms)e.$_terms[t]=this.$_terms[t]?this.$_terms[t].slice():null;e.$_super={};for(const t in this.$_super)e.$_super[t]=this._super[t].bind(e);return e}_bare(){const e=this.clone();e._reset();const t=e._definition.terms;for(const r in t){const s=t[r];e.$_terms[r]=s.init}return e.$_mutateRebuild()}_default(t,r,s={}){i.assertOptions(s,"literal"),e(void 0!==r,"Missing",t,"value"),e("function"==typeof r||!s.literal,"Only function value supports literal option"),"function"==typeof r&&s.literal&&(r={[i.symbols.literal]:!0,literal:r});return this.$_setFlag(t,r)}_generate(e,t,r){if(!this.$_terms.whens)return{schema:this};const s=[],n=[];for(let i=0;i<this.$_terms.whens.length;++i){const a=this.$_terms.whens[i];if(a.concat){s.push(a.concat),n.push(`${i}.concat`);continue}const o=a.ref?a.ref.resolve(e,t,r):e,l=a.is?[a]:a.switch,c=n.length;for(let c=0;c<l.length;++c){const{is:d,then:u,otherwise:p}=l[c],h=`${i}${a.switch?"."+c:""}`;if(d.$_match(o,t.nest(d,`${h}.is`),r)){if(u){const i=t.localize([...t.path,`${h}.then`],t.ancestors,t.schemas),{schema:a,id:o}=u._generate(e,i,r);s.push(a),n.push(`${h}.then${o?`(${o})`:""}`);break}}else if(p){const i=t.localize([...t.path,`${h}.otherwise`],t.ancestors,t.schemas),{schema:a,id:o}=p._generate(e,i,r);s.push(a),n.push(`${h}.otherwise${o?`(${o})`:""}`);break}}if(a.break&&n.length>c)break}const i=n.join(", ");if(t.mainstay.tracer.debug(t,"rule","when",i),!i)return{schema:this};if(!t.mainstay.tracer.active&&this.$_temp.whens[i])return{schema:this.$_temp.whens[i],id:i};let a=this;this._definition.generate&&(a=this._definition.generate(this,e,t,r));for(const e of s)a=a.concat(e);return this.$_root._tracer&&this.$_root._tracer._combine(a,[this,...s]),this.$_temp.whens[i]=a,{schema:a,id:i}}_inner(t,r,s={}){e(!this._inRuleset(),`Cannot set ${t} inside a ruleset`);const n=this.clone();return n.$_terms[t]&&!s.override||(n.$_terms[t]=[]),s.single?n.$_terms[t].push(r):n.$_terms[t].push(...r),n.$_temp.ruleset=!1,n}_inRuleset(){return null!==this.$_temp.ruleset&&!1!==this.$_temp.ruleset}_ruleRemove(e,t={}){if(!this._singleRules.has(e))return this;const r=!1!==t.clone?this.clone():this;r._singleRules.delete(e);const s=[];for(let t=0;t<r._rules.length;++t){const n=r._rules[t];n.name!==e||n.keep?s.push(n):r._inRuleset()&&t<r.$_temp.ruleset&&--r.$_temp.ruleset}return r._rules=s,r}_values(t,r){i.verifyFlat(t,r.slice(1,-1));const s=this.clone(),n=t[0]===i.symbols.override;if(n&&(t=t.slice(1)),!s[r]&&t.length?s[r]=new m:n&&(s[r]=t.length?new m:null,s.$_mutateRebuild()),!s[r])return s;n&&s[r].override();for(const n of t){e(void 0!==n,"Cannot call allow/valid/invalid with undefined"),e(n!==i.symbols.override,"Override must be the first value");const t="_invalids"===r?"_valids":"_invalids";s[t]&&(s[t].remove(n),s[t].length||(e("_valids"===r||!s._flags.only,"Setting invalid value",n,"leaves schema rejecting all values due to previous valid rule"),s[t]=null)),s[r].add(n,s._refs)}return s}}};return _.Base.prototype[i.symbols.any]={version:i.version,compile:a.compile,root:"$_root"},_.Base.prototype.isImmutable=!0,_.Base.prototype.deny=_.Base.prototype.invalid,_.Base.prototype.disallow=_.Base.prototype.invalid,_.Base.prototype.equal=_.Base.prototype.valid,_.Base.prototype.exist=_.Base.prototype.required,_.Base.prototype.not=_.Base.prototype.invalid,_.Base.prototype.options=_.Base.prototype.prefs,_.Base.prototype.preferences=_.Base.prototype.prefs,base=new _.Base}function requireAny(){if(hasRequiredAny)return any;hasRequiredAny=1;const e=assert,t=requireBase(),r=requireCommon(),s=requireMessages();return any=t.extend({type:"any",flags:{only:{default:!1}},terms:{alterations:{init:null},examples:{init:null},externals:{init:null},metas:{init:[]},notes:{init:[]},shared:{init:null},tags:{init:[]},whens:{init:null}},rules:{custom:{method(t,r){return e("function"==typeof t,"Method must be a function"),e(void 0===r||r&&"string"==typeof r,"Description must be a non-empty string"),this.$_addRule({name:"custom",args:{method:t,description:r}})},validate(e,t,{method:r}){try{return r(e,t)}catch(e){return t.error("any.custom",{error:e})}},args:["method","description"],multi:!0},messages:{method(e){return this.prefs({messages:e})}},shared:{method(t){e(r.isSchema(t)&&t._flags.id,"Schema must be a schema with an id");const s=this.clone();return s.$_terms.shared=s.$_terms.shared||[],s.$_terms.shared.push(t),s.$_mutateRegister(t),s}},warning:{method(t,r){return e(t&&"string"==typeof t,"Invalid warning code"),this.$_addRule({name:"warning",args:{code:t,local:r},warn:!0})},validate:(e,t,{code:r,local:s})=>t.error(r,s),args:["code","local"],multi:!0}},modifiers:{keep(e,t=!0){e.keep=t},message(e,t){e.message=s.compile(t)},warn(e,t=!0){e.warn=t}},manifest:{build(e,t){for(const r in t){const s=t[r];if(["examples","externals","metas","notes","tags"].includes(r))for(const t of s)e=e[r.slice(0,-1)](t);else if("alterations"!==r)if("whens"!==r){if("shared"===r)for(const t of s)e=e.shared(t)}else for(const t of s){const{ref:r,is:s,not:n,then:i,otherwise:a,concat:o}=t;e=o?e.concat(o):r?e.when(r,{is:s,not:n,then:i,otherwise:a,switch:t.switch,break:t.break}):e.when(s,{then:i,otherwise:a,break:t.break})}else{const t={};for(const{target:e,adjuster:r}of s)t[e]=r;e=e.alter(t)}}return e}},messages:{"any.custom":"{{#label}} failed custom validation because {{#error.message}}","any.default":"{{#label}} threw an error when running default method","any.failover":"{{#label}} threw an error when running failover method","any.invalid":"{{#label}} contains an invalid value","any.only":'{{#label}} must be {if(#valids.length == 1, "", "one of ")}{{#valids}}',"any.ref":"{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}","any.required":"{{#label}} is required","any.unknown":"{{#label}} is not allowed"}}),any}function requireAlternatives(){if(hasRequiredAlternatives)return alternatives;hasRequiredAlternatives=1;const e=assert,t=merge,r=requireAny(),s=requireCommon(),n=requireCompile(),i=requireErrors(),a=requireRef(),o={};return alternatives=r.extend({type:"alternatives",flags:{match:{default:"any"}},terms:{matches:{init:[],register:a.toSibling}},args:(e,...t)=>1===t.length&&Array.isArray(t[0])?e.try(...t[0]):e.try(...t),validate(e,r){const{schema:s,error:n,state:a,prefs:l}=r;if(s._flags.match){const r=[],o=[];for(let t=0;t<s.$_terms.matches.length;++t){const n=s.$_terms.matches[t],i=a.nest(n.schema,`match.${t}`);i.snapshot();const c=n.schema.$_validate(e,i,l);c.errors?(o.push(c.errors),i.restore()):(r.push(c.value),i.commit())}if(0===r.length){const e={details:o.map((e=>i.details(e,{override:!1})))};return{errors:n("alternatives.any",e)}}if("one"===s._flags.match)return 1===r.length?{value:r[0]}:{errors:n("alternatives.one")};if(r.length!==s.$_terms.matches.length){const e={details:o.map((e=>i.details(e,{override:!1})))};return{errors:n("alternatives.all",e)}}const c=e=>e.$_terms.matches.some((e=>"object"===e.schema.type||"alternatives"===e.schema.type&&c(e.schema)));return c(s)?{value:r.reduce(((e,r)=>t(e,r,{mergeArrays:!1})))}:{value:r[r.length-1]}}const c=[];for(let t=0;t<s.$_terms.matches.length;++t){const r=s.$_terms.matches[t];if(r.schema){const s=a.nest(r.schema,`match.${t}`);s.snapshot();const n=r.schema.$_validate(e,s,l);if(!n.errors)return s.commit(),n;s.restore(),c.push({schema:r.schema,reports:n.errors});continue}const n=r.ref?r.ref.resolve(e,a,l):e,i=r.is?[r]:r.switch;for(let s=0;s<i.length;++s){const o=i[s],{is:c,then:d,otherwise:u}=o,p=`match.${t}${r.switch?"."+s:""}`;if(c.$_match(n,a.nest(c,`${p}.is`),l)){if(d)return d.$_validate(e,a.nest(d,`${p}.then`),l)}else if(u)return u.$_validate(e,a.nest(u,`${p}.otherwise`),l)}}return o.errors(c,r)},rules:{conditional:{method(t,r){e(!this._flags._endedSwitch,"Unreachable condition"),e(!this._flags.match,"Cannot combine match mode",this._flags.match,"with conditional rule"),e(void 0===r.break,"Cannot use break option with alternatives conditional");const s=this.clone(),i=n.when(s,t,r),a=i.is?[i]:i.switch;for(const e of a)if(e.then&&e.otherwise){s.$_setFlag("_endedSwitch",!0,{clone:!1});break}return s.$_terms.matches.push(i),s.$_mutateRebuild()}},match:{method(t){if(e(["any","one","all"].includes(t),"Invalid alternatives match mode",t),"any"!==t)for(const r of this.$_terms.matches)e(r.schema,"Cannot combine match mode",t,"with conditional rules");return this.$_setFlag("match",t)}},try:{method(...t){e(t.length,"Missing alternative schemas"),s.verifyFlat(t,"try"),e(!this._flags._endedSwitch,"Unreachable condition");const r=this.clone();for(const e of t)r.$_terms.matches.push({schema:r.$_compile(e)});return r.$_mutateRebuild()}}},overrides:{label(e){return this.$_parent("label",e).$_modify({each:(t,r)=>"is"!==r.path[0]&&"string"!=typeof t._flags.label?t.label(e):void 0,ref:!1})}},rebuild(e){e.$_modify({each:t=>{s.isSchema(t)&&"array"===t.type&&e.$_setFlag("_arrayItems",!0,{clone:!1})}})},manifest:{build(e,t){if(t.matches)for(const r of t.matches){const{schema:t,ref:s,is:n,not:i,then:a,otherwise:o}=r;e=t?e.try(t):s?e.conditional(s,{is:n,then:a,not:i,otherwise:o,switch:r.switch}):e.conditional(n,{then:a,otherwise:o})}return e}},messages:{"alternatives.all":"{{#label}} does not match all of the required types","alternatives.any":"{{#label}} does not match any of the allowed types","alternatives.match":"{{#label}} does not match any of the allowed types","alternatives.one":"{{#label}} matches more than one allowed type","alternatives.types":"{{#label}} must be one of {{#types}}"}}),o.errors=function(e,{error:t,state:r}){if(!e.length)return{errors:t("alternatives.any")};if(1===e.length)return{errors:e[0].reports};const s=new Set,n=[];for(const{reports:a,schema:l}of e){if(a.length>1)return o.unmatched(e,t);const c=a[0];if(c instanceof i.Report==!1)return o.unmatched(e,t);if(c.state.path.length!==r.path.length){n.push({type:l.type,report:c});continue}if("any.only"===c.code){for(const e of c.local.valids)s.add(e);continue}const[d,u]=c.code.split(".");"base"!==u?n.push({type:l.type,report:c}):"object.base"===c.code?s.add(c.local.type):s.add(d)}return n.length?1===n.length?{errors:n[0].report}:o.unmatched(e,t):{errors:t("alternatives.types",{types:[...s]})}},o.unmatched=function(e,t){const r=[];for(const t of e)r.push(...t.reports);return{errors:t("alternatives.match",i.details(r,{override:!1}))}},alternatives}function requireArray(){if(hasRequiredArray)return array;hasRequiredArray=1;const e=assert,t=deepEqual,r=reach,s=requireAny(),n=requireCommon(),i=requireCompile(),a={};return array=s.extend({type:"array",flags:{single:{default:!1},sparse:{default:!1}},terms:{items:{init:[],manifest:"schema"},ordered:{init:[],manifest:"schema"},_exclusions:{init:[]},_inclusions:{init:[]},_requireds:{init:[]}},coerce:{from:"object",method(e,{schema:t,state:r,prefs:s}){if(!Array.isArray(e))return;const n=t.$_getRule("sort");return n?a.sort(t,e,n.args.options,r,s):void 0}},validate(e,{schema:t,error:r}){if(!Array.isArray(e)){if(t._flags.single){const t=[e];return t[n.symbols.arraySingle]=!0,{value:t}}return{errors:r("array.base")}}if(t.$_getRule("items")||t.$_terms.externals)return{value:e.slice()}},rules:{has:{method(e){e=this.$_compile(e,{appendPath:!0});const t=this.$_addRule({name:"has",args:{schema:e}});return t.$_mutateRegister(e),t},validate(e,{state:t,prefs:r,error:s},{schema:n}){const i=[e,...t.ancestors];for(let s=0;s<e.length;++s){const a=t.localize([...t.path,s],i,n);if(n.$_match(e[s],a,r))return e}const a=n._flags.label;return a?s("array.hasKnown",{patternLabel:a}):s("array.hasUnknown",null)},multi:!0},items:{method(...e){n.verifyFlat(e,"items");const t=this.$_addRule("items");for(let r=0;r<e.length;++r){const s=n.tryWithPath((()=>this.$_compile(e[r])),r,{append:!0});t.$_terms.items.push(s)}return t.$_mutateRebuild()},validate(e,{schema:t,error:r,state:s,prefs:i,errorsArray:o}){const l=t.$_terms._requireds.slice(),c=t.$_terms.ordered.slice(),d=[...t.$_terms._inclusions,...l],u=!e[n.symbols.arraySingle];delete e[n.symbols.arraySingle];const p=o();let h=e.length;for(let n=0;n<h;++n){const o=e[n];let f=!1,m=!1;const _=u?n:new Number(n),y=[...s.path,_];if(!t._flags.sparse&&void 0===o){if(p.push(r("array.sparse",{key:_,path:y,pos:n,value:void 0},s.localize(y))),i.abortEarly)return p;c.shift();continue}const g=[e,...s.ancestors];for(const e of t.$_terms._exclusions)if(e.$_match(o,s.localize(y,g,e),i,{presence:"ignore"})){if(p.push(r("array.excludes",{pos:n,value:o},s.localize(y))),i.abortEarly)return p;f=!0,c.shift();break}if(f)continue;if(t.$_terms.ordered.length){if(c.length){const l=c.shift(),d=l.$_validate(o,s.localize(y,g,l),i);if(d.errors){if(p.push(...d.errors),i.abortEarly)return p}else if("strip"===l._flags.result)a.fastSplice(e,n),--n,--h;else{if(!t._flags.sparse&&void 0===d.value){if(p.push(r("array.sparse",{key:_,path:y,pos:n,value:void 0},s.localize(y))),i.abortEarly)return p;continue}e[n]=d.value}continue}if(!t.$_terms.items.length){if(p.push(r("array.orderedLength",{pos:n,limit:t.$_terms.ordered.length})),i.abortEarly)return p;break}}const v=[];let b=l.length;for(let c=0;c<b;++c){const d=s.localize(y,g,l[c]);d.snapshot();const u=l[c].$_validate(o,d,i);if(v[c]=u,!u.errors){if(d.commit(),e[n]=u.value,m=!0,a.fastSplice(l,c),--c,--b,!t._flags.sparse&&void 0===u.value&&(p.push(r("array.sparse",{key:_,path:y,pos:n,value:void 0},s.localize(y))),i.abortEarly))return p;break}d.restore()}if(m)continue;const w=i.stripUnknown&&!!i.stripUnknown.arrays||!1;b=d.length;for(const c of d){let d;const u=l.indexOf(c);if(-1!==u)d=v[u];else{const l=s.localize(y,g,c);if(l.snapshot(),d=c.$_validate(o,l,i),!d.errors){l.commit(),"strip"===c._flags.result?(a.fastSplice(e,n),--n,--h):t._flags.sparse||void 0!==d.value?e[n]=d.value:(p.push(r("array.sparse",{key:_,path:y,pos:n,value:void 0},s.localize(y))),f=!0),m=!0;break}l.restore()}if(1===b){if(w){a.fastSplice(e,n),--n,--h,m=!0;break}if(p.push(...d.errors),i.abortEarly)return p;f=!0;break}}if(!f&&((t.$_terms._inclusions.length||t.$_terms._requireds.length)&&!m)){if(w){a.fastSplice(e,n),--n,--h;continue}if(p.push(r("array.includes",{pos:n,value:o},s.localize(y))),i.abortEarly)return p}}return l.length&&a.fillMissedErrors(t,p,l,e,s,i),c.length&&(a.fillOrderedErrors(t,p,c,e,s,i),p.length||a.fillDefault(c,e,s,i)),p.length?p:e},priority:!0,manifest:!1},length:{method(e){return this.$_addRule({name:"length",args:{limit:e},operator:"="})},validate:(e,t,{limit:r},{name:s,operator:i,args:a})=>n.compare(e.length,r,i)?e:t.error("array."+s,{limit:a.limit,value:e}),args:[{name:"limit",ref:!0,assert:n.limit,message:"must be a positive integer"}]},max:{method(e){return this.$_addRule({name:"max",method:"length",args:{limit:e},operator:"<="})}},min:{method(e){return this.$_addRule({name:"min",method:"length",args:{limit:e},operator:">="})}},ordered:{method(...e){n.verifyFlat(e,"ordered");const t=this.$_addRule("items");for(let r=0;r<e.length;++r){const s=n.tryWithPath((()=>this.$_compile(e[r])),r,{append:!0});a.validateSingle(s,t),t.$_mutateRegister(s),t.$_terms.ordered.push(s)}return t.$_mutateRebuild()}},single:{method(t){const r=void 0===t||!!t;return e(!r||!this._flags._arrayItems,"Cannot specify single rule when array has array items"),this.$_setFlag("single",r)}},sort:{method(t={}){n.assertOptions(t,["by","order"]);const r={order:t.order||"ascending"};return t.by&&(r.by=i.ref(t.by,{ancestor:0}),e(!r.by.ancestor,"Cannot sort by ancestor")),this.$_addRule({name:"sort",args:{options:r}})},validate(e,{error:t,state:r,prefs:s,schema:n},{options:i}){const{value:o,errors:l}=a.sort(n,e,i,r,s);if(l)return l;for(let r=0;r<e.length;++r)if(e[r]!==o[r])return t("array.sort",{order:i.order,by:i.by?i.by.key:"value"});return e},convert:!0},sparse:{method(e){const t=void 0===e||!!e;if(this._flags.sparse===t)return this;return(t?this.clone():this.$_addRule("items")).$_setFlag("sparse",t,{clone:!1})}},unique:{method(t,r={}){e(!t||"function"==typeof t||"string"==typeof t,"comparator must be a function or a string"),n.assertOptions(r,["ignoreUndefined","separator"]);const s={name:"unique",args:{options:r,comparator:t}};if(t)if("string"==typeof t){const e=n.default(r.separator,".");s.path=e?t.split(e):[t]}else s.comparator=t;return this.$_addRule(s)},validate(s,{state:n,error:i,schema:a},{comparator:o,options:l},{comparator:c,path:d}){const u={string:Object.create(null),number:Object.create(null),undefined:Object.create(null),boolean:Object.create(null),bigint:Object.create(null),object:new Map,function:new Map,custom:new Map},p=c||t,h=l.ignoreUndefined;for(let t=0;t<s.length;++t){const a=d?r(s[t],d):s[t],l=c?u.custom:u[typeof a];if(e(l,"Failed to find unique map container for type",typeof a),l instanceof Map){const e=l.entries();let r;for(;!(r=e.next()).done;)if(p(r.value[0],a)){const e=n.localize([...n.path,t],[s,...n.ancestors]),a={pos:t,value:s[t],dupePos:r.value[1],dupeValue:s[r.value[1]]};return d&&(a.path=o),i("array.unique",a,e)}l.set(a,t)}else{if((!h||void 0!==a)&&void 0!==l[a]){const e={pos:t,value:s[t],dupePos:l[a],dupeValue:s[l[a]]};d&&(e.path=o);return i("array.unique",e,n.localize([...n.path,t],[s,...n.ancestors]))}l[a]=t}}return s},args:["comparator","options"],multi:!0}},cast:{set:{from:Array.isArray,to:(e,t)=>new Set(e)}},rebuild(e){e.$_terms._inclusions=[],e.$_terms._exclusions=[],e.$_terms._requireds=[];for(const t of e.$_terms.items)a.validateSingle(t,e),"required"===t._flags.presence?e.$_terms._requireds.push(t):"forbidden"===t._flags.presence?e.$_terms._exclusions.push(t):e.$_terms._inclusions.push(t);for(const t of e.$_terms.ordered)a.validateSingle(t,e)},manifest:{build:(e,t)=>(t.items&&(e=e.items(...t.items)),t.ordered&&(e=e.ordered(...t.ordered)),e)},messages:{"array.base":"{{#label}} must be an array","array.excludes":"{{#label}} contains an excluded value","array.hasKnown":"{{#label}} does not contain at least one required match for type {:#patternLabel}","array.hasUnknown":"{{#label}} does not contain at least one required match","array.includes":"{{#label}} does not match any of the allowed types","array.includesRequiredBoth":"{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)","array.includesRequiredKnowns":"{{#label}} does not contain {{#knownMisses}}","array.includesRequiredUnknowns":"{{#label}} does not contain {{#unknownMisses}} required value(s)","array.length":"{{#label}} must contain {{#limit}} items","array.max":"{{#label}} must contain less than or equal to {{#limit}} items","array.min":"{{#label}} must contain at least {{#limit}} items","array.orderedLength":"{{#label}} must contain at most {{#limit}} items","array.sort":"{{#label}} must be sorted in {#order} order by {{#by}}","array.sort.mismatching":"{{#label}} cannot be sorted due to mismatching types","array.sort.unsupported":"{{#label}} cannot be sorted due to unsupported type {#type}","array.sparse":"{{#label}} must not be a sparse array item","array.unique":"{{#label}} contains a duplicate value"}}),a.fillMissedErrors=function(e,t,r,s,n,i){const a=[];let o=0;for(const e of r){const t=e._flags.label;t?a.push(t):++o}a.length?o?t.push(e.$_createError("array.includesRequiredBoth",s,{knownMisses:a,unknownMisses:o},n,i)):t.push(e.$_createError("array.includesRequiredKnowns",s,{knownMisses:a},n,i)):t.push(e.$_createError("array.includesRequiredUnknowns",s,{unknownMisses:o},n,i))},a.fillOrderedErrors=function(e,t,r,s,n,i){const o=[];for(const e of r)"required"===e._flags.presence&&o.push(e);o.length&&a.fillMissedErrors(e,t,o,s,n,i)},a.fillDefault=function(e,t,r,s){const n=[];let i=!0;for(let a=e.length-1;a>=0;--a){const o=e[a],l=[t,...r.ancestors],c=o.$_validate(void 0,r.localize(r.path,l,o),s).value;if(i){if(void 0===c)continue;i=!1}n.unshift(c)}n.length&&t.push(...n)},a.fastSplice=function(e,t){let r=t;for(;r<e.length;)e[r++]=e[r];--e.length},a.validateSingle=function(t,r){("array"===t.type||t._flags._arrayItems)&&(e(!r._flags.single,"Cannot specify array item with single rule enabled"),r.$_setFlag("_arrayItems",!0,{clone:!1}))},a.sort=function(e,t,r,s,n){const i="ascending"===r.order?1:-1,o=-1*i,l=i,c=(c,d)=>{let u=a.compare(c,d,o,l);if(null!==u)return u;if(r.by&&(c=r.by.resolve(c,s,n),d=r.by.resolve(d,s,n)),u=a.compare(c,d,o,l),null!==u)return u;const p=typeof c;if(p!==typeof d)throw e.$_createError("array.sort.mismatching",t,null,s,n);if("number"!==p&&"string"!==p)throw e.$_createError("array.sort.unsupported",t,{type:p},s,n);return"number"===p?(c-d)*i:c<d?o:l};try{return{value:t.slice().sort(c)}}catch(e){return{errors:e}}},a.compare=function(e,t,r,s){return e===t?0:void 0===e?1:void 0===t?-1:null===e?s:null===t?r:null},array}function requireBoolean(){if(hasRequiredBoolean)return boolean;hasRequiredBoolean=1;const e=assert,t=requireAny(),r=requireCommon(),s=requireValues(),n={isBool:function(e){return"boolean"==typeof e}};return boolean=t.extend({type:"boolean",flags:{sensitive:{default:!1}},terms:{falsy:{init:null,manifest:"values"},truthy:{init:null,manifest:"values"}},coerce(e,{schema:t}){if("boolean"!=typeof e){if("string"==typeof e){const r=t._flags.sensitive?e:e.toLowerCase();e="true"===r||"false"!==r&&e}return"boolean"!=typeof e&&(e=t.$_terms.truthy&&t.$_terms.truthy.has(e,null,null,!t._flags.sensitive)||(!t.$_terms.falsy||!t.$_terms.falsy.has(e,null,null,!t._flags.sensitive))&&e),{value:e}}},validate(e,{error:t}){if("boolean"!=typeof e)return{value:e,errors:t("boolean.base")}},rules:{truthy:{method(...t){r.verifyFlat(t,"truthy");const n=this.clone();n.$_terms.truthy=n.$_terms.truthy||new s;for(let r=0;r<t.length;++r){const s=t[r];e(void 0!==s,"Cannot call truthy with undefined"),n.$_terms.truthy.add(s)}return n}},falsy:{method(...t){r.verifyFlat(t,"falsy");const n=this.clone();n.$_terms.falsy=n.$_terms.falsy||new s;for(let r=0;r<t.length;++r){const s=t[r];e(void 0!==s,"Cannot call falsy with undefined"),n.$_terms.falsy.add(s)}return n}},sensitive:{method(e=!0){return this.$_setFlag("sensitive",e)}}},cast:{number:{from:n.isBool,to:(e,t)=>e?1:0},string:{from:n.isBool,to:(e,t)=>e?"true":"false"}},manifest:{build:(e,t)=>(t.truthy&&(e=e.truthy(...t.truthy)),t.falsy&&(e=e.falsy(...t.falsy)),e)},messages:{"boolean.base":"{{#label}} must be a boolean"}}),boolean}function requireDate(){if(hasRequiredDate)return date;hasRequiredDate=1;const e=assert,t=requireAny(),r=requireCommon(),s=requireTemplate(),n={isDate:function(e){return e instanceof Date}};return date=t.extend({type:"date",coerce:{from:["number","string"],method:(e,{schema:t})=>({value:n.parse(e,t._flags.format)||e})},validate(e,{schema:t,error:r,prefs:s}){if(e instanceof Date&&!isNaN(e.getTime()))return;const n=t._flags.format;return s.convert&&n&&"string"==typeof e?{value:e,errors:r("date.format",{format:n})}:{value:e,errors:r("date.base")}},rules:{compare:{method:!1,validate(e,t,{date:s},{name:n,operator:i,args:a}){const o="now"===s?Date.now():s.getTime();return r.compare(e.getTime(),o,i)?e:t.error("date."+n,{limit:a.date,value:e})},args:[{name:"date",ref:!0,normalize:e=>"now"===e?e:n.parse(e),assert:e=>null!==e,message:"must have a valid date format"}]},format:{method(t){return e(["iso","javascript","unix"].includes(t),"Unknown date format",t),this.$_setFlag("format",t)}},greater:{method(e){return this.$_addRule({name:"greater",method:"compare",args:{date:e},operator:">"})}},iso:{method(){return this.format("iso")}},less:{method(e){return this.$_addRule({name:"less",method:"compare",args:{date:e},operator:"<"})}},max:{method(e){return this.$_addRule({name:"max",method:"compare",args:{date:e},operator:"<="})}},min:{method(e){return this.$_addRule({name:"min",method:"compare",args:{date:e},operator:">="})}},timestamp:{method(t="javascript"){return e(["javascript","unix"].includes(t),'"type" must be one of "javascript, unix"'),this.format(t)}}},cast:{number:{from:n.isDate,to:(e,t)=>e.getTime()},string:{from:n.isDate,to:(e,{prefs:t})=>s.date(e,t)}},messages:{"date.base":"{{#label}} must be a valid date","date.format":'{{#label}} must be in {msg("date.format." + #format) || #format} format',"date.greater":"{{#label}} must be greater than {{:#limit}}","date.less":"{{#label}} must be less than {{:#limit}}","date.max":"{{#label}} must be less than or equal to {{:#limit}}","date.min":"{{#label}} must be greater than or equal to {{:#limit}}","date.format.iso":"ISO 8601 date","date.format.javascript":"timestamp or number of milliseconds","date.format.unix":"timestamp or number of seconds"}}),n.parse=function(e,t){if(e instanceof Date)return e;if("string"!=typeof e&&(isNaN(e)||!isFinite(e)))return null;if(/^\s*$/.test(e))return null;if("iso"===t)return r.isIsoDate(e)?n.date(e.toString()):null;const s=e;if("string"==typeof e&&/^[+-]?\d+(\.\d+)?$/.test(e)&&(e=parseFloat(e)),t){if("javascript"===t)return n.date(1*e);if("unix"===t)return n.date(1e3*e);if("string"==typeof s)return null}return n.date(e)},n.date=function(e){const t=new Date(e);return isNaN(t.getTime())?null:t},date}const Assert$3=assert,Clone=clone,Merge=merge,Reach=reach,internals$4={};var applyToDefaults=function(e,t,r={}){if(Assert$3(e&&"object"==typeof e,"Invalid defaults value: must be an object"),Assert$3(!t||!0===t||"object"==typeof t,"Invalid source value: must be true, falsy or an object"),Assert$3("object"==typeof r,"Invalid options: must be an object"),!t)return null;if(r.shallow)return internals$4.applyToDefaultsWithShallow(e,t,r);const s=Clone(e);if(!0===t)return s;const n=void 0!==r.nullOverride&&r.nullOverride;return Merge(s,t,{nullOverride:n,mergeArrays:!1})};internals$4.applyToDefaultsWithShallow=function(e,t,r){const s=r.shallow;Assert$3(Array.isArray(s),"Invalid keys");const n=new Map,i=!0===t?null:new Set;for(let r of s){r=Array.isArray(r)?r:r.split(".");const s=Reach(e,r);s&&"object"==typeof s?n.set(s,i&&Reach(t,r)||s):i&&i.add(r)}const a=Clone(e,{},n);if(!i)return a;for(const e of i)internals$4.reachCopy(a,t,e);const o=void 0!==r.nullOverride&&r.nullOverride;return Merge(a,t,{nullOverride:o,mergeArrays:!1})},internals$4.reachCopy=function(e,t,r){for(const e of r){if(!(e in t))return;const r=t[e];if("object"!=typeof r||null===r)return;t=r}const s=t;let n=e;for(let e=0;e<r.length-1;++e){const t=r[e];"object"!=typeof n[t]&&(n[t]={}),n=n[t]}n[r[r.length-1]]=s};var lib$2={};const Assert$2=assert,internals$3={};var keys,hasRequiredKeys,_function,hasRequired_function,link,hasRequiredLink,number,hasRequiredNumber,object,hasRequiredObject;function requireKeys(){if(hasRequiredKeys)return keys;hasRequiredKeys=1;const e=applyToDefaults,t=assert,r=clone,s=lib$2,n=requireAny(),i=requireCommon(),a=requireCompile(),o=requireErrors(),l=requireRef(),c=requireTemplate(),d={renameDefaults:{alias:!1,multiple:!1,override:!1}};return keys=n.extend({type:"_keys",properties:{typeof:"object"},flags:{unknown:{default:void 0}},terms:{dependencies:{init:null},keys:{init:null,manifest:{mapped:{from:"schema",to:"key"}}},patterns:{init:null},renames:{init:null}},args:(e,t)=>e.keys(t),validate(e,{schema:t,error:r,state:s,prefs:n}){if(!e||typeof e!==t.$_property("typeof")||Array.isArray(e))return{value:e,errors:r("object.base",{type:t.$_property("typeof")})};if(!(t.$_terms.renames||t.$_terms.dependencies||t.$_terms.keys||t.$_terms.patterns||t.$_terms.externals))return;e=d.clone(e,n);const i=[];if(t.$_terms.renames&&!d.rename(t,e,s,n,i))return{value:e,errors:i};if(!t.$_terms.keys&&!t.$_terms.patterns&&!t.$_terms.dependencies)return{value:e,errors:i};const a=new Set(Object.keys(e));if(t.$_terms.keys){const r=[e,...s.ancestors];for(const o of t.$_terms.keys){const t=o.key,l=e[t];a.delete(t);const c=s.localize([...s.path,t],r,o),d=o.schema.$_validate(l,c,n);if(d.errors){if(n.abortEarly)return{value:e,errors:d.errors};void 0!==d.value&&(e[t]=d.value),i.push(...d.errors)}else"strip"===o.schema._flags.result||void 0===d.value&&void 0!==l?delete e[t]:void 0!==d.value&&(e[t]=d.value)}}if(a.size||t._flags._hasPatternMatch){const r=d.unknown(t,e,a,i,s,n);if(r)return r}if(t.$_terms.dependencies)for(const r of t.$_terms.dependencies){if(null!==r.key&&!1===d.isPresent(r.options)(r.key.resolve(e,s,n,null,{shadow:!1})))continue;const a=d.dependencies[r.rel](t,r,e,s,n);if(a){const r=t.$_createError(a.code,e,a.context,s,n);if(n.abortEarly)return{value:e,errors:r};i.push(r)}}return{value:e,errors:i}},rules:{and:{method(...e){return i.verifyFlat(e,"and"),d.dependency(this,"and",null,e)}},append:{method(e){return null==e||0===Object.keys(e).length?this:this.keys(e)}},assert:{method(e,r,s){c.isTemplate(e)||(e=a.ref(e)),t(void 0===s||"string"==typeof s,"Message must be a string"),r=this.$_compile(r,{appendPath:!0});const n=this.$_addRule({name:"assert",args:{subject:e,schema:r,message:s}});return n.$_mutateRegister(e),n.$_mutateRegister(r),n},validate(e,{error:t,prefs:r,state:s},{subject:n,schema:i,message:a}){const o=n.resolve(e,s,r),c=l.isRef(n)?n.absolute(s):[];return i.$_match(o,s.localize(c,[e,...s.ancestors],i),r)?e:t("object.assert",{subject:n,message:a})},args:["subject","schema","message"],multi:!0},instance:{method(e,r){return t("function"==typeof e,"constructor must be a function"),r=r||e.name,this.$_addRule({name:"instance",args:{constructor:e,name:r}})},validate:(e,t,{constructor:r,name:s})=>e instanceof r?e:t.error("object.instance",{type:s,value:e}),args:["constructor","name"]},keys:{method(e){t(void 0===e||"object"==typeof e,"Object schema must be a valid object"),t(!i.isSchema(e),"Object schema cannot be a joi schema");const r=this.clone();if(e)if(Object.keys(e).length){r.$_terms.keys=r.$_terms.keys?r.$_terms.keys.filter((t=>!e.hasOwnProperty(t.key))):new d.Keys;for(const t in e)i.tryWithPath((()=>r.$_terms.keys.push({key:t,schema:this.$_compile(e[t])})),t)}else r.$_terms.keys=new d.Keys;else r.$_terms.keys=null;return r.$_mutateRebuild()}},length:{method(e){return this.$_addRule({name:"length",args:{limit:e},operator:"="})},validate:(e,t,{limit:r},{name:s,operator:n,args:a})=>i.compare(Object.keys(e).length,r,n)?e:t.error("object."+s,{limit:a.limit,value:e}),args:[{name:"limit",ref:!0,assert:i.limit,message:"must be a positive integer"}]},max:{method(e){return this.$_addRule({name:"max",method:"length",args:{limit:e},operator:"<="})}},min:{method(e){return this.$_addRule({name:"min",method:"length",args:{limit:e},operator:">="})}},nand:{method(...e){return i.verifyFlat(e,"nand"),d.dependency(this,"nand",null,e)}},or:{method(...e){return i.verifyFlat(e,"or"),d.dependency(this,"or",null,e)}},oxor:{method(...e){return d.dependency(this,"oxor",null,e)}},pattern:{method(e,r,s={}){const n=e instanceof RegExp;n||(e=this.$_compile(e,{appendPath:!0})),t(void 0!==r,"Invalid rule"),i.assertOptions(s,["fallthrough","matches"]),n&&t(!e.flags.includes("g")&&!e.flags.includes("y"),"pattern should not use global or sticky mode"),r=this.$_compile(r,{appendPath:!0});const a=this.clone();a.$_terms.patterns=a.$_terms.patterns||[];const o={[n?"regex":"schema"]:e,rule:r};return s.matches&&(o.matches=this.$_compile(s.matches),"array"!==o.matches.type&&(o.matches=o.matches.$_root.array().items(o.matches)),a.$_mutateRegister(o.matches),a.$_setFlag("_hasPatternMatch",!0,{clone:!1})),s.fallthrough&&(o.fallthrough=!0),a.$_terms.patterns.push(o),a.$_mutateRegister(r),a}},ref:{method(){return this.$_addRule("ref")},validate:(e,t)=>l.isRef(e)?e:t.error("object.refType",{value:e})},regex:{method(){return this.$_addRule("regex")},validate:(e,t)=>e instanceof RegExp?e:t.error("object.regex",{value:e})},rename:{method(r,s,n={}){t("string"==typeof r||r instanceof RegExp,"Rename missing the from argument"),t("string"==typeof s||s instanceof c,"Invalid rename to argument"),t(s!==r,"Cannot rename key to same name:",r),i.assertOptions(n,["alias","ignoreUndefined","override","multiple"]);const a=this.clone();a.$_terms.renames=a.$_terms.renames||[];for(const e of a.$_terms.renames)t(e.from!==r,"Cannot rename the same key multiple times");return s instanceof c&&a.$_mutateRegister(s),a.$_terms.renames.push({from:r,to:s,options:e(d.renameDefaults,n)}),a}},schema:{method(e="any"){return this.$_addRule({name:"schema",args:{type:e}})},validate:(e,t,{type:r})=>!i.isSchema(e)||"any"!==r&&e.type!==r?t.error("object.schema",{type:r}):e},unknown:{method(e){return this.$_setFlag("unknown",!1!==e)}},with:{method(e,t,r={}){return d.dependency(this,"with",e,t,r)}},without:{method(e,t,r={}){return d.dependency(this,"without",e,t,r)}},xor:{method(...e){return i.verifyFlat(e,"xor"),d.dependency(this,"xor",null,e)}}},overrides:{default(e,t){return void 0===e&&(e=i.symbols.deepDefault),this.$_parent("default",e,t)}},rebuild(e){if(e.$_terms.keys){const t=new s.Sorter;for(const r of e.$_terms.keys)i.tryWithPath((()=>t.add(r,{after:r.schema.$_rootReferences(),group:r.key})),r.key);e.$_terms.keys=new d.Keys(...t.nodes)}},manifest:{build(e,t){if(t.keys&&(e=e.keys(t.keys)),t.dependencies)for(const{rel:r,key:s=null,peers:n,options:i}of t.dependencies)e=d.dependency(e,r,s,n,i);if(t.patterns)for(const{regex:r,schema:s,rule:n,fallthrough:i,matches:a}of t.patterns)e=e.pattern(r||s,n,{fallthrough:i,matches:a});if(t.renames)for(const{from:r,to:s,options:n}of t.renames)e=e.rename(r,s,n);return e}},messages:{"object.and":"{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}","object.assert":'{{#label}} is invalid because {if(#subject.key, `"` + #subject.key + `" failed to ` + (#message || "pass the assertion test"), #message || "the assertion failed")}',"object.base":"{{#label}} must be of type {{#type}}","object.instance":"{{#label}} must be an instance of {{:#type}}","object.length":'{{#label}} must have {{#limit}} key{if(#limit == 1, "", "s")}',"object.max":'{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, "", "s")}',"object.min":'{{#label}} must have at least {{#limit}} key{if(#limit == 1, "", "s")}',"object.missing":"{{#label}} must contain at least one of {{#peersWithLabels}}","object.nand":"{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}","object.oxor":"{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}","object.pattern.match":"{{#label}} keys failed to match pattern requirements","object.refType":"{{#label}} must be a Joi reference","object.regex":"{{#label}} must be a RegExp object","object.rename.multiple":"{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}","object.rename.override":"{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists","object.schema":"{{#label}} must be a Joi schema of {{#type}} type","object.unknown":"{{#label}} is not allowed","object.with":"{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}","object.without":"{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}","object.xor":"{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}"}}),d.clone=function(e,t){if("object"==typeof e){if(t.nonEnumerables)return r(e,{shallow:!0});const s=Object.create(Object.getPrototypeOf(e));return Object.assign(s,e),s}const s=function(...t){return e.apply(this,t)};return s.prototype=r(e.prototype),Object.defineProperty(s,"name",{value:e.name,writable:!1}),Object.defineProperty(s,"length",{value:e.length,writable:!1}),Object.assign(s,e),s},d.dependency=function(e,r,s,n,o){t(null===s||"string"==typeof s,r,"key must be a strings"),o||(o=n.length>1&&"object"==typeof n[n.length-1]?n.pop():{}),i.assertOptions(o,["separator","isPresent"]),n=[].concat(n);const l=i.default(o.separator,"."),c=[];for(const e of n)t("string"==typeof e,r,"peers must be strings"),c.push(a.ref(e,{separator:l,ancestor:0,prefix:!1}));null!==s&&(s=a.ref(s,{separator:l,ancestor:0,prefix:!1}));const u=e.clone();return u.$_terms.dependencies=u.$_terms.dependencies||[],u.$_terms.dependencies.push(new d.Dependency(r,s,c,n,o)),u},d.dependencies={and(e,t,r,s,n){const i=[],a=[],o=t.peers.length,l=d.isPresent(t.options);for(const e of t.peers)!1===l(e.resolve(r,s,n,null,{shadow:!1}))?i.push(e.key):a.push(e.key);if(i.length!==o&&a.length!==o)return{code:"object.and",context:{present:a,presentWithLabels:d.keysToLabels(e,a),missing:i,missingWithLabels:d.keysToLabels(e,i)}}},nand(e,t,r,s,n){const i=[],a=d.isPresent(t.options);for(const e of t.peers)a(e.resolve(r,s,n,null,{shadow:!1}))&&i.push(e.key);if(i.length!==t.peers.length)return;const o=t.paths[0],l=t.paths.slice(1);return{code:"object.nand",context:{main:o,mainWithLabel:d.keysToLabels(e,o),peers:l,peersWithLabels:d.keysToLabels(e,l)}}},or(e,t,r,s,n){const i=d.isPresent(t.options);for(const e of t.peers)if(i(e.resolve(r,s,n,null,{shadow:!1})))return;return{code:"object.missing",context:{peers:t.paths,peersWithLabels:d.keysToLabels(e,t.paths)}}},oxor(e,t,r,s,n){const i=[],a=d.isPresent(t.options);for(const e of t.peers)a(e.resolve(r,s,n,null,{shadow:!1}))&&i.push(e.key);if(!i.length||1===i.length)return;const o={peers:t.paths,peersWithLabels:d.keysToLabels(e,t.paths)};return o.present=i,o.presentWithLabels=d.keysToLabels(e,i),{code:"object.oxor",context:o}},with(e,t,r,s,n){const i=d.isPresent(t.options);for(const a of t.peers)if(!1===i(a.resolve(r,s,n,null,{shadow:!1})))return{code:"object.with",context:{main:t.key.key,mainWithLabel:d.keysToLabels(e,t.key.key),peer:a.key,peerWithLabel:d.keysToLabels(e,a.key)}}},without(e,t,r,s,n){const i=d.isPresent(t.options);for(const a of t.peers)if(i(a.resolve(r,s,n,null,{shadow:!1})))return{code:"object.without",context:{main:t.key.key,mainWithLabel:d.keysToLabels(e,t.key.key),peer:a.key,peerWithLabel:d.keysToLabels(e,a.key)}}},xor(e,t,r,s,n){const i=[],a=d.isPresent(t.options);for(const e of t.peers)a(e.resolve(r,s,n,null,{shadow:!1}))&&i.push(e.key);if(1===i.length)return;const o={peers:t.paths,peersWithLabels:d.keysToLabels(e,t.paths)};return 0===i.length?{code:"object.missing",context:o}:(o.present=i,o.presentWithLabels=d.keysToLabels(e,i),{code:"object.xor",context:o})}},d.keysToLabels=function(e,t){return Array.isArray(t)?t.map((t=>e.$_mapLabels(t))):e.$_mapLabels(t)},d.isPresent=function(e){return"function"==typeof e.isPresent?e.isPresent:e=>void 0!==e},d.rename=function(e,t,r,s,n){const i={};for(const a of e.$_terms.renames){const o=[],l="string"!=typeof a.from;if(l)for(const e in t){if(void 0===t[e]&&a.options.ignoreUndefined)continue;if(e===a.to)continue;const r=a.from.exec(e);r&&o.push({from:e,to:a.to,match:r})}else!Object.prototype.hasOwnProperty.call(t,a.from)||void 0===t[a.from]&&a.options.ignoreUndefined||o.push(a);for(const d of o){const o=d.from;let u=d.to;if(u instanceof c&&(u=u.render(t,r,s,d.match)),o!==u){if(!a.options.multiple&&i[u]&&(n.push(e.$_createError("object.rename.multiple",t,{from:o,to:u,pattern:l},r,s)),s.abortEarly))return!1;if(Object.prototype.hasOwnProperty.call(t,u)&&!a.options.override&&!i[u]&&(n.push(e.$_createError("object.rename.override",t,{from:o,to:u,pattern:l},r,s)),s.abortEarly))return!1;void 0===t[o]?delete t[u]:t[u]=t[o],i[u]=!0,a.options.alias||delete t[o]}}}return!0},d.unknown=function(e,t,r,s,n,a){if(e.$_terms.patterns){let i=!1;const l=e.$_terms.patterns.map((e=>{if(e.matches)return i=!0,[]})),c=[t,...n.ancestors];for(const i of r){const o=t[i],d=[...n.path,i];for(let u=0;u<e.$_terms.patterns.length;++u){const p=e.$_terms.patterns[u];if(p.regex){const e=p.regex.test(i);if(n.mainstay.tracer.debug(n,"rule",`pattern.${u}`,e?"pass":"error"),!e)continue}else if(!p.schema.$_match(i,n.nest(p.schema,`pattern.${u}`),a))continue;r.delete(i);const h=n.localize(d,c,{schema:p.rule,key:i}),f=p.rule.$_validate(o,h,a);if(f.errors){if(a.abortEarly)return{value:t,errors:f.errors};s.push(...f.errors)}if(p.matches&&l[u].push(i),t[i]=f.value,!p.fallthrough)break}}if(i)for(let r=0;r<l.length;++r){const i=l[r];if(!i)continue;const d=e.$_terms.patterns[r].matches,u=n.localize(n.path,c,d),p=d.$_validate(i,u,a);if(p.errors){const r=o.details(p.errors,{override:!1});r.matches=i;const l=e.$_createError("object.pattern.match",t,r,n,a);if(a.abortEarly)return{value:t,errors:l};s.push(l)}}}if(!r.size||!e.$_terms.keys&&!e.$_terms.patterns)return;if(a.stripUnknown&&void 0===e._flags.unknown||a.skipFunctions){const e=!!a.stripUnknown&&(!0===a.stripUnknown||!!a.stripUnknown.objects);for(const s of r)e?(delete t[s],r.delete(s)):"function"==typeof t[s]&&r.delete(s)}if(!i.default(e._flags.unknown,a.allowUnknown))for(const i of r){const r=n.localize([...n.path,i],[]),o=e.$_createError("object.unknown",t[i],{child:i},r,a,{flags:!1});if(a.abortEarly)return{value:t,errors:o};s.push(o)}},d.Dependency=class{constructor(e,t,r,s,n){this.rel=e,this.key=t,this.peers=r,this.paths=s,this.options=n}describe(){const e={rel:this.rel,peers:this.paths};return null!==this.key&&(e.key=this.key.key),"."!==this.peers[0].separator&&(e.options={...e.options,separator:this.peers[0].separator}),this.options.isPresent&&(e.options={...e.options,isPresent:this.options.isPresent}),e}},d.Keys=class extends Array{concat(e){const t=this.slice(),r=new Map;for(let e=0;e<t.length;++e)r.set(t[e].key,e);for(const s of e){const e=s.key,n=r.get(e);void 0!==n?t[n]={key:e,schema:t[n].schema.concat(s.schema)}:t.push(s)}return t}},keys}function require_function(){if(hasRequired_function)return _function;hasRequired_function=1;const e=assert,t=requireKeys();return _function=t.extend({type:"function",properties:{typeof:"function"},rules:{arity:{method(t){return e(Number.isSafeInteger(t)&&t>=0,"n must be a positive integer"),this.$_addRule({name:"arity",args:{n:t}})},validate:(e,t,{n:r})=>e.length===r?e:t.error("function.arity",{n:r})},class:{method(){return this.$_addRule("class")},validate:(e,t)=>/^\s*class\s/.test(e.toString())?e:t.error("function.class",{value:e})},minArity:{method(t){return e(Number.isSafeInteger(t)&&t>0,"n must be a strict positive integer"),this.$_addRule({name:"minArity",args:{n:t}})},validate:(e,t,{n:r})=>e.length>=r?e:t.error("function.minArity",{n:r})},maxArity:{method(t){return e(Number.isSafeInteger(t)&&t>=0,"n must be a positive integer"),this.$_addRule({name:"maxArity",args:{n:t}})},validate:(e,t,{n:r})=>e.length<=r?e:t.error("function.maxArity",{n:r})}},messages:{"function.arity":"{{#label}} must have an arity of {{#n}}","function.class":"{{#label}} must be a class","function.maxArity":"{{#label}} must have an arity lesser or equal to {{#n}}","function.minArity":"{{#label}} must have an arity greater or equal to {{#n}}"}}),_function}function requireLink(){if(hasRequiredLink)return link;hasRequiredLink=1;const e=assert,t=requireAny(),r=requireCommon(),s=requireCompile(),n=requireErrors(),i={};return link=t.extend({type:"link",properties:{schemaChain:!0},terms:{link:{init:null,manifest:"single",register:!1}},args:(e,t)=>e.ref(t),validate(t,{schema:r,state:s,prefs:n}){e(r.$_terms.link,"Uninitialized link schema");const a=i.generate(r,t,s,n),o=r.$_terms.link[0].ref;return a.$_validate(t,s.nest(a,`link:${o.display}:${a.type}`),n)},generate:(e,t,r,s)=>i.generate(e,t,r,s),rules:{ref:{method(t){e(!this.$_terms.link,"Cannot reinitialize schema"),t=s.ref(t),e("value"===t.type||"local"===t.type,"Invalid reference type:",t.type),e("local"===t.type||"root"===t.ancestor||t.ancestor>0,"Link cannot reference itself");const r=this.clone();return r.$_terms.link=[{ref:t}],r}},relative:{method(e=!0){return this.$_setFlag("relative",e)}}},overrides:{concat(t){e(this.$_terms.link,"Uninitialized link schema"),e(r.isSchema(t),"Invalid schema object"),e("link"!==t.type,"Cannot merge type link with another link");const s=this.clone();return s.$_terms.whens||(s.$_terms.whens=[]),s.$_terms.whens.push({concat:t}),s.$_mutateRebuild()}},manifest:{build:(t,r)=>(e(r.link,"Invalid link description missing link"),t.ref(r.link))}}),i.generate=function(e,t,r,s){let n=r.mainstay.links.get(e);if(n)return n._generate(t,r,s).schema;const a=e.$_terms.link[0].ref,{perspective:o,path:l}=i.perspective(a,r);i.assert(o,"which is outside of schema boundaries",a,e,r,s);try{n=l.length?o.$_reach(l):o}catch(t){i.assert(!1,"to non-existing schema",a,e,r,s)}return i.assert("link"!==n.type,"which is another link",a,e,r,s),e._flags.relative||r.mainstay.links.set(e,n),n._generate(t,r,s).schema},i.perspective=function(e,t){if("local"===e.type){for(const{schema:r,key:s}of t.schemas){if((r._flags.id||s)===e.path[0])return{perspective:r,path:e.path.slice(1)};if(r.$_terms.shared)for(const t of r.$_terms.shared)if(t._flags.id===e.path[0])return{perspective:t,path:e.path.slice(1)}}return{perspective:null,path:null}}return"root"===e.ancestor?{perspective:t.schemas[t.schemas.length-1].schema,path:e.path}:{perspective:t.schemas[e.ancestor]&&t.schemas[e.ancestor].schema,path:e.path}},i.assert=function(t,r,s,i,a,o){t||e(!1,`"${n.label(i._flags,a,o)}" contains link reference "${s.display}" ${r}`)},link}function requireNumber(){if(hasRequiredNumber)return number;hasRequiredNumber=1;const e=assert,t=requireAny(),r=requireCommon(),s={numberRx:/^\s*[+-]?(?:(?:\d+(?:\.\d*)?)|(?:\.\d+))(?:e([+-]?\d+))?\s*$/i,precisionRx:/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/,exponentialPartRegex:/[eE][+-]?\d+$/,leadingSignAndZerosRegex:/^[+-]?(0*)?/,dotRegex:/\./,trailingZerosRegex:/0+$/,decimalPlaces(e){const t=e.toString(),r=t.indexOf("."),s=t.indexOf("e");return(r<0?0:(s<0?t.length:s)-r-1)+(s<0?0:Math.max(0,-parseInt(t.slice(s+1))))}};return number=t.extend({type:"number",flags:{unsafe:{default:!1}},coerce:{from:"string",method(e,{schema:t,error:r}){if(!e.match(s.numberRx))return;e=e.trim();const n={value:parseFloat(e)};if(0===n.value&&(n.value=0),!t._flags.unsafe)if(e.match(/e/i)){if(s.extractSignificantDigits(e)!==s.extractSignificantDigits(String(n.value)))return n.errors=r("number.unsafe"),n}else{const t=n.value.toString();if(t.match(/e/i))return n;if(t!==s.normalizeDecimal(e))return n.errors=r("number.unsafe"),n}return n}},validate(e,{schema:t,error:s,prefs:n}){if(e===1/0||e===-1/0)return{value:e,errors:s("number.infinity")};if(!r.isNumber(e))return{value:e,errors:s("number.base")};const i={value:e};if(n.convert){const e=t.$_getRule("precision");if(e){const t=Math.pow(10,e.args.limit);i.value=Math.round(i.value*t)/t}}return 0===i.value&&(i.value=0),!t._flags.unsafe&&(e>Number.MAX_SAFE_INTEGER||e<Number.MIN_SAFE_INTEGER)&&(i.errors=s("number.unsafe")),i},rules:{compare:{method:!1,validate:(e,t,{limit:s},{name:n,operator:i,args:a})=>r.compare(e,s,i)?e:t.error("number."+n,{limit:a.limit,value:e}),args:[{name:"limit",ref:!0,assert:r.isNumber,message:"must be a number"}]},greater:{method(e){return this.$_addRule({name:"greater",method:"compare",args:{limit:e},operator:">"})}},integer:{method(){return this.$_addRule("integer")},validate:(e,t)=>Math.trunc(e)-e==0?e:t.error("number.integer")},less:{method(e){return this.$_addRule({name:"less",method:"compare",args:{limit:e},operator:"<"})}},max:{method(e){return this.$_addRule({name:"max",method:"compare",args:{limit:e},operator:"<="})}},min:{method(e){return this.$_addRule({name:"min",method:"compare",args:{limit:e},operator:">="})}},multiple:{method(e){const t="number"==typeof e?s.decimalPlaces(e):null,r=Math.pow(10,t);return this.$_addRule({name:"multiple",args:{base:e,baseDecimalPlace:t,pfactor:r}})},validate:(e,t,{base:r,baseDecimalPlace:n,pfactor:i},a)=>s.decimalPlaces(e)>n?t.error("number.multiple",{multiple:a.args.base,value:e}):Math.round(i*e)%Math.round(i*r)==0?e:t.error("number.multiple",{multiple:a.args.base,value:e}),args:[{name:"base",ref:!0,assert:e=>"number"==typeof e&&isFinite(e)&&e>0,message:"must be a positive number"},"baseDecimalPlace","pfactor"],multi:!0},negative:{method(){return this.sign("negative")}},port:{method(){return this.$_addRule("port")},validate:(e,t)=>Number.isSafeInteger(e)&&e>=0&&e<=65535?e:t.error("number.port")},positive:{method(){return this.sign("positive")}},precision:{method(t){return e(Number.isSafeInteger(t),"limit must be an integer"),this.$_addRule({name:"precision",args:{limit:t}})},validate(e,t,{limit:r}){const n=e.toString().match(s.precisionRx);return Math.max((n[1]?n[1].length:0)-(n[2]?parseInt(n[2],10):0),0)<=r?e:t.error("number.precision",{limit:r,value:e})},convert:!0},sign:{method(t){return e(["negative","positive"].includes(t),"Invalid sign",t),this.$_addRule({name:"sign",args:{sign:t}})},validate:(e,t,{sign:r})=>"negative"===r&&e<0||"positive"===r&&e>0?e:t.error(`number.${r}`)},unsafe:{method(t=!0){return e("boolean"==typeof t,"enabled must be a boolean"),this.$_setFlag("unsafe",t)}}},cast:{string:{from:e=>"number"==typeof e,to:(e,t)=>e.toString()}},messages:{"number.base":"{{#label}} must be a number","number.greater":"{{#label}} must be greater than {{#limit}}","number.infinity":"{{#label}} cannot be infinity","number.integer":"{{#label}} must be an integer","number.less":"{{#label}} must be less than {{#limit}}","number.max":"{{#label}} must be less than or equal to {{#limit}}","number.min":"{{#label}} must be greater than or equal to {{#limit}}","number.multiple":"{{#label}} must be a multiple of {{#multiple}}","number.negative":"{{#label}} must be a negative number","number.port":"{{#label}} must be a valid port","number.positive":"{{#label}} must be a positive number","number.precision":"{{#label}} must have no more than {{#limit}} decimal places","number.unsafe":"{{#label}} must be a safe number"}}),s.extractSignificantDigits=function(e){return e.replace(s.exponentialPartRegex,"").replace(s.dotRegex,"").replace(s.trailingZerosRegex,"").replace(s.leadingSignAndZerosRegex,"")},s.normalizeDecimal=function(e){return(e=e.replace(/^\+/,"").replace(/\.0*$/,"").replace(/^(-?)\.([^\.]*)$/,"$10.$2").replace(/^(-?)0+([0-9])/,"$1$2")).includes(".")&&e.endsWith("0")&&(e=e.replace(/0+$/,"")),"-0"===e?"0":e},number}function requireObject(){if(hasRequiredObject)return object;hasRequiredObject=1;const e=requireKeys();return object=e.extend({type:"object",cast:{map:{from:e=>e&&"object"==typeof e,to:(e,t)=>new Map(Object.entries(e))}}})}lib$2.Sorter=class{constructor(){this._items=[],this.nodes=[]}add(e,t){const r=[].concat((t=t||{}).before||[]),s=[].concat(t.after||[]),n=t.group||"?",i=t.sort||0;Assert$2(!r.includes(n),`Item cannot come before itself: ${n}`),Assert$2(!r.includes("?"),"Item cannot come before unassociated items"),Assert$2(!s.includes(n),`Item cannot come after itself: ${n}`),Assert$2(!s.includes("?"),"Item cannot come after unassociated items"),Array.isArray(e)||(e=[e]);for(const t of e){const e={seq:this._items.length,sort:i,before:r,after:s,group:n,node:t};this._items.push(e)}if(!t.manual){const e=this._sort();Assert$2(e,"item","?"!==n?`added into group ${n}`:"","created a dependencies error")}return this.nodes}merge(e){Array.isArray(e)||(e=[e]);for(const t of e)if(t)for(const e of t._items)this._items.push(Object.assign({},e));this._items.sort(internals$3.mergeSort);for(let e=0;e<this._items.length;++e)this._items[e].seq=e;const t=this._sort();return Assert$2(t,"merge created a dependencies error"),this.nodes}sort(){const e=this._sort();return Assert$2(e,"sort created a dependencies error"),this.nodes}_sort(){const e={},t=Object.create(null),r=Object.create(null);for(const s of this._items){const n=s.seq,i=s.group;r[i]=r[i]||[],r[i].push(n),e[n]=s.before;for(const e of s.after)t[e]=t[e]||[],t[e].push(n)}for(const t in e){const s=[];for(const n in e[t]){const i=e[t][n];r[i]=r[i]||[],s.push(...r[i])}e[t]=s}for(const s in t)if(r[s])for(const n of r[s])e[n].push(...t[s]);const s={};for(const t in e){const r=e[t];for(const e of r)s[e]=s[e]||[],s[e].push(t)}const n={},i=[];for(let e=0;e<this._items.length;++e){let t=e;if(s[e]){t=null;for(let e=0;e<this._items.length;++e){if(!0===n[e])continue;s[e]||(s[e]=[]);const r=s[e].length;let i=0;for(let t=0;t<r;++t)n[s[e][t]]&&++i;if(i===r){t=e;break}}}null!==t&&(n[t]=!0,i.push(t))}if(i.length!==this._items.length)return!1;const a={};for(const e of this._items)a[e.seq]=e;this._items=[],this.nodes=[];for(const e of i){const t=a[e];this.nodes.push(t.node),this._items.push(t)}return!0}},internals$3.mergeSort=(e,t)=>e.sort===t.sort?0:e.sort<t.sort?-1:1;var domain={},errors={},exports;exports=errors,exports.codes={EMPTY_STRING:"Address must be a non-empty string",FORBIDDEN_UNICODE:"Address contains forbidden Unicode characters",MULTIPLE_AT_CHAR:"Address cannot contain more than one @ character",MISSING_AT_CHAR:"Address must contain one @ character",EMPTY_LOCAL:"Address local part cannot be empty",ADDRESS_TOO_LONG:"Address too long",LOCAL_TOO_LONG:"Address local part too long",EMPTY_LOCAL_SEGMENT:"Address local part contains empty dot-separated segment",INVALID_LOCAL_CHARS:"Address local part contains invalid character",DOMAIN_NON_EMPTY_STRING:"Domain must be a non-empty string",DOMAIN_TOO_LONG:"Domain too long",DOMAIN_INVALID_UNICODE_CHARS:"Domain contains forbidden Unicode characters",DOMAIN_INVALID_CHARS:"Domain contains invalid character",DOMAIN_INVALID_TLDS_CHARS:"Domain contains invalid tld character",DOMAIN_SEGMENTS_COUNT:"Domain lacks the minimum required number of segments",DOMAIN_SEGMENTS_COUNT_MAX:"Domain contains too many segments",DOMAIN_FORBIDDEN_TLDS:"Domain uses forbidden TLD",DOMAIN_EMPTY_SEGMENT:"Domain contains empty dot-separated segment",DOMAIN_LONG_SEGMENT:"Domain contains dot-separated segment that is too long"},exports.code=function(e){return{code:e,error:exports.codes[e]}},function(e){const t=errors,r={minDomainSegments:2,nonAsciiRx:/[^\x00-\x7f]/,domainControlRx:/[\x00-\x20@\:\/\\#!\$&\'\(\)\*\+,;=\?]/,tldSegmentRx:/^[a-zA-Z](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,domainSegmentRx:/^[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,URL:require$$0$1.URL||URL};e.analyze=function(e,s={}){if(!e)return t.code("DOMAIN_NON_EMPTY_STRING");if("string"!=typeof e)throw new Error("Invalid input: domain must be a string");if(e.length>256)return t.code("DOMAIN_TOO_LONG");if(!!r.nonAsciiRx.test(e)){if(!1===s.allowUnicode)return t.code("DOMAIN_INVALID_UNICODE_CHARS");e=e.normalize("NFC")}if(r.domainControlRx.test(e))return t.code("DOMAIN_INVALID_CHARS");e=r.punycode(e),s.allowFullyQualified&&"."===e[e.length-1]&&(e=e.slice(0,-1));const n=s.minDomainSegments||r.minDomainSegments,i=e.split(".");if(i.length<n)return t.code("DOMAIN_SEGMENTS_COUNT");if(s.maxDomainSegments&&i.length>s.maxDomainSegments)return t.code("DOMAIN_SEGMENTS_COUNT_MAX");const a=s.tlds;if(a){const e=i[i.length-1].toLowerCase();if(a.deny&&a.deny.has(e)||a.allow&&!a.allow.has(e))return t.code("DOMAIN_FORBIDDEN_TLDS")}for(let e=0;e<i.length;++e){const s=i[e];if(!s.length)return t.code("DOMAIN_EMPTY_SEGMENT");if(s.length>63)return t.code("DOMAIN_LONG_SEGMENT");if(e<i.length-1){if(!r.domainSegmentRx.test(s))return t.code("DOMAIN_INVALID_CHARS")}else if(!r.tldSegmentRx.test(s))return t.code("DOMAIN_INVALID_TLDS_CHARS")}return null},e.isValid=function(t,r){return!e.analyze(t,r)},r.punycode=function(e){e.includes("%")&&(e=e.replace(/%/g,"%25"));try{return new r.URL(`http://${e}`).host}catch(t){return e}}}(domain);var email={};const Util=require$$1,Domain=domain,Errors=errors,internals$2={nonAsciiRx:/[^\x00-\x7f]/,encoder:new(Util.TextEncoder||TextEncoder)};email.analyze=function(e,t){return internals$2.email(e,t)},email.isValid=function(e,t){return!internals$2.email(e,t)},internals$2.email=function(e,t={}){if("string"!=typeof e)throw new Error("Invalid input: email must be a string");if(!e)return Errors.code("EMPTY_STRING");const r=!internals$2.nonAsciiRx.test(e);if(!r){if(!1===t.allowUnicode)return Errors.code("FORBIDDEN_UNICODE");e=e.normalize("NFC")}const s=e.split("@");if(2!==s.length)return s.length>2?Errors.code("MULTIPLE_AT_CHAR"):Errors.code("MISSING_AT_CHAR");const[n,i]=s;if(!n)return Errors.code("EMPTY_LOCAL");if(!t.ignoreLength){if(e.length>254)return Errors.code("ADDRESS_TOO_LONG");if(internals$2.encoder.encode(n).length>64)return Errors.code("LOCAL_TOO_LONG")}return internals$2.local(n,r)||Domain.analyze(i,t)},internals$2.local=function(e,t){const r=e.split(".");for(const e of r){if(!e.length)return Errors.code("EMPTY_LOCAL_SEGMENT");if(t){if(!internals$2.atextRx.test(e))return Errors.code("INVALID_LOCAL_CHARS")}else for(const t of e){if(internals$2.atextRx.test(t))continue;const e=internals$2.binary(t);if(!internals$2.atomRx.test(e))return Errors.code("INVALID_LOCAL_CHARS")}}},internals$2.binary=function(e){return Array.from(internals$2.encoder.encode(e)).map((e=>String.fromCharCode(e))).join("")},internals$2.atextRx=/^[\w!#\$%&'\*\+\-/=\?\^`\{\|\}~]+$/,internals$2.atomRx=new RegExp(["(?:[\\xc2-\\xdf][\\x80-\\xbf])","(?:\\xe0[\\xa0-\\xbf][\\x80-\\xbf])|(?:[\\xe1-\\xec][\\x80-\\xbf]{2})|(?:\\xed[\\x80-\\x9f][\\x80-\\xbf])|(?:[\\xee-\\xef][\\x80-\\xbf]{2})","(?:\\xf0[\\x90-\\xbf][\\x80-\\xbf]{2})|(?:[\\xf1-\\xf3][\\x80-\\xbf]{3})|(?:\\xf4[\\x80-\\x8f][\\x80-\\xbf]{2})"].join("|"));var ip={},uri={},escapeRegex=function(e){return e.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g,"\\$&")};const Assert$1=assert,EscapeRegex=escapeRegex,internals$1={generate:function(){const e={},t="\\dA-Fa-f",r="["+t+"]",s="\\w-\\.~",n="!\\$&'\\(\\)\\*\\+,;=",i="%"+t,a=s+i+n+":@",o="["+a+"]",l="(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])";e.ipv4address="(?:"+l+"\\.){3}"+l;const c=r+"{1,4}",d="(?:"+c+":"+c+"|"+e.ipv4address+")",u="(?:"+c+":){6}"+d,p="::(?:"+c+":){5}"+d,h="(?:"+c+")?::(?:"+c+":){4}"+d,f="(?:(?:"+c+":){0,1}"+c+")?::(?:"+c+":){3}"+d,m="(?:(?:"+c+":){0,2}"+c+")?::(?:"+c+":){2}"+d,_="(?:(?:"+c+":){0,3}"+c+")?::"+c+":"+d,y="(?:(?:"+c+":){0,4}"+c+")?::"+d,g="(?:(?:"+c+":){0,5}"+c+")?::"+c,v="(?:(?:"+c+":){0,6}"+c+")?::";e.ipv4Cidr="(?:\\d|[1-2]\\d|3[0-2])",e.ipv6Cidr="(?:0{0,2}\\d|0?[1-9]\\d|1[01]\\d|12[0-8])",e.ipv6address="(?:"+u+"|"+p+"|"+h+"|"+f+"|"+m+"|"+_+"|"+y+"|"+g+"|"+v+")",e.ipvFuture="v"+r+"+\\.["+s+n+":]+",e.scheme="[a-zA-Z][a-zA-Z\\d+-\\.]*",e.schemeRegex=new RegExp(e.scheme);const b="["+s+i+n+":]*",w="["+s+i+n+"]{1,255}",E="(?:"+("\\[(?:"+e.ipv6address+"|"+e.ipvFuture+")\\]")+"|"+e.ipv4address+"|"+w+")",A="(?:"+b+"@)?"+E+"(?::\\d*)?",R="(?:"+b+"@)?("+E+")(?::\\d*)?",$=o+"*",T=o+"+",S="(?:\\/"+$+")*",x="\\/(?:"+T+S+")?",I=T+S,k="["+s+i+n+"@]+"+S,C="(?:\\/\\/\\/"+$+S+")";return e.hierPart="(?:(?:\\/\\/"+A+S+")|"+x+"|"+I+"|"+C+")",e.hierPartCapture="(?:(?:\\/\\/"+R+S+")|"+x+"|"+I+")",e.relativeRef="(?:(?:\\/\\/"+A+S+")|"+x+"|"+k+"|)",e.relativeRefCapture="(?:(?:\\/\\/"+R+S+")|"+x+"|"+k+"|)",e.query="["+a+"\\/\\?]*(?=#|$)",e.queryWithSquareBrackets="["+a+"\\[\\]\\/\\?]*(?=#|$)",e.fragment="["+a+"\\/\\?]*",e}};internals$1.rfc3986=internals$1.generate(),uri.ip={v4Cidr:internals$1.rfc3986.ipv4Cidr,v6Cidr:internals$1.rfc3986.ipv6Cidr,ipv4:internals$1.rfc3986.ipv4address,ipv6:internals$1.rfc3986.ipv6address,ipvfuture:internals$1.rfc3986.ipvFuture},internals$1.createRegex=function(e){const t=internals$1.rfc3986,r="(?:\\?"+(e.allowQuerySquareBrackets?t.queryWithSquareBrackets:t.query)+")?(?:#"+t.fragment+")?",s=e.domain?t.relativeRefCapture:t.relativeRef;if(e.relativeOnly)return internals$1.wrap(s+r);let n="";if(e.scheme){Assert$1(e.scheme instanceof RegExp||"string"==typeof e.scheme||Array.isArray(e.scheme),"scheme must be a RegExp, String, or Array");const r=[].concat(e.scheme);Assert$1(r.length>=1,"scheme must have at least 1 scheme specified");const s=[];for(let e=0;e<r.length;++e){const n=r[e];Assert$1(n instanceof RegExp||"string"==typeof n,"scheme at position "+e+" must be a RegExp or String"),n instanceof RegExp?s.push(n.source.toString()):(Assert$1(t.schemeRegex.test(n),"scheme at position "+e+" must be a valid scheme"),s.push(EscapeRegex(n)))}n=s.join("|")}const i="(?:"+(n?"(?:"+n+")":t.scheme)+":"+(e.domain?t.hierPartCapture:t.hierPart)+")",a=e.allowRelative?"(?:"+i+"|"+s+")":i;return internals$1.wrap(a+r,n)},internals$1.wrap=function(e,t){return{raw:e=`(?=.)(?!https?:/(?:$|[^/]))(?!https?:///)(?!https?:[^/])${e}`,regex:new RegExp(`^${e}$`),scheme:t}},internals$1.uriRegex=internals$1.createRegex({}),uri.regex=function(e={}){return e.scheme||e.allowRelative||e.relativeOnly||e.allowQuerySquareBrackets||e.domain?internals$1.createRegex(e):internals$1.uriRegex};const Assert=assert,Uri=uri;ip.regex=function(e={}){Assert(void 0===e.cidr||"string"==typeof e.cidr,"options.cidr must be a string");const t=e.cidr?e.cidr.toLowerCase():"optional";Assert(["required","optional","forbidden"].includes(t),"options.cidr must be one of required, optional, forbidden"),Assert(void 0===e.version||"string"==typeof e.version||Array.isArray(e.version),"options.version must be a string or an array of string");let r=e.version||["ipv4","ipv6","ipvfuture"];Array.isArray(r)||(r=[r]),Assert(r.length>=1,"options.version must have at least 1 version specified");for(let e=0;e<r.length;++e)Assert("string"==typeof r[e],"options.version must only contain strings"),r[e]=r[e].toLowerCase(),Assert(["ipv4","ipv6","ipvfuture"].includes(r[e]),"options.version contains unknown version "+r[e]+" - must be one of ipv4, ipv6, ipvfuture");r=Array.from(new Set(r));const s=r.map((e=>{if("forbidden"===t)return Uri.ip[e];const r=`\\/${"ipv4"===e?Uri.ip.v4Cidr:Uri.ip.v6Cidr}`;return"required"===t?`${Uri.ip[e]}${r}`:`${Uri.ip[e]}(?:${r})?`})),n=`(?:${s.join("|")})`,i=new RegExp(`^${n}$`);return{cidr:t,versions:r,regex:i,raw:n}};const internals={tlds:["AAA","AARP","ABB","ABBOTT","ABBVIE","ABC","ABLE","ABOGADO","ABUDHABI","AC","ACADEMY","ACCENTURE","ACCOUNTANT","ACCOUNTANTS","ACO","ACTOR","AD","ADS","ADULT","AE","AEG","AERO","AETNA","AF","AFL","AFRICA","AG","AGAKHAN","AGENCY","AI","AIG","AIRBUS","AIRFORCE","AIRTEL","AKDN","AL","ALIBABA","ALIPAY","ALLFINANZ","ALLSTATE","ALLY","ALSACE","ALSTOM","AM","AMAZON","AMERICANEXPRESS","AMERICANFAMILY","AMEX","AMFAM","AMICA","AMSTERDAM","ANALYTICS","ANDROID","ANQUAN","ANZ","AO","AOL","APARTMENTS","APP","APPLE","AQ","AQUARELLE","AR","ARAB","ARAMCO","ARCHI","ARMY","ARPA","ART","ARTE","AS","ASDA","ASIA","ASSOCIATES","AT","ATHLETA","ATTORNEY","AU","AUCTION","AUDI","AUDIBLE","AUDIO","AUSPOST","AUTHOR","AUTO","AUTOS","AVIANCA","AW","AWS","AX","AXA","AZ","AZURE","BA","BABY","BAIDU","BANAMEX","BAND","BANK","BAR","BARCELONA","BARCLAYCARD","BARCLAYS","BAREFOOT","BARGAINS","BASEBALL","BASKETBALL","BAUHAUS","BAYERN","BB","BBC","BBT","BBVA","BCG","BCN","BD","BE","BEATS","BEAUTY","BEER","BENTLEY","BERLIN","BEST","BESTBUY","BET","BF","BG","BH","BHARTI","BI","BIBLE","BID","BIKE","BING","BINGO","BIO","BIZ","BJ","BLACK","BLACKFRIDAY","BLOCKBUSTER","BLOG","BLOOMBERG","BLUE","BM","BMS","BMW","BN","BNPPARIBAS","BO","BOATS","BOEHRINGER","BOFA","BOM","BOND","BOO","BOOK","BOOKING","BOSCH","BOSTIK","BOSTON","BOT","BOUTIQUE","BOX","BR","BRADESCO","BRIDGESTONE","BROADWAY","BROKER","BROTHER","BRUSSELS","BS","BT","BUILD","BUILDERS","BUSINESS","BUY","BUZZ","BV","BW","BY","BZ","BZH","CA","CAB","CAFE","CAL","CALL","CALVINKLEIN","CAM","CAMERA","CAMP","CANON","CAPETOWN","CAPITAL","CAPITALONE","CAR","CARAVAN","CARDS","CARE","CAREER","CAREERS","CARS","CASA","CASE","CASH","CASINO","CAT","CATERING","CATHOLIC","CBA","CBN","CBRE","CC","CD","CENTER","CEO","CERN","CF","CFA","CFD","CG","CH","CHANEL","CHANNEL","CHARITY","CHASE","CHAT","CHEAP","CHINTAI","CHRISTMAS","CHROME","CHURCH","CI","CIPRIANI","CIRCLE","CISCO","CITADEL","CITI","CITIC","CITY","CK","CL","CLAIMS","CLEANING","CLICK","CLINIC","CLINIQUE","CLOTHING","CLOUD","CLUB","CLUBMED","CM","CN","CO","COACH","CODES","COFFEE","COLLEGE","COLOGNE","COM","COMCAST","COMMBANK","COMMUNITY","COMPANY","COMPARE","COMPUTER","COMSEC","CONDOS","CONSTRUCTION","CONSULTING","CONTACT","CONTRACTORS","COOKING","COOL","COOP","CORSICA","COUNTRY","COUPON","COUPONS","COURSES","CPA","CR","CREDIT","CREDITCARD","CREDITUNION","CRICKET","CROWN","CRS","CRUISE","CRUISES","CU","CUISINELLA","CV","CW","CX","CY","CYMRU","CYOU","CZ","DABUR","DAD","DANCE","DATA","DATE","DATING","DATSUN","DAY","DCLK","DDS","DE","DEAL","DEALER","DEALS","DEGREE","DELIVERY","DELL","DELOITTE","DELTA","DEMOCRAT","DENTAL","DENTIST","DESI","DESIGN","DEV","DHL","DIAMONDS","DIET","DIGITAL","DIRECT","DIRECTORY","DISCOUNT","DISCOVER","DISH","DIY","DJ","DK","DM","DNP","DO","DOCS","DOCTOR","DOG","DOMAINS","DOT","DOWNLOAD","DRIVE","DTV","DUBAI","DUNLOP","DUPONT","DURBAN","DVAG","DVR","DZ","EARTH","EAT","EC","ECO","EDEKA","EDU","EDUCATION","EE","EG","EMAIL","EMERCK","ENERGY","ENGINEER","ENGINEERING","ENTERPRISES","EPSON","EQUIPMENT","ER","ERICSSON","ERNI","ES","ESQ","ESTATE","ET","EU","EUROVISION","EUS","EVENTS","EXCHANGE","EXPERT","EXPOSED","EXPRESS","EXTRASPACE","FAGE","FAIL","FAIRWINDS","FAITH","FAMILY","FAN","FANS","FARM","FARMERS","FASHION","FAST","FEDEX","FEEDBACK","FERRARI","FERRERO","FI","FIDELITY","FIDO","FILM","FINAL","FINANCE","FINANCIAL","FIRE","FIRESTONE","FIRMDALE","FISH","FISHING","FIT","FITNESS","FJ","FK","FLICKR","FLIGHTS","FLIR","FLORIST","FLOWERS","FLY","FM","FO","FOO","FOOD","FOOTBALL","FORD","FOREX","FORSALE","FORUM","FOUNDATION","FOX","FR","FREE","FRESENIUS","FRL","FROGANS","FRONTIER","FTR","FUJITSU","FUN","FUND","FURNITURE","FUTBOL","FYI","GA","GAL","GALLERY","GALLO","GALLUP","GAME","GAMES","GAP","GARDEN","GAY","GB","GBIZ","GD","GDN","GE","GEA","GENT","GENTING","GEORGE","GF","GG","GGEE","GH","GI","GIFT","GIFTS","GIVES","GIVING","GL","GLASS","GLE","GLOBAL","GLOBO","GM","GMAIL","GMBH","GMO","GMX","GN","GODADDY","GOLD","GOLDPOINT","GOLF","GOO","GOODYEAR","GOOG","GOOGLE","GOP","GOT","GOV","GP","GQ","GR","GRAINGER","GRAPHICS","GRATIS","GREEN","GRIPE","GROCERY","GROUP","GS","GT","GU","GUARDIAN","GUCCI","GUGE","GUIDE","GUITARS","GURU","GW","GY","HAIR","HAMBURG","HANGOUT","HAUS","HBO","HDFC","HDFCBANK","HEALTH","HEALTHCARE","HELP","HELSINKI","HERE","HERMES","HIPHOP","HISAMITSU","HITACHI","HIV","HK","HKT","HM","HN","HOCKEY","HOLDINGS","HOLIDAY","HOMEDEPOT","HOMEGOODS","HOMES","HOMESENSE","HONDA","HORSE","HOSPITAL","HOST","HOSTING","HOT","HOTELS","HOTMAIL","HOUSE","HOW","HR","HSBC","HT","HU","HUGHES","HYATT","HYUNDAI","IBM","ICBC","ICE","ICU","ID","IE","IEEE","IFM","IKANO","IL","IM","IMAMAT","IMDB","IMMO","IMMOBILIEN","IN","INC","INDUSTRIES","INFINITI","INFO","ING","INK","INSTITUTE","INSURANCE","INSURE","INT","INTERNATIONAL","INTUIT","INVESTMENTS","IO","IPIRANGA","IQ","IR","IRISH","IS","ISMAILI","IST","ISTANBUL","IT","ITAU","ITV","JAGUAR","JAVA","JCB","JE","JEEP","JETZT","JEWELRY","JIO","JLL","JM","JMP","JNJ","JO","JOBS","JOBURG","JOT","JOY","JP","JPMORGAN","JPRS","JUEGOS","JUNIPER","KAUFEN","KDDI","KE","KERRYHOTELS","KERRYLOGISTICS","KERRYPROPERTIES","KFH","KG","KH","KI","KIA","KIDS","KIM","KINDLE","KITCHEN","KIWI","KM","KN","KOELN","KOMATSU","KOSHER","KP","KPMG","KPN","KR","KRD","KRED","KUOKGROUP","KW","KY","KYOTO","KZ","LA","LACAIXA","LAMBORGHINI","LAMER","LANCASTER","LAND","LANDROVER","LANXESS","LASALLE","LAT","LATINO","LATROBE","LAW","LAWYER","LB","LC","LDS","LEASE","LECLERC","LEFRAK","LEGAL","LEGO","LEXUS","LGBT","LI","LIDL","LIFE","LIFEINSURANCE","LIFESTYLE","LIGHTING","LIKE","LILLY","LIMITED","LIMO","LINCOLN","LINK","LIPSY","LIVE","LIVING","LK","LLC","LLP","LOAN","LOANS","LOCKER","LOCUS","LOL","LONDON","LOTTE","LOTTO","LOVE","LPL","LPLFINANCIAL","LR","LS","LT","LTD","LTDA","LU","LUNDBECK","LUXE","LUXURY","LV","LY","MA","MADRID","MAIF","MAISON","MAKEUP","MAN","MANAGEMENT","MANGO","MAP","MARKET","MARKETING","MARKETS","MARRIOTT","MARSHALLS","MATTEL","MBA","MC","MCKINSEY","MD","ME","MED","MEDIA","MEET","MELBOURNE","MEME","MEMORIAL","MEN","MENU","MERCKMSD","MG","MH","MIAMI","MICROSOFT","MIL","MINI","MINT","MIT","MITSUBISHI","MK","ML","MLB","MLS","MM","MMA","MN","MO","MOBI","MOBILE","MODA","MOE","MOI","MOM","MONASH","MONEY","MONSTER","MORMON","MORTGAGE","MOSCOW","MOTO","MOTORCYCLES","MOV","MOVIE","MP","MQ","MR","MS","MSD","MT","MTN","MTR","MU","MUSEUM","MUSIC","MV","MW","MX","MY","MZ","NA","NAB","NAGOYA","NAME","NATURA","NAVY","NBA","NC","NE","NEC","NET","NETBANK","NETFLIX","NETWORK","NEUSTAR","NEW","NEWS","NEXT","NEXTDIRECT","NEXUS","NF","NFL","NG","NGO","NHK","NI","NICO","NIKE","NIKON","NINJA","NISSAN","NISSAY","NL","NO","NOKIA","NORTON","NOW","NOWRUZ","NOWTV","NP","NR","NRA","NRW","NTT","NU","NYC","NZ","OBI","OBSERVER","OFFICE","OKINAWA","OLAYAN","OLAYANGROUP","OLLO","OM","OMEGA","ONE","ONG","ONL","ONLINE","OOO","OPEN","ORACLE","ORANGE","ORG","ORGANIC","ORIGINS","OSAKA","OTSUKA","OTT","OVH","PA","PAGE","PANASONIC","PARIS","PARS","PARTNERS","PARTS","PARTY","PAY","PCCW","PE","PET","PF","PFIZER","PG","PH","PHARMACY","PHD","PHILIPS","PHONE","PHOTO","PHOTOGRAPHY","PHOTOS","PHYSIO","PICS","PICTET","PICTURES","PID","PIN","PING","PINK","PIONEER","PIZZA","PK","PL","PLACE","PLAY","PLAYSTATION","PLUMBING","PLUS","PM","PN","PNC","POHL","POKER","POLITIE","PORN","POST","PR","PRAMERICA","PRAXI","PRESS","PRIME","PRO","PROD","PRODUCTIONS","PROF","PROGRESSIVE","PROMO","PROPERTIES","PROPERTY","PROTECTION","PRU","PRUDENTIAL","PS","PT","PUB","PW","PWC","PY","QA","QPON","QUEBEC","QUEST","RACING","RADIO","RE","READ","REALESTATE","REALTOR","REALTY","RECIPES","RED","REDSTONE","REDUMBRELLA","REHAB","REISE","REISEN","REIT","RELIANCE","REN","RENT","RENTALS","REPAIR","REPORT","REPUBLICAN","REST","RESTAURANT","REVIEW","REVIEWS","REXROTH","RICH","RICHARDLI","RICOH","RIL","RIO","RIP","RO","ROCKS","RODEO","ROGERS","ROOM","RS","RSVP","RU","RUGBY","RUHR","RUN","RW","RWE","RYUKYU","SA","SAARLAND","SAFE","SAFETY","SAKURA","SALE","SALON","SAMSCLUB","SAMSUNG","SANDVIK","SANDVIKCOROMANT","SANOFI","SAP","SARL","SAS","SAVE","SAXO","SB","SBI","SBS","SC","SCB","SCHAEFFLER","SCHMIDT","SCHOLARSHIPS","SCHOOL","SCHULE","SCHWARZ","SCIENCE","SCOT","SD","SE","SEARCH","SEAT","SECURE","SECURITY","SEEK","SELECT","SENER","SERVICES","SEVEN","SEW","SEX","SEXY","SFR","SG","SH","SHANGRILA","SHARP","SHAW","SHELL","SHIA","SHIKSHA","SHOES","SHOP","SHOPPING","SHOUJI","SHOW","SI","SILK","SINA","SINGLES","SITE","SJ","SK","SKI","SKIN","SKY","SKYPE","SL","SLING","SM","SMART","SMILE","SN","SNCF","SO","SOCCER","SOCIAL","SOFTBANK","SOFTWARE","SOHU","SOLAR","SOLUTIONS","SONG","SONY","SOY","SPA","SPACE","SPORT","SPOT","SR","SRL","SS","ST","STADA","STAPLES","STAR","STATEBANK","STATEFARM","STC","STCGROUP","STOCKHOLM","STORAGE","STORE","STREAM","STUDIO","STUDY","STYLE","SU","SUCKS","SUPPLIES","SUPPLY","SUPPORT","SURF","SURGERY","SUZUKI","SV","SWATCH","SWISS","SX","SY","SYDNEY","SYSTEMS","SZ","TAB","TAIPEI","TALK","TAOBAO","TARGET","TATAMOTORS","TATAR","TATTOO","TAX","TAXI","TC","TCI","TD","TDK","TEAM","TECH","TECHNOLOGY","TEL","TEMASEK","TENNIS","TEVA","TF","TG","TH","THD","THEATER","THEATRE","TIAA","TICKETS","TIENDA","TIPS","TIRES","TIROL","TJ","TJMAXX","TJX","TK","TKMAXX","TL","TM","TMALL","TN","TO","TODAY","TOKYO","TOOLS","TOP","TORAY","TOSHIBA","TOTAL","TOURS","TOWN","TOYOTA","TOYS","TR","TRADE","TRADING","TRAINING","TRAVEL","TRAVELERS","TRAVELERSINSURANCE","TRUST","TRV","TT","TUBE","TUI","TUNES","TUSHU","TV","TVS","TW","TZ","UA","UBANK","UBS","UG","UK","UNICOM","UNIVERSITY","UNO","UOL","UPS","US","UY","UZ","VA","VACATIONS","VANA","VANGUARD","VC","VE","VEGAS","VENTURES","VERISIGN","VERSICHERUNG","VET","VG","VI","VIAJES","VIDEO","VIG","VIKING","VILLAS","VIN","VIP","VIRGIN","VISA","VISION","VIVA","VIVO","VLAANDEREN","VN","VODKA","VOLVO","VOTE","VOTING","VOTO","VOYAGE","VU","WALES","WALMART","WALTER","WANG","WANGGOU","WATCH","WATCHES","WEATHER","WEATHERCHANNEL","WEBCAM","WEBER","WEBSITE","WED","WEDDING","WEIBO","WEIR","WF","WHOSWHO","WIEN","WIKI","WILLIAMHILL","WIN","WINDOWS","WINE","WINNERS","WME","WOLTERSKLUWER","WOODSIDE","WORK","WORKS","WORLD","WOW","WS","WTC","WTF","XBOX","XEROX","XFINITY","XIHUAN","XIN","XN--11B4C3D","XN--1CK2E1B","XN--1QQW23A","XN--2SCRJ9C","XN--30RR7Y","XN--3BST00M","XN--3DS443G","XN--3E0B707E","XN--3HCRJ9C","XN--3PXU8K","XN--42C2D9A","XN--45BR5CYL","XN--45BRJ9C","XN--45Q11C","XN--4DBRK0CE","XN--4GBRIM","XN--54B7FTA0CC","XN--55QW42G","XN--55QX5D","XN--5SU34J936BGSG","XN--5TZM5G","XN--6FRZ82G","XN--6QQ986B3XL","XN--80ADXHKS","XN--80AO21A","XN--80AQECDR1A","XN--80ASEHDB","XN--80ASWG","XN--8Y0A063A","XN--90A3AC","XN--90AE","XN--90AIS","XN--9DBQ2A","XN--9ET52U","XN--9KRT00A","XN--B4W605FERD","XN--BCK1B9A5DRE4C","XN--C1AVG","XN--C2BR7G","XN--CCK2B3B","XN--CCKWCXETD","XN--CG4BKI","XN--CLCHC0EA0B2G2A9GCD","XN--CZR694B","XN--CZRS0T","XN--CZRU2D","XN--D1ACJ3B","XN--D1ALF","XN--E1A4C","XN--ECKVDTC9D","XN--EFVY88H","XN--FCT429K","XN--FHBEI","XN--FIQ228C5HS","XN--FIQ64B","XN--FIQS8S","XN--FIQZ9S","XN--FJQ720A","XN--FLW351E","XN--FPCRJ9C3D","XN--FZC2C9E2C","XN--FZYS8D69UVGM","XN--G2XX48C","XN--GCKR3F0F","XN--GECRJ9C","XN--GK3AT1E","XN--H2BREG3EVE","XN--H2BRJ9C","XN--H2BRJ9C8C","XN--HXT814E","XN--I1B6B1A6A2E","XN--IMR513N","XN--IO0A7I","XN--J1AEF","XN--J1AMH","XN--J6W193G","XN--JLQ480N2RG","XN--JVR189M","XN--KCRX77D1X4A","XN--KPRW13D","XN--KPRY57D","XN--KPUT3I","XN--L1ACC","XN--LGBBAT1AD8J","XN--MGB9AWBF","XN--MGBA3A3EJT","XN--MGBA3A4F16A","XN--MGBA7C0BBN0A","XN--MGBAAM7A8H","XN--MGBAB2BD","XN--MGBAH1A3HJKRD","XN--MGBAI9AZGQP6J","XN--MGBAYH7GPA","XN--MGBBH1A","XN--MGBBH1A71E","XN--MGBC0A9AZCG","XN--MGBCA7DZDO","XN--MGBCPQ6GPA1A","XN--MGBERP4A5D4AR","XN--MGBGU82A","XN--MGBI4ECEXP","XN--MGBPL2FH","XN--MGBT3DHD","XN--MGBTX2B","XN--MGBX4CD0AB","XN--MIX891F","XN--MK1BU44C","XN--MXTQ1M","XN--NGBC5AZD","XN--NGBE9E0A","XN--NGBRX","XN--NODE","XN--NQV7F","XN--NQV7FS00EMA","XN--NYQY26A","XN--O3CW4H","XN--OGBPF8FL","XN--OTU796D","XN--P1ACF","XN--P1AI","XN--PGBS0DH","XN--PSSY2U","XN--Q7CE6A","XN--Q9JYB4C","XN--QCKA1PMC","XN--QXA6A","XN--QXAM","XN--RHQV96G","XN--ROVU88B","XN--RVC1E0AM3E","XN--S9BRJ9C","XN--SES554G","XN--T60B56A","XN--TCKWE","XN--TIQ49XQYJ","XN--UNUP4Y","XN--VERMGENSBERATER-CTB","XN--VERMGENSBERATUNG-PWB","XN--VHQUV","XN--VUQ861B","XN--W4R85EL8FHU5DNRA","XN--W4RS40L","XN--WGBH1C","XN--WGBL6A","XN--XHQ521B","XN--XKC2AL3HYE2A","XN--XKC2DL3A5EE0H","XN--Y9A3AQ","XN--YFRO4I67O","XN--YGBI2AMMX","XN--ZFR164B","XXX","XYZ","YACHTS","YAHOO","YAMAXUN","YANDEX","YE","YODOBASHI","YOGA","YOKOHAMA","YOU","YOUTUBE","YT","YUN","ZA","ZAPPOS","ZARA","ZERO","ZIP","ZM","ZONE","ZUERICH","ZW"]};var tlds=new Set(internals.tlds.map((e=>e.toLowerCase()))),string,hasRequiredString,symbol,hasRequiredSymbol,binary,hasRequiredBinary,lib$1,hasRequiredLib;function requireString(){if(hasRequiredString)return string;hasRequiredString=1;const e=assert,t=domain,r=email,s=ip,n=escapeRegex,i=tlds,a=uri,o=requireAny(),l=requireCommon(),c={tlds:i instanceof Set&&{tlds:{allow:i,deny:null}},base64Regex:{true:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}==|[\w\-]{3}=)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/},false:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}(==)?|[\w\-]{3}=?)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/}},dataUriRegex:/^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/,hexRegex:{withPrefix:/^0x[0-9a-f]+$/i,withOptionalPrefix:/^(?:0x)?[0-9a-f]+$/i,withoutPrefix:/^[0-9a-f]+$/i},ipRegex:s.regex({cidr:"forbidden"}).regex,isoDurationRegex:/^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$/,guidBrackets:{"{":"}","[":"]","(":")","":""},guidVersions:{uuidv1:"1",uuidv2:"2",uuidv3:"3",uuidv4:"4",uuidv5:"5",uuidv6:"6",uuidv7:"7",uuidv8:"8"},guidSeparators:new Set([void 0,!0,!1,"-",":"]),normalizationForms:["NFC","NFD","NFKC","NFKD"]};return string=o.extend({type:"string",flags:{insensitive:{default:!1},truncate:{default:!1}},terms:{replacements:{init:null}},coerce:{from:"string",method(e,{schema:t,state:r,prefs:s}){const n=t.$_getRule("normalize");n&&(e=e.normalize(n.args.form));const i=t.$_getRule("case");i&&(e="upper"===i.args.direction?e.toLocaleUpperCase():e.toLocaleLowerCase());const a=t.$_getRule("trim");if(a&&a.args.enabled&&(e=e.trim()),t.$_terms.replacements)for(const r of t.$_terms.replacements)e=e.replace(r.pattern,r.replacement);const o=t.$_getRule("hex");if(o&&o.args.options.byteAligned&&e.length%2!=0&&(e=`0${e}`),t.$_getRule("isoDate")){const t=c.isoDate(e);t&&(e=t)}if(t._flags.truncate){const n=t.$_getRule("max");if(n){let i=n.args.limit;if(l.isResolvable(i)&&(i=i.resolve(e,r,s),!l.limit(i)))return{value:e,errors:t.$_createError("any.ref",i,{ref:n.args.limit,arg:"limit",reason:"must be a positive integer"},r,s)};e=e.slice(0,i)}}return{value:e}}},validate(e,{schema:t,error:r}){if("string"!=typeof e)return{value:e,errors:r("string.base")};if(""===e){const s=t.$_getRule("min");if(s&&0===s.args.limit)return;return{value:e,errors:r("string.empty")}}},rules:{alphanum:{method(){return this.$_addRule("alphanum")},validate:(e,t)=>/^[a-zA-Z0-9]+$/.test(e)?e:t.error("string.alphanum")},base64:{method(t={}){return l.assertOptions(t,["paddingRequired","urlSafe"]),t={urlSafe:!1,paddingRequired:!0,...t},e("boolean"==typeof t.paddingRequired,"paddingRequired must be boolean"),e("boolean"==typeof t.urlSafe,"urlSafe must be boolean"),this.$_addRule({name:"base64",args:{options:t}})},validate:(e,t,{options:r})=>c.base64Regex[r.paddingRequired][r.urlSafe].test(e)?e:t.error("string.base64")},case:{method(t){return e(["lower","upper"].includes(t),"Invalid case:",t),this.$_addRule({name:"case",args:{direction:t}})},validate:(e,t,{direction:r})=>"lower"===r&&e===e.toLocaleLowerCase()||"upper"===r&&e===e.toLocaleUpperCase()?e:t.error(`string.${r}case`),convert:!0},creditCard:{method(){return this.$_addRule("creditCard")},validate(e,t){let r=e.length,s=0,n=1;for(;r--;){const t=e.charAt(r)*n;s+=t-9*(t>9),n^=3}return s>0&&s%10==0?e:t.error("string.creditCard")}},dataUri:{method(t={}){return l.assertOptions(t,["paddingRequired"]),t={paddingRequired:!0,...t},e("boolean"==typeof t.paddingRequired,"paddingRequired must be boolean"),this.$_addRule({name:"dataUri",args:{options:t}})},validate(e,t,{options:r}){const s=e.match(c.dataUriRegex);if(s){if(!s[2])return e;if("base64"!==s[2])return e;if(c.base64Regex[r.paddingRequired].false.test(s[3]))return e}return t.error("string.dataUri")}},domain:{method(e){e&&l.assertOptions(e,["allowFullyQualified","allowUnicode","maxDomainSegments","minDomainSegments","tlds"]);const t=c.addressOptions(e);return this.$_addRule({name:"domain",args:{options:e},address:t})},validate:(e,r,s,{address:n})=>t.isValid(e,n)?e:r.error("string.domain")},email:{method(t={}){l.assertOptions(t,["allowFullyQualified","allowUnicode","ignoreLength","maxDomainSegments","minDomainSegments","multiple","separator","tlds"]),e(void 0===t.multiple||"boolean"==typeof t.multiple,"multiple option must be an boolean");const r=c.addressOptions(t),s=new RegExp(`\\s*[${t.separator?n(t.separator):","}]\\s*`);return this.$_addRule({name:"email",args:{options:t},regex:s,address:r})},validate(e,t,{options:s},{regex:n,address:i}){const a=s.multiple?e.split(n):[e],o=[];for(const e of a)r.isValid(e,i)||o.push(e);return o.length?t.error("string.email",{value:e,invalids:o}):e}},guid:{alias:"uuid",method(t={}){l.assertOptions(t,["version","separator"]);let r="";if(t.version){const s=[].concat(t.version);e(s.length>=1,"version must have at least 1 valid version specified");const n=new Set;for(let t=0;t<s.length;++t){const i=s[t];e("string"==typeof i,"version at position "+t+" must be a string");const a=c.guidVersions[i.toLowerCase()];e(a,"version at position "+t+" must be one of "+Object.keys(c.guidVersions).join(", ")),e(!n.has(a),"version at position "+t+" must not be a duplicate"),r+=a,n.add(a)}}e(c.guidSeparators.has(t.separator),'separator must be one of true, false, "-", or ":"');const s=void 0===t.separator?"[:-]?":!0===t.separator?"[:-]":!1===t.separator?"[]?":`\\${t.separator}`,n=new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}(${s})[0-9A-F]{4}\\2?[${r||"0-9A-F"}][0-9A-F]{3}\\2?[${r?"89AB":"0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`,"i");return this.$_addRule({name:"guid",args:{options:t},regex:n})},validate(e,t,r,{regex:s}){const n=s.exec(e);return n?c.guidBrackets[n[1]]!==n[n.length-1]?t.error("string.guid"):e:t.error("string.guid")}},hex:{method(t={}){return l.assertOptions(t,["byteAligned","prefix"]),t={byteAligned:!1,prefix:!1,...t},e("boolean"==typeof t.byteAligned,"byteAligned must be boolean"),e("boolean"==typeof t.prefix||"optional"===t.prefix,'prefix must be boolean or "optional"'),this.$_addRule({name:"hex",args:{options:t}})},validate:(e,t,{options:r})=>("optional"===r.prefix?c.hexRegex.withOptionalPrefix:!0===r.prefix?c.hexRegex.withPrefix:c.hexRegex.withoutPrefix).test(e)?r.byteAligned&&e.length%2!=0?t.error("string.hexAlign"):e:t.error("string.hex")},hostname:{method(){return this.$_addRule("hostname")},validate:(e,r)=>t.isValid(e,{minDomainSegments:1})||c.ipRegex.test(e)?e:r.error("string.hostname")},insensitive:{method(){return this.$_setFlag("insensitive",!0)}},ip:{method(e={}){l.assertOptions(e,["cidr","version"]);const{cidr:t,versions:r,regex:n}=s.regex(e),i=e.version?r:void 0;return this.$_addRule({name:"ip",args:{options:{cidr:t,version:i}},regex:n})},validate:(e,t,{options:r},{regex:s})=>s.test(e)?e:r.version?t.error("string.ipVersion",{value:e,cidr:r.cidr,version:r.version}):t.error("string.ip",{value:e,cidr:r.cidr})},isoDate:{method(){return this.$_addRule("isoDate")},validate:(e,{error:t})=>c.isoDate(e)?e:t("string.isoDate")},isoDuration:{method(){return this.$_addRule("isoDuration")},validate:(e,t)=>c.isoDurationRegex.test(e)?e:t.error("string.isoDuration")},length:{method(e,t){return c.length(this,"length",e,"=",t)},validate(e,t,{limit:r,encoding:s},{name:n,operator:i,args:a}){const o=s?Buffer&&Buffer.byteLength(e,s):e.length;return l.compare(o,r,i)?e:t.error("string."+n,{limit:a.limit,value:e,encoding:s})},args:[{name:"limit",ref:!0,assert:l.limit,message:"must be a positive integer"},"encoding"]},lowercase:{method(){return this.case("lower")}},max:{method(e,t){return c.length(this,"max",e,"<=",t)},args:["limit","encoding"]},min:{method(e,t){return c.length(this,"min",e,">=",t)},args:["limit","encoding"]},normalize:{method(t="NFC"){return e(c.normalizationForms.includes(t),"normalization form must be one of "+c.normalizationForms.join(", ")),this.$_addRule({name:"normalize",args:{form:t}})},validate:(e,{error:t},{form:r})=>e===e.normalize(r)?e:t("string.normalize",{value:e,form:r}),convert:!0},pattern:{alias:"regex",method(t,r={}){e(t instanceof RegExp,"regex must be a RegExp"),e(!t.flags.includes("g")&&!t.flags.includes("y"),"regex should not use global or sticky mode"),"string"==typeof r&&(r={name:r}),l.assertOptions(r,["invert","name"]);const s=["string.pattern",r.invert?".invert":"",r.name?".name":".base"].join("");return this.$_addRule({name:"pattern",args:{regex:t,options:r},errorCode:s})},validate:(e,t,{regex:r,options:s},{errorCode:n})=>r.test(e)^s.invert?e:t.error(n,{name:s.name,regex:r,value:e}),args:["regex","options"],multi:!0},replace:{method(t,r){"string"==typeof t&&(t=new RegExp(n(t),"g")),e(t instanceof RegExp,"pattern must be a RegExp"),e("string"==typeof r,"replacement must be a String");const s=this.clone();return s.$_terms.replacements||(s.$_terms.replacements=[]),s.$_terms.replacements.push({pattern:t,replacement:r}),s}},token:{method(){return this.$_addRule("token")},validate:(e,t)=>/^\w+$/.test(e)?e:t.error("string.token")},trim:{method(t=!0){return e("boolean"==typeof t,"enabled must be a boolean"),this.$_addRule({name:"trim",args:{enabled:t}})},validate:(e,t,{enabled:r})=>r&&e!==e.trim()?t.error("string.trim"):e,convert:!0},truncate:{method(t=!0){return e("boolean"==typeof t,"enabled must be a boolean"),this.$_setFlag("truncate",t)}},uppercase:{method(){return this.case("upper")}},uri:{method(e={}){l.assertOptions(e,["allowRelative","allowQuerySquareBrackets","domain","relativeOnly","scheme","encodeUri"]),e.domain&&l.assertOptions(e.domain,["allowFullyQualified","allowUnicode","maxDomainSegments","minDomainSegments","tlds"]);const{regex:t,scheme:r}=a.regex(e),s=e.domain?c.addressOptions(e.domain):null;return this.$_addRule({name:"uri",args:{options:e},regex:t,domain:s,scheme:r})},validate(e,r,{options:s},{regex:n,domain:i,scheme:a}){if(["http:/","https:/"].includes(e))return r.error("string.uri");let o=n.exec(e);if(!o&&r.prefs.convert&&s.encodeUri){const t=encodeURI(e);o=n.exec(t),o&&(e=t)}if(o){const n=o[1]||o[2];return!i||s.allowRelative&&!n||t.isValid(n,i)?e:r.error("string.domain",{value:n})}return s.relativeOnly?r.error("string.uriRelativeOnly"):s.scheme?r.error("string.uriCustomScheme",{scheme:a,value:e}):r.error("string.uri")}}},manifest:{build(e,t){if(t.replacements)for(const{pattern:r,replacement:s}of t.replacements)e=e.replace(r,s);return e}},messages:{"string.alphanum":"{{#label}} must only contain alpha-numeric characters","string.base":"{{#label}} must be a string","string.base64":"{{#label}} must be a valid base64 string","string.creditCard":"{{#label}} must be a credit card","string.dataUri":"{{#label}} must be a valid dataUri string","string.domain":"{{#label}} must contain a valid domain name","string.email":"{{#label}} must be a valid email","string.empty":"{{#label}} is not allowed to be empty","string.guid":"{{#label}} must be a valid GUID","string.hex":"{{#label}} must only contain hexadecimal characters","string.hexAlign":"{{#label}} hex decoded representation must be byte aligned","string.hostname":"{{#label}} must be a valid hostname","string.ip":"{{#label}} must be a valid ip address with a {{#cidr}} CIDR","string.ipVersion":"{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR","string.isoDate":"{{#label}} must be in iso format","string.isoDuration":"{{#label}} must be a valid ISO 8601 duration","string.length":"{{#label}} length must be {{#limit}} characters long","string.lowercase":"{{#label}} must only contain lowercase characters","string.max":"{{#label}} length must be less than or equal to {{#limit}} characters long","string.min":"{{#label}} length must be at least {{#limit}} characters long","string.normalize":"{{#label}} must be unicode normalized in the {{#form}} form","string.token":"{{#label}} must only contain alpha-numeric and underscore characters","string.pattern.base":"{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}","string.pattern.name":"{{#label}} with value {:[.]} fails to match the {{#name}} pattern","string.pattern.invert.base":"{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}","string.pattern.invert.name":"{{#label}} with value {:[.]} matches the inverted {{#name}} pattern","string.trim":"{{#label}} must not have leading or trailing whitespace","string.uri":"{{#label}} must be a valid uri","string.uriCustomScheme":"{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern","string.uriRelativeOnly":"{{#label}} must be a valid relative uri","string.uppercase":"{{#label}} must only contain uppercase characters"}}),c.addressOptions=function(t){if(!t)return c.tlds||t;if(e(void 0===t.minDomainSegments||Number.isSafeInteger(t.minDomainSegments)&&t.minDomainSegments>0,"minDomainSegments must be a positive integer"),e(void 0===t.maxDomainSegments||Number.isSafeInteger(t.maxDomainSegments)&&t.maxDomainSegments>0,"maxDomainSegments must be a positive integer"),!1===t.tlds)return t;if(!0===t.tlds||void 0===t.tlds)return e(c.tlds,"Built-in TLD list disabled"),Object.assign({},t,c.tlds);e("object"==typeof t.tlds,"tlds must be true, false, or an object");const r=t.tlds.deny;if(r)return Array.isArray(r)&&(t=Object.assign({},t,{tlds:{deny:new Set(r)}})),e(t.tlds.deny instanceof Set,"tlds.deny must be an array, Set, or boolean"),e(!t.tlds.allow,"Cannot specify both tlds.allow and tlds.deny lists"),c.validateTlds(t.tlds.deny,"tlds.deny"),t;const s=t.tlds.allow;return s?!0===s?(e(c.tlds,"Built-in TLD list disabled"),Object.assign({},t,c.tlds)):(Array.isArray(s)&&(t=Object.assign({},t,{tlds:{allow:new Set(s)}})),e(t.tlds.allow instanceof Set,"tlds.allow must be an array, Set, or boolean"),c.validateTlds(t.tlds.allow,"tlds.allow"),t):t},c.validateTlds=function(r,s){for(const n of r)e(t.isValid(n,{minDomainSegments:1,maxDomainSegments:1}),`${s} must contain valid top level domain names`)},c.isoDate=function(e){if(!l.isIsoDate(e))return null;/.*T.*[+-]\d\d$/.test(e)&&(e+="00");const t=new Date(e);return isNaN(t.getTime())?null:t.toISOString()},c.length=function(t,r,s,n,i){return e(!i||Buffer&&Buffer.isEncoding(i),"Invalid encoding:",i),t.$_addRule({name:r,method:"length",args:{limit:s,encoding:i},operator:n})},string}function requireSymbol(){if(hasRequiredSymbol)return symbol;hasRequiredSymbol=1;const e=assert,t=requireAny(),r={};return r.Map=class extends Map{slice(){return new r.Map(this)}},symbol=t.extend({type:"symbol",terms:{map:{init:new r.Map}},coerce:{method(e,{schema:t,error:r}){const s=t.$_terms.map.get(e);return s&&(e=s),t._flags.only&&"symbol"!=typeof e?{value:e,errors:r("symbol.map",{map:t.$_terms.map})}:{value:e}}},validate(e,{error:t}){if("symbol"!=typeof e)return{value:e,errors:t("symbol.base")}},rules:{map:{method(t){t&&!t[Symbol.iterator]&&"object"==typeof t&&(t=Object.entries(t)),e(t&&t[Symbol.iterator],"Iterable must be an iterable or object");const r=this.clone(),s=[];for(const n of t){e(n&&n[Symbol.iterator],"Entry must be an iterable");const[t,i]=n;e("object"!=typeof t&&"function"!=typeof t&&"symbol"!=typeof t,"Key must not be of type object, function, or Symbol"),e("symbol"==typeof i,"Value must be a Symbol"),r.$_terms.map.set(t,i),s.push(i)}return r.valid(...s)}}},manifest:{build:(e,t)=>(t.map&&(e=e.map(t.map)),e)},messages:{"symbol.base":"{{#label}} must be a symbol","symbol.map":"{{#label}} must be one of {{#map}}"}}),symbol}function requireBinary(){if(hasRequiredBinary)return binary;hasRequiredBinary=1;const e=assert,t=requireAny(),r=requireCommon();return binary=t.extend({type:"binary",coerce:{from:["string","object"],method(e,{schema:t}){if("string"==typeof e||null!==e&&"Buffer"===e.type)try{return{value:Buffer.from(e,t._flags.encoding)}}catch(e){}}},validate(e,{error:t}){if(!Buffer.isBuffer(e))return{value:e,errors:t("binary.base")}},rules:{encoding:{method(t){return e(Buffer.isEncoding(t),"Invalid encoding:",t),this.$_setFlag("encoding",t)}},length:{method(e){return this.$_addRule({name:"length",method:"length",args:{limit:e},operator:"="})},validate:(e,t,{limit:s},{name:n,operator:i,args:a})=>r.compare(e.length,s,i)?e:t.error("binary."+n,{limit:a.limit,value:e}),args:[{name:"limit",ref:!0,assert:r.limit,message:"must be a positive integer"}]},max:{method(e){return this.$_addRule({name:"max",method:"length",args:{limit:e},operator:"<="})}},min:{method(e){return this.$_addRule({name:"min",method:"length",args:{limit:e},operator:">="})}}},cast:{string:{from:e=>Buffer.isBuffer(e),to:(e,t)=>e.toString()}},messages:{"binary.base":"{{#label}} must be a buffer or a string","binary.length":"{{#label}} must be {{#limit}} bytes","binary.max":"{{#label}} must be less than or equal to {{#limit}} bytes","binary.min":"{{#label}} must be at least {{#limit}} bytes"}}),binary}function requireLib(){if(hasRequiredLib)return lib$1;hasRequiredLib=1;const e=assert,t=clone,r=requireCache(),s=requireCommon(),n=requireCompile(),i=requireErrors(),a=requireExtend(),o=requireManifest(),l=requireRef(),c=requireTemplate(),d=requireTrace();let u;const p={types:{alternatives:requireAlternatives(),any:requireAny(),array:requireArray(),boolean:requireBoolean(),date:requireDate(),function:require_function(),link:requireLink(),number:requireNumber(),object:requireObject(),string:requireString(),symbol:requireSymbol()},aliases:{alt:"alternatives",bool:"boolean",func:"function"}};return Buffer&&(p.types.binary=requireBinary()),p.root=function(){const t={_types:new Set(Object.keys(p.types))};for(const r of t._types)t[r]=function(...t){return e(!t.length||["alternatives","link","object"].includes(r),"The",r,"type does not allow arguments"),p.generate(this,p.types[r],t)};for(const e of["allow","custom","disallow","equal","exist","forbidden","invalid","not","only","optional","options","prefs","preferences","required","strip","valid","when"])t[e]=function(...t){return this.any()[e](...t)};Object.assign(t,p.methods);for(const e in p.aliases){const r=p.aliases[e];t[e]=t[r]}return t.x=t.expression,d.setup&&d.setup(t),t},p.methods={ValidationError:i.ValidationError,version:s.version,cache:r.provider,assert(e,t,...r){p.assert(e,t,!0,r)},attempt:(e,t,...r)=>p.assert(e,t,!1,r),build(t){return e("function"==typeof o.build,"Manifest functionality disabled"),o.build(this,t)},checkPreferences(e){s.checkPreferences(e)},compile(e,t){return n.compile(this,e,t)},defaults(t){e("function"==typeof t,"modifier must be a function");const r=Object.assign({},this);for(const n of r._types){const i=t(r[n]());e(s.isSchema(i),"modifier must return a valid schema object"),r[n]=function(...e){return p.generate(this,i,e)}}return r},expression:(...e)=>new c(...e),extend(...t){s.verifyFlat(t,"extend"),u=u||requireSchemas(),e(t.length,"You need to provide at least one extension"),this.assert(t,u.extensions);const r=Object.assign({},this);r._types=new Set(r._types);for(let s of t){"function"==typeof s&&(s=s(r)),this.assert(s,u.extension);const t=p.expandExtension(s,r);for(const s of t){e(void 0===r[s.type]||r._types.has(s.type),"Cannot override name",s.type);const t=s.base||this.any(),n=a.type(t,s);r._types.add(s.type),r[s.type]=function(...e){return p.generate(this,n,e)}}}return r},isError:i.ValidationError.isError,isExpression:c.isTemplate,isRef:l.isRef,isSchema:s.isSchema,in:(...e)=>l.in(...e),override:s.symbols.override,ref:(...e)=>l.create(...e),types(){const e={};for(const t of this._types)e[t]=this[t]();for(const t in p.aliases)e[t]=this[t]();return e}},p.assert=function(e,r,n,a){const o=a[0]instanceof Error||"string"==typeof a[0]?a[0]:null,l=null!==o?a[1]:a[0],c=r.validate(e,s.preferences({errors:{stack:!0}},l||{}));let d=c.error;if(!d)return c.value;if(o instanceof Error)throw o;const u=n&&"function"==typeof d.annotate?d.annotate():d.message;throw d instanceof i.ValidationError==!1&&(d=t(d)),d.message=o?`${o} ${u}`:u,d},p.generate=function(t,r,s){return e(t,"Must be invoked on a Joi instance."),r.$_root=t,r._definition.args&&s.length?r._definition.args(r,...s):r},p.expandExtension=function(e,t){if("string"==typeof e.type)return[e];const r=[];for(const s of t._types)if(e.type.test(s)){const n=Object.assign({},e);n.type=s,n.base=t[s](),r.push(n)}return r},lib$1=p.root()}var libExports=requireLib(),BaseJoi=getDefaultExportFromCjs(libExports),t={table:"directus_collections",defaults:{collection:null,hidden:!1,singleton:!1,icon:null,note:null,translations:null,display_template:null,accountability:"all"},data:[{collection:"directus_access",icon:"admin_panel_settings",note:"$t:directus_collection.directus_access",display_template:"{{ policy.name }}",sort_field:"sort"},{collection:"directus_activity",note:"$t:directus_collection.directus_activity",accountability:null},{collection:"directus_collections",icon:"database",note:"$t:directus_collection.directus_collections"},{collection:"directus_comments",note:"$t:directus_collection.directus_comments"},{collection:"directus_fields",icon:"input",note:"$t:directus_collection.directus_fields"},{collection:"directus_files",icon:"folder",note:"$t:directus_collection.directus_files",display_template:"{{ $thumbnail }} {{ title }}"},{collection:"directus_folders",note:"$t:directus_collection.directus_folders",display_template:"{{ name }}"},{collection:"directus_migrations",note:"$t:directus_collection.directus_migrations"},{collection:"directus_permissions",icon:"admin_panel_settings",note:"$t:directus_collection.directus_permissions"},{collection:"directus_policies",icon:"admin_panel_settings",note:"$t:directus_collection.directus_policies"},{collection:"directus_presets",icon:"bookmark",note:"$t:directus_collection.directus_presets",accountability:null},{collection:"directus_relations",icon:"merge_type",note:"$t:directus_collection.directus_relations"},{collection:"directus_revisions",note:"$t:directus_collection.directus_revisions",accountability:null},{collection:"directus_roles",icon:"supervised_user_circle",note:"$t:directus_collection.directus_roles"},{collection:"directus_sessions",note:"$t:directus_collection.directus_sessions"},{collection:"directus_settings",singleton:!0,note:"$t:directus_collection.directus_settings"},{collection:"directus_users",archive_field:"status",archive_value:"archived",unarchive_value:"draft",icon:"people_alt",note:"$t:directus_collection.directus_users",display_template:"{{ first_name }} {{ last_name }}"},{collection:"directus_webhooks",note:"$t:directus_collection.directus_webhooks"},{collection:"directus_dashboards",note:"$t:directus_collection.directus_dashboards"},{collection:"directus_panels",note:"$t:directus_collection.directus_panels"},{collection:"directus_notifications",note:"$t:directus_collection.directus_notifications"},{collection:"directus_shares",icon:"share",note:"$t:directus_collection.directus_shares"},{collection:"directus_flows",note:"$t:directus_collection.directus_flows"},{collection:"directus_operations",note:"$t:directus_collection.directus_operations"},{collection:"directus_translations",note:"$t:directus_collection.directus_translations"},{collection:"directus_versions",note:"$t:directus_collection.directus_versions"},{collection:"directus_extensions",note:"$t:directus_collection.directus_extensions"}]};t.data.map((e=>({...t.defaults,...e,system:!0}))),t.data.map((e=>e.collection));var l={table:"directus_relations",defaults:{many_collection:"directus_users",many_field:null,one_collection:null,one_field:null,one_allowed_collections:null,one_collection_field:null,one_deselect_action:"nullify",junction_field:null,sort_field:null},data:[{many_collection:"directus_collections",many_field:"group",one_collection:"directus_collections"},{many_collection:"directus_comments",many_field:"collection",one_collection:"directus_collections"},{many_collection:"directus_comments",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_comments",many_field:"user_updated",one_collection:"directus_users"},{many_collection:"directus_users",many_field:"role",one_collection:"directus_roles",one_field:"users"},{many_collection:"directus_users",many_field:"avatar",one_collection:"directus_files"},{many_collection:"directus_revisions",many_field:"activity",one_collection:"directus_activity",one_field:"revisions"},{many_collection:"directus_revisions",many_field:"parent",one_collection:"directus_revisions"},{many_collection:"directus_revisions",many_field:"version",one_collection:"directus_versions"},{many_collection:"directus_presets",many_field:"user",one_collection:"directus_users"},{many_collection:"directus_presets",many_field:"role",one_collection:"directus_roles"},{many_collection:"directus_folders",many_field:"parent",one_collection:"directus_folders"},{many_collection:"directus_files",many_field:"folder",one_collection:"directus_folders"},{many_collection:"directus_files",many_field:"uploaded_by",one_collection:"directus_users"},{many_collection:"directus_files",many_field:"modified_by",one_collection:"directus_users"},{many_collection:"directus_fields",many_field:"collection",one_collection:"directus_collections",one_field:"fields"},{many_collection:"directus_fields",many_field:"group",one_collection:"directus_fields"},{many_collection:"directus_activity",many_field:"user",one_collection:"directus_users"},{many_collection:"directus_settings",many_field:"project_logo",one_collection:"directus_files"},{many_collection:"directus_settings",many_field:"public_foreground",one_collection:"directus_files"},{many_collection:"directus_settings",many_field:"public_background",one_collection:"directus_files"},{many_collection:"directus_settings",many_field:"public_favicon",one_collection:"directus_files"},{many_collection:"directus_settings",many_field:"storage_default_folder",one_collection:"directus_folders"},{many_collection:"directus_settings",many_field:"public_registration_role",one_collection:"directus_roles"},{many_collection:"directus_panels",many_field:"dashboard",one_collection:"directus_dashboards",one_field:"panels"},{many_collection:"directus_panels",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_flows",many_field:"operation",one_collection:"directus_operations"},{many_collection:"directus_flows",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_operations",many_field:"flow",one_collection:"directus_flows",one_field:"operations",one_deselect_action:"delete"},{many_collection:"directus_operations",many_field:"resolve",one_collection:"directus_operations"},{many_collection:"directus_operations",many_field:"reject",one_collection:"directus_operations"},{many_collection:"directus_operations",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_sessions",many_field:"user",one_collection:"directus_users"},{many_collection:"directus_sessions",many_field:"share",one_collection:"directus_shares"},{many_collection:"directus_dashboards",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_notifications",many_field:"recipient",one_collection:"directus_users"},{many_collection:"directus_notifications",many_field:"sender",one_collection:"directus_users"},{many_collection:"directus_shares",many_field:"role",one_collection:"directus_roles"},{many_collection:"directus_shares",many_field:"collection",one_collection:"directus_collections"},{many_collection:"directus_shares",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_versions",many_field:"collection",one_collection:"directus_collections"},{many_collection:"directus_versions",many_field:"user_created",one_collection:"directus_users"},{many_collection:"directus_versions",many_field:"user_updated",one_collection:"directus_users"},{many_collection:"directus_permissions",many_field:"policy",one_collection:"directus_policies",one_field:"permissions",one_deselect_action:"delete"},{many_collection:"directus_access",many_field:"policy",one_collection:"directus_policies",one_field:"roles",one_deselect_action:"delete",junction_field:"role"},{many_collection:"directus_access",many_field:"policy",one_collection:"directus_policies",one_field:"users",one_deselect_action:"delete",junction_field:"user"},{many_collection:"directus_access",many_field:"role",one_collection:"directus_roles",one_field:"policies",one_deselect_action:"delete",junction_field:"policy",sort_field:"sort"},{many_collection:"directus_access",many_field:"user",one_collection:"directus_users",one_field:"policies",one_deselect_action:"delete",junction_field:"policy",sort_field:"sort"},{many_collection:"directus_roles",many_field:"parent",one_collection:"directus_roles",one_field:"children"},{many_collection:"directus_webhooks",many_field:"migrated_flow",one_collection:"directus_flows"}]};l.data.map((e=>({...l.defaults,...e,system:!0})));var o={collection:null,field:null,special:null,interface:null,options:null,display:null,display_options:null,readonly:!1,hidden:!1,sort:null,width:"full",group:null,translations:null,note:null,conditions:null,required:!1},s={table:"directus_access",fields:[{field:"id",special:["uuid"],hidden:!0,width:"half"},{field:"role",hidden:!0,width:"half",special:["m2o"]},{field:"user",hidden:!0,width:"half",special:["m2o"]},{field:"policy",hidden:!0,width:"half",special:["m2o"]},{field:"sort",hidden:!0,width:"half"}]},a={table:"directus_activity",fields:[{field:"id",width:"half"},{field:"item",width:"half"},{field:"action",display:"labels",display_options:{choices:[{text:"$t:field_options.directus_activity.create",value:"create",foreground:"var(--theme--primary)",background:"var(--theme--primary-subdued)"},{text:"$t:field_options.directus_activity.update",value:"update",foreground:"var(--blue)",background:"var(--blue-25)"},{text:"$t:field_options.directus_activity.delete",value:"delete",foreground:"var(--theme--danger)",background:"var(--danger-25)"},{text:"$t:field_options.directus_activity.login",value:"login",foreground:"var(--purple)",background:"var(--purple-25)"}]},width:"half"},{field:"collection",display:"collection",display_options:{icon:!0},width:"half"},{field:"timestamp",display:"datetime",special:["date-created","cast-timestamp"],options:{relative:!0},width:"half"},{field:"user",display:"user",width:"half"},{field:"user_agent",display:"formatted-value",display_options:{font:"monospace"},width:"half"},{field:"origin",display:"formatted-value",display_options:{font:"monospace"},width:"half"},{field:"ip",display:"formatted-value",display_options:{font:"monospace"},width:"half"},{field:"revisions",interface:"list-o2m",special:["o2m"],options:{fields:["collection","item"]},width:"half"}]},d={table:"directus_collections",fields:[{field:"collection_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"box",title:"$t:field_options.directus_collections.collection_setup"},width:"full"},{field:"collection",interface:"input",options:{font:"monospace"},readonly:!0,width:"half"},{field:"note",interface:"input",options:{placeholder:"$t:field_options.directus_collections.note_placeholder"},width:"half"},{field:"icon",interface:"select-icon",options:null,width:"half"},{field:"color",interface:"select-color",options:{placeholder:"$t:interfaces.select-color.placeholder"},width:"half"},{field:"display_template",interface:"system-display-template",options:{collectionField:"collection"},width:"full"},{field:"hidden",special:["cast-boolean"],interface:"boolean",options:{label:"$t:field_options.directus_collections.hidden_label"},width:"half"},{field:"singleton",special:["cast-boolean"],interface:"boolean",options:{label:"$t:singleton_label"},width:"half"},{field:"translations",special:["cast-json"],interface:"list",options:{template:"{{ translation }} ({{ language }})",fields:[{field:"language",name:"$t:language",type:"string",schema:{default_value:"en-US"},meta:{interface:"system-language",width:"half",required:!0}},{field:"translation",name:"$t:field_options.directus_collections.collection_name",type:"string",meta:{interface:"input",width:"half",required:!0,options:{placeholder:"$t:field_options.directus_collections.translation_placeholder"}}},{field:"singular",name:"$t:field_options.directus_collections.singular_unit",type:"string",meta:{interface:"input",width:"half",options:{placeholder:"$t:field_options.directus_collections.translation_placeholder"}}},{field:"plural",name:"$t:field_options.directus_collections.plural_unit",type:"string",meta:{interface:"input",width:"half",options:{placeholder:"$t:field_options.directus_collections.translation_placeholder"}}}]},width:"full"},{field:"preview_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"preview",title:"$t:field_options.directus_collections.preview_divider"},width:"full"},{field:"preview_url",interface:"system-display-template",options:{collectionField:"collection",injectVersionField:!0},width:"full"},{field:"content_versioning_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"published_with_changes",title:"$t:field_options.directus_collections.content_versioning_divider"},width:"full"},{field:"versioning",interface:"boolean",special:["cast-boolean"],options:{label:"$t:field_options.directus_collections.enable_versioning"},width:"half"},{field:"archive_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"archive",title:"$t:field_options.directus_collections.archive_divider"},width:"full"},{field:"archive_field",interface:"system-field",options:{collectionField:"collection",allowNone:!0,placeholder:"$t:field_options.directus_collections.archive_field_placeholder"},width:"half"},{field:"archive_app_filter",interface:"boolean",special:["cast-boolean"],options:{label:"$t:field_options.directus_collections.archive_app_filter"},width:"half"},{field:"archive_value",interface:"input",options:{font:"monospace",iconRight:"archive",placeholder:"$t:field_options.directus_collections.archive_value"},width:"half"},{field:"unarchive_value",interface:"input",options:{font:"monospace",iconRight:"unarchive",placeholder:"$t:field_options.directus_collections.unarchive_value"},width:"half"},{field:"sort_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"sort",title:"$t:field_options.directus_collections.sort_divider"},width:"full"},{field:"sort_field",interface:"system-field",options:{collectionField:"collection",placeholder:"$t:field_options.directus_collections.sort_field",typeAllowList:["float","decimal","integer"],allowNone:!0,allowPrimaryKey:!1,allowForeignKeys:!1},width:"half"},{field:"accountability_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"admin_panel_settings",title:"$t:field_options.directus_collections.accountability_divider"},width:"full"},{field:"accountability",interface:"select-dropdown",options:{choices:[{text:"$t:field_options.directus_collections.track_activity_revisions",value:"all"},{text:"$t:field_options.directus_collections.only_track_activity",value:"activity"},{text:"$t:field_options.directus_collections.do_not_track_anything",value:null}]},width:"half"},{field:"duplication_divider",special:["alias","no-data"],interface:"presentation-divider",options:{icon:"content_copy",title:"$t:field_options.directus_collections.duplication_divider"}},{field:"item_duplication_fields",special:["cast-json"],interface:"system-field-tree",options:{collectionField:"collection"}},{field:"sort",hidden:!0},{field:"group",hidden:!0},{field:"collapse",hidden:!0}]},n={table:"directus_comments",fields:[{field:"id",special:["uuid"],readonly:!0,hidden:!0},{field:"collection"},{field:"item"},{field:"comment"},{field:"date_created",special:["date-created","cast-timestamp"]},{field:"date_updated",special:["date-updated","cast-timestamp"]},{field:"user_created",special:["user-created"]},{field:"user_updated",special:["user-updated"]}]},c={table:"directus_dashboards",fields:[{field:"id",special:["uuid"]},{field:"name"},{field:"icon"},{field:"panels",special:["o2m"]},{field:"date_created",special:["date-created","cast-timestamp"]},{field:"user_created",special:["user-created"]},{field:"note"},{field:"color"}]},r$1={table:"directus_extensions",fields:[{collection:"directus_extensions",field:"id",special:["uuid"]},{collection:"directus_extensions",field:"folder"},{collection:"directus_extensions",field:"source"},{collection:"directus_extensions",field:"bundle"},{collection:"directus_extensions",field:"enabled",special:["cast-boolean"]}]},f={table:"directus_fields",fields:[{collection:"directus_fields",field:"id",width:"half"},{collection:"directus_fields",field:"collection",width:"half"},{collection:"directus_fields",field:"field",width:"half"},{collection:"directus_fields",field:"special",hidden:!0,special:["cast-csv"],width:"half"},{collection:"directus_fields",field:"interface",width:"half"},{collection:"directus_fields",field:"options",hidden:!0,special:["cast-json"],width:"half"},{collection:"directus_fields",field:"display",width:"half"},{collection:"directus_fields",field:"display_options",hidden:!0,special:["cast-json"],width:"half"},{collection:"directus_fields",field:"readonly",hidden:!0,special:["cast-boolean"],width:"half"},{collection:"directus_fields",field:"hidden",hidden:!0,special:["cast-boolean"],width:"half"},{collection:"directus_fields",field:"required",hidden:!0,special:["cast-boolean"],width:"half"},{collection:"directus_fields",field:"sort",width:"half"},{collection:"directus_fields",field:"width",width:"half"},{collection:"directus_fields",field:"group",width:"half"},{collection:"directus_fields",field:"translations",hidden:!0,special:["cast-json"],width:"half"},{collection:"directus_fields",field:"note",width:"half"},{collection:"directus_fields",field:"conditions",hidden:!0,special:["cast-json"]},{collection:"directus_fields",field:"validation",hidden:!0,special:["cast-json"]},{collection:"directus_fields",field:"validation_message",hidden:!0}]},u={table:"directus_files",fields:[{field:"id",hidden:!0,interface:"input",special:["uuid"]},{field:"title",interface:"input",options:{iconRight:"title",placeholder:"$t:field_options.directus_files.title"},width:"full"},{field:"description",interface:"input-multiline",width:"full",options:{placeholder:"$t:field_options.directus_files.description"}},{field:"tags",interface:"tags",options:{iconRight:"local_offer"},special:["cast-json"],width:"full",display:"labels",display_options:{choices:null,format:!1}},{field:"location",interface:"input",options:{iconRight:"place",placeholder:"$t:field_options.directus_files.location"},width:"half"},{field:"storage",interface:"input",options:{iconRight:"storage"},width:"half",readonly:!0},{field:"focal_point_divider",interface:"presentation-divider",options:{icon:"image_search",title:"$t:field_options.directus_files.focal_point_divider"},special:["alias","no-data"],width:"full"},{field:"focal_point_x",width:"half"},{field:"focal_point_y",width:"half"},{field:"storage_divider",interface:"presentation-divider",options:{icon:"insert_drive_file",title:"$t:field_options.directus_files.storage_divider"},special:["alias","no-data"],width:"full"},{field:"filename_disk",interface:"input",options:{iconRight:"publish",placeholder:"$t:field_options.directus_files.filename_disk"},readonly:!0,width:"half"},{field:"filename_download",interface:"input",options:{iconRight:"get_app",placeholder:"$t:field_options.directus_files.filename_download"},width:"half"},{field:"metadata",hidden:!0,special:["cast-json"]},{field:"type",display:"mime-type",readonly:!0},{field:"filesize",display:"filesize",readonly:!0},{field:"created_on",interface:"datetime",display:"datetime",width:"half",special:["date-created"],readonly:!0},{field:"modified_by",interface:"select-dropdown-m2o",special:["user-updated"],width:"half",display:"user",readonly:!0,options:{template:"{{avatar.$thumbnail}} {{first_name}} {{last_name}}"}},{field:"modified_on",interface:"datetime",special:["date-updated"],width:"half",display:"datetime",readonly:!0},{field:"embed",width:"half",hidden:!0},{field:"uploaded_by",display:"user",width:"half",hidden:!0,special:["user-created"]},{field:"uploaded_on",display:"datetime",width:"half",hidden:!0},{field:"folder",width:"half",readonly:!0,special:["m2o"],display:"related-values",display_options:{template:"{{ name }}"}},{field:"width",width:"half",readonly:!0},{field:"height",width:"half",readonly:!0},{field:"charset",width:"half",readonly:!0},{field:"duration",width:"half",readonly:!0},{field:"tus_id",width:"half",hidden:!0},{field:"tus_data",width:"half",hidden:!0,special:["cast-json"]}]},p={table:"directus_flows",fields:[{field:"id",special:["uuid"]},{field:"name"},{field:"icon"},{field:"color"},{field:"description"},{field:"status"},{field:"trigger"},{field:"accountability"},{field:"options",special:["cast-json"]},{field:"operation"},{field:"operations",special:["o2m"]},{field:"date_created",special:["date-created"]},{field:"user_created",special:["user-created"]}]},_={table:"directus_folders",fields:[{field:"id",interface:"input",special:["uuid"],width:"half"},{field:"parent",width:"half"},{field:"name",width:"full"}]},h={table:"directus_migrations",fields:[{collection:"directus_migrations",field:"version"},{collection:"directus_migrations",field:"name"},{collection:"directus_migrations",field:"timestamp"}]},m={table:"directus_notifications",fields:[{field:"id"},{field:"timestamp",special:["date-created","cast-timestamp"]},{field:"status"},{field:"recipient"},{field:"sender"},{field:"subject"},{field:"message"},{field:"collection"},{field:"item"}]},y={table:"directus_operations",fields:[{field:"id",special:["uuid"]},{field:"name"},{field:"key"},{field:"type"},{field:"position_x"},{field:"position_y"},{field:"options",special:["cast-json"]},{field:"resolve"},{field:"reject"},{field:"flow"},{field:"date_created",special:["date-created"]},{field:"user_created",special:["user-created"]}]},g$1={table:"directus_panels",fields:[{field:"id",special:["uuid"]},{field:"name"},{field:"icon"},{field:"color"},{field:"note"},{field:"type"},{field:"show_header",special:["cast-boolean"]},{field:"position_x"},{field:"position_y"},{field:"width"},{field:"height"},{field:"options",special:["cast-json"]},{field:"date_created",special:["date-created","cast-timestamp"]},{field:"user_created",special:["user-created"]},{field:"dashboard"}]},w={table:"directus_permissions",fields:[{field:"permissions",hidden:!0,special:["cast-json"],width:"half"},{field:"presets",hidden:!0,special:["cast-json"],width:"half"},{field:"policy",hidden:!0,interface:"select-dropdown-m2o",width:"half",special:["m2o"]},{field:"collection",width:"half"},{field:"id",width:"half"},{field:"fields",width:"half",special:["cast-csv"]},{field:"action",width:"half"},{field:"validation",width:"half",special:["cast-json"]}]},v={table:"directus_policies",fields:[{field:"id",hidden:!0,special:["uuid"]},{field:"name",required:!0,width:"half",display:"formatted-value",display_options:{translate:!0}},{field:"icon",interface:"select-icon",display:"icon",width:"half"},{field:"description",interface:"input",options:{placeholder:"$t:field_options.directus_policies.description"},width:"full",display:"formatted-value",display_options:{translate:!0}},{field:"permissions",interface:"system-permissions",special:["o2m"]},{field:"app_access",interface:"boolean",special:["cast-boolean"],width:"half"},{field:"admin_access",interface:"boolean",special:["cast-boolean"],width:"half"},{field:"ip_access",interface:"tags",options:{placeholder:"$t:field_options.directus_policies.ip_access"},special:["cast-csv"],width:"full"},{field:"enforce_tfa",note:"$t:field_options.directus_policies.enforce_tfa",interface:"boolean",special:["cast-boolean"],width:"half"},{field:"assigned_to_divider",interface:"presentation-divider",options:{title:"$t:field_options.directus_policies.assigned_to"},special:["alias","no-data"],width:"full"},{field:"users",interface:"list-m2m",options:{template:"{{ user.first_name }} {{ user.last_name }}",junctionFilter:{user:{_nnull:!0}}},special:["m2m"]},{field:"roles",interface:"list-m2m",options:{template:"{{ role.name }}",junctionFilter:{role:{_nnull:!0}}},special:["m2m"]}]},b$1={table:"directus_presets",fields:[{field:"filter",hidden:!0,special:["cast-json"]},{field:"layout_query",hidden:!0,special:["cast-json"]},{field:"layout_options",hidden:!0,special:["cast-json"]},{field:"role",width:"half",special:["m2o"],display:"related-values",display_options:{template:"{{ name }}"}},{field:"user",width:"half",special:["m2o"],display:"related-values",display_options:{template:"{{ email }}"}},{field:"id",width:"half"},{field:"bookmark",width:"half"},{field:"icon",width:"half",display:"icon"},{field:"color",width:"half",display:"color"},{field:"search",width:"half"},{field:"collection",width:"half"},{field:"layout",width:"half"},{field:"refresh_interval"}]},$$1={table:"directus_relations",fields:[{field:"id",width:"half"},{field:"many_collection",width:"half"},{field:"many_field",width:"half"},{field:"one_collection",width:"half"},{field:"one_field",width:"half"},{field:"one_collection_field",width:"half"},{field:"one_allowed_collections",special:["cast-csv"],width:"half"},{field:"junction_field",width:"half"},{field:"sort_field",width:"half"},{field:"one_deselect_action",width:"half"}]},k$1={table:"directus_revisions",fields:[{field:"id",width:"half"},{field:"activity",width:"half"},{field:"collection",width:"half"},{field:"item",width:"half"},{field:"data",hidden:!0,special:["cast-json"]},{field:"delta",hidden:!0,special:["cast-json"]},{field:"parent",width:"half"},{field:"version",width:"half"}]},x$1={table:"directus_roles",fields:[{field:"id",hidden:!0,interface:"input",special:["uuid"]},{field:"name",required:!0,interface:"input",options:{placeholder:"$t:field_options.directus_roles.name"},width:"half",display:"formatted-value",display_options:{translate:!0}},{field:"icon",interface:"select-icon",display:"icon",width:"half"},{field:"description",interface:"input",options:{placeholder:"$t:field_options.directus_roles.description"},width:"full",display:"formatted-value",display_options:{translate:!0}},{field:"parent",interface:"select-dropdown-m2o",note:"$t:field_options.directus_roles.parent_note",options:{template:"{{ name }}",filter:{id:{_neq:"{{ id }}"}}},special:["m2o"],width:"half",display:"related-values",display_options:{template:"{{ name }}"}},{field:"children",hidden:!0,interface:"list-o2m-tree-view",note:"$t:field_options.directus_roles.children_note",special:["o2m"],options:{displayTemplate:"{{ name }}",enableCreate:!1,fields:["name"],filter:{id:{_neq:"{{ id }}"}}},display:"related-values",display_options:{template:"{{ name }}"},width:"full"},{field:"policies",interface:"list-m2m",options:{layout:"list"},display:"related-values",special:["m2m"],width:"full"},{field:"users_group",interface:"group-raw",special:["alias","no-data","group"]},{field:"users_divider",interface:"presentation-divider",options:{icon:"people_alt",title:"$t:users"},special:["alias","no-data"],width:"full",group:"users_group"},{field:"users",interface:"list-o2m",special:["o2m"],options:{fields:["first_name","last_name"]},width:"full",group:"users_group"}]},R={table:"directus_sessions",fields:[{field:"token",width:"half"},{field:"user",width:"half"},{field:"expires",width:"half"},{field:"ip",width:"half"},{field:"user_agent",width:"half"},{field:"origin",width:"half"},{field:"share",width:"half"},{field:"next_token",width:"half"}]},j$1={table:"directus_settings",fields:[{field:"id",hidden:!0},{field:"project_name",interface:"input",options:{iconRight:"title",placeholder:"$t:field_options.directus_settings.project_name_placeholder"},width:"half"},{field:"project_descriptor",interface:"input",options:{iconRight:"title",placeholder:"$t:field_options.directus_settings.project_name_placeholder"},width:"half"},{field:"project_url",interface:"input",options:{iconRight:"link",placeholder:"https://example.com"},width:"half"},{field:"default_language",interface:"system-language",options:{iconRight:"language",placeholder:"en-US"},width:"half"},{field:"theming_group",interface:"group-raw",special:["alias","no-data","group"]},{field:"branding_divider",interface:"presentation-divider",options:{icon:"palette",title:"$t:fields.directus_settings.branding"},special:["alias","no-data"],width:"full",group:"theming_group"},{field:"project_color",interface:"select-color",note:"$t:field_options.directus_settings.project_color_note",width:"half",group:"theming_group"},{field:"project_logo",interface:"file",note:"$t:field_options.directus_settings.project_logo_note",width:"half",group:"theming_group"},{field:"public_foreground",interface:"file",width:"half",group:"theming_group"},{field:"public_background",interface:"file",width:"half",group:"theming_group"},{field:"public_favicon",interface:"file",note:"$t:field_options.directus_settings.project_favicon_note",width:"half",group:"theming_group"},{field:"public_note",interface:"input",options:{placeholder:"$t:field_options.directus_settings.public_note_placeholder",iconRight:"info"},width:"half",group:"theming_group"},{field:"theming_divider",interface:"presentation-divider",options:{icon:"palette",title:"$t:fields.directus_settings.theming"},special:["alias","no-data"],width:"full",group:"theming_group"},{field:"default_appearance",interface:"select-dropdown",width:"half",options:{choices:[{value:"auto",text:"$t:appearance_auto"},{value:"light",text:"$t:appearance_light"},{value:"dark",text:"$t:appearance_dark"}]},group:"theming_group"},{field:"default_theme_light",width:"full",interface:"system-theme",options:{appearance:"light"},group:"theming_group"},{field:"theme_light_overrides",width:"full",interface:"system-theme-overrides",options:{appearance:"light"},group:"theming_group",special:["cast-json"]},{field:"default_theme_dark",width:"full",interface:"system-theme",options:{appearance:"dark"},group:"theming_group"},{field:"theme_dark_overrides",width:"full",interface:"system-theme-overrides",options:{appearance:"dark"},group:"theming_group",special:["cast-json"]},{field:"custom_css",interface:"input-code",options:{language:"css",lineNumber:!0,template:"#app, #main-content, body {\n  --v-button-background-color: #6644FF !important;\n  --v-button-background-color-hover: #5E41EC !important;\n}\n"},width:"full",group:"theming_group"},{field:"modules_divider",interface:"presentation-divider",options:{icon:"menu_open",title:"$t:modules"},special:["alias","no-data"],width:"full"},{field:"module_bar",interface:"system-modules",special:["cast-json"]},{field:"security_divider",interface:"presentation-divider",options:{icon:"shield",title:"$t:security"},special:["alias","no-data"],width:"full"},{field:"auth_password_policy",interface:"select-dropdown",options:{choices:[{value:null,text:"$t:field_options.directus_settings.auth_password_policy.none_text"},{value:"/^.{8,}$/",text:"$t:field_options.directus_settings.auth_password_policy.weak_text"},{value:"/(?=^.{8,}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+}{';'?>.<,])(?!.*\\s).*$/",text:"$t:field_options.directus_settings.auth_password_policy.strong_text"}],allowOther:!0},width:"half"},{field:"auth_login_attempts",interface:"input",options:{iconRight:"lock",placeholder:"$t:unlimited"},width:"half"},{field:"public_registration_divider",interface:"presentation-divider",options:{icon:"person_add",title:"$t:fields.directus_settings.public_registration"},special:["alias","no-data"],width:"full"},{field:"public_registration",interface:"boolean",note:"$t:fields.directus_settings.public_registration_note",width:"half",options:{label:"$t:enabled"},special:["cast-boolean"]},{field:"public_registration_role",interface:"select-dropdown-m2o",note:"$t:fields.directus_settings.public_registration_role_note",options:{template:"{{ name }}"},special:["m2o"],width:"half",display:"related-values",display_options:{template:"{{ name }}"}},{field:"public_registration_verify_email",interface:"boolean",note:"$t:fields.directus_settings.public_registration_verify_email_note",width:"half",options:{label:"$t:enabled"},special:["cast-boolean"]},{field:"public_registration_email_filter",interface:"system-filter",note:"$t:fields.directus_settings.public_registration_email_filter_note",options:{collectionName:"directus_users",collectionField:"email",fieldName:"email"},special:["cast-json"],width:"half"},{field:"files_divider",interface:"presentation-divider",options:{icon:"folder",title:"$t:fields.directus_settings.files_and_thumbnails"},special:["alias","no-data"],width:"full"},{field:"storage_asset_transform",interface:"select-dropdown",options:{choices:[{value:"all",text:"$t:fields.directus_settings.transformations_all"},{value:"none",text:"$t:fields.directus_settings.transformations_none"},{value:"presets",text:"$t:fields.directus_settings.transformations_presets"}]},width:"half"},{field:"storage_default_folder",interface:"system-folder",width:"half",note:"$t:interfaces.system-folder.field_hint"},{field:"storage_asset_presets",interface:"list",options:{fields:[{field:"key",name:"$t:key",type:"string",schema:{is_nullable:!1},meta:{interface:"input",options:{slug:!0,onlyOnCreate:!1},width:"full",required:!0}},{field:"fit",name:"$t:field_options.directus_settings.storage_asset_presets.fit_label",type:"string",schema:{is_nullable:!1},meta:{interface:"select-dropdown",options:{choices:[{value:"contain",text:"$t:field_options.directus_settings.storage_asset_presets.fit.contain_text"},{value:"cover",text:"$t:field_options.directus_settings.storage_asset_presets.fit.cover_text"},{value:"inside",text:"$t:field_options.directus_settings.storage_asset_presets.fit.fit_text"},{value:"outside",text:"$t:field_options.directus_settings.storage_asset_presets.fit.outside_text"}]},width:"half"}},{field:"width",name:"$t:width",type:"integer",schema:{is_nullable:!1},meta:{interface:"input",width:"half"}},{field:"height",name:"$t:height",type:"integer",schema:{is_nullable:!1},meta:{interface:"input",width:"half"}},{field:"quality",type:"integer",name:"$t:quality",schema:{default_value:80,is_nullable:!1},meta:{interface:"slider",options:{max:100,min:0,step:1},width:"half"}},{field:"withoutEnlargement",name:"$t:field_options.directus_settings.storage_asset_presets.upscaling",type:"boolean",schema:{default_value:!1},meta:{interface:"boolean",width:"half",options:{label:"$t:no_upscale"}}},{field:"format",name:"$t:format",type:"string",schema:{is_nullable:!1,default_value:""},meta:{interface:"select-dropdown",options:{allowNone:!0,choices:[{value:"auto",text:"Auto"},{value:"jpeg",text:"JPEG"},{value:"png",text:"PNG"},{value:"webp",text:"WebP"},{value:"tiff",text:"Tiff"},{value:"avif",text:"AVIF"}]},width:"half"}},{field:"transforms",name:"$t:field_options.directus_settings.additional_transforms",type:"json",schema:{is_nullable:!1,default_value:[]},meta:{note:"$t:field_options.directus_settings.transforms_note",interface:"json",options:{template:'[\n  ["blur", 45],\n  ["grayscale"],\n  ["extend", { "right": 500, "background": "rgb(255, 0, 0)" }]\n]\n',placeholder:'[\n  ["blur", 45],\n  ["grayscale"],\n  ["extend", { "right": 500, "background": "rgb(255, 0, 0)" }]\n]\n'},width:"full"}}],template:"{{key}}"},special:["cast-json"],width:"full"},{field:"reporting_divider",interface:"presentation-divider",options:{icon:"feedback",title:"$t:fields.directus_settings.reporting"},special:["alias","no-data"],width:"full"},{field:"report_feature_url",interface:"input",options:{iconRight:"link",placeholder:"https://example.com/feature"},width:"half"},{field:"report_bug_url",interface:"input",options:{iconRight:"link",placeholder:"https://example.com/bug"},width:"half"},{field:"report_error_url",interface:"system-display-template",options:{placeholder:"https://example.com/error",fields:[{name:"Error",field:"error",key:"error",path:"error",children:[{name:"Name",field:"name",key:"error.name",path:"error.name"},{name:"Message",field:"message",key:"error.message",path:"error.message"}]},{name:"Navigator",field:"navigator",key:"navigator",path:"navigator",children:[{name:"Language",field:"language",key:"navigator.language",path:"navigator.language"},{name:"User Agent",field:"userAgent",key:"navigator.userAgent",path:"navigator.userAgent"}]},{name:"Route",field:"route",key:"route",path:"route",children:[{name:"Full Path",field:"fullPath",key:"route.fullPath",path:"route.fullPath"},{name:"Hash",field:"hash",key:"route.hash",path:"route.hash"},{name:"Name",field:"name",key:"route.name",path:"route.name"},{name:"Path",field:"path",key:"route.path",path:"route.path"},{name:"Query",field:"query",key:"route.query",path:"route.query"}]},{name:"User",field:"user",key:"user",path:"user",children:[{name:"ID",field:"id",key:"user.id",path:"user.id"},{name:"First Name",field:"first_name",key:"user.first_name",path:"user.first_name"},{name:"Last Name",field:"last_name",key:"user.last_name",path:"user.last_name"},{name:"Status",field:"status",key:"user.status",path:"user.status"},{name:"Title",field:"title",key:"user.title",path:"user.title"},{name:"Description",field:"description",key:"user.description",path:"user.description"},{name:"Location",field:"location",key:"user.location",path:"user.location"}]},{name:"Role",field:"role",key:"role",path:"role",children:[{name:"ID",field:"id",key:"role.id",path:"role.id"},{name:"Name",field:"name",key:"role.name",path:"role.name"}]}]},width:"full"},{field:"map_divider",interface:"presentation-divider",options:{icon:"map",title:"$t:fields.directus_settings.mapping"},special:["alias","no-data"],width:"full"},{field:"mapbox_key",interface:"input",options:{icon:"key",title:"$t:field_options.directus_settings.mapbox_key",placeholder:"$t:field_options.directus_settings.mapbox_placeholder",iconLeft:"vpn_key",font:"monospace"},width:"full"},{field:"basemaps",interface:"list",special:["cast-json"],options:{template:"{{name}}",fields:[{field:"name",name:"$t:name",schema:{is_nullable:!1},meta:{interface:"text-input",required:!0,options:{placeholder:"$t:field_options.directus_settings.basemaps_name_placeholder"}}},{field:"type",name:"$t:type",meta:{interface:"select-dropdown",options:{choices:[{value:"raster",text:"$t:field_options.directus_settings.basemaps_raster"},{value:"tile",text:"$t:field_options.directus_settings.basemaps_tile"},{value:"style",text:"$t:field_options.directus_settings.basemaps_style"}]}}},{field:"url",name:"$t:url",schema:{is_nullable:!1},meta:{interface:"text-input",options:{placeholder:"http://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png"}}},{field:"tileSize",name:"$t:tile_size",type:"integer",schema:{is_nullable:!0},meta:{interface:"input",options:{placeholder:"512"},conditions:[{name:"typeNeqRaster",rule:{type:{_neq:"raster"}},hidden:!0}]}},{field:"attribution",name:"$t:fields.directus_settings.attribution",type:"string",schema:{is_nullable:!0},meta:{interface:"input",options:{placeholder:"$t:fields.directus_settings.attribution_placeholder"}}}]}},{field:"image_editor",interface:"presentation-divider",options:{icon:"image",title:"$t:fields.directus_settings.image_editor"},special:["alias","no-data"],width:"full"},{field:"custom_aspect_ratios",interface:"list",special:["cast-json"],options:{template:"{{text}}",fields:[{field:"text",name:"$t:text",type:"string",meta:{interface:"text-input",width:"half",required:!0,options:{placeholder:"$t:text"}}},{field:"value",name:"$t:value",type:"float",meta:{interface:"input",width:"half",required:!0,options:{placeholder:"$t:value"}}}]}}]},F={table:"directus_shares",fields:[{field:"id",special:["uuid"],readonly:!0,hidden:!0},{field:"name"},{field:"collection",width:"half",hidden:!0},{field:"item",width:"half",hidden:!0},{field:"role",interface:"select-dropdown-m2o",width:"half",options:{template:"{{name}}"}},{field:"password",special:["hash","conceal"],interface:"input-hash",options:{iconRight:"lock",masked:!0},width:"half",note:"$t:shared_leave_blank_for_passwordless_access"},{field:"date_start",width:"half",note:"$t:shared_leave_blank_for_unlimited"},{field:"date_end",width:"half",note:"$t:shared_leave_blank_for_unlimited"},{field:"max_uses",width:"half",note:"$t:shared_leave_blank_for_unlimited"},{field:"times_used",width:"half",readonly:!0},{field:"date_created",special:["date-created","cast-timestamp"],width:"half",readonly:!0,conditions:[{name:"notCreatedYet",rule:{id:{_null:!0}},hidden:!0}]},{field:"user_created",special:["user-created"],interface:"select-dropdown-m2o",width:"half",display:"user",options:{template:"{{avatar.$thumbnail}} {{first_name}} {{last_name}}"},readonly:!0,conditions:[{name:"notCreatedYet",rule:{id:{_null:!0}},hidden:!0}]}]},E={table:"directus_translations",fields:[{field:"id",hidden:!0,sort:1,special:["uuid"]},{field:"key",width:"half",sort:2,required:!0,interface:"input",options:{font:"monospace",placeholder:"$t:translation_key_placeholder"}},{field:"language",interface:"system-language",width:"half",sort:3,required:!0},{field:"value",interface:"input-multiline",sort:4,required:!0,options:{placeholder:"$t:enter_a_value"}}]},q={table:"directus_users",fields:[{field:"first_name",interface:"input",options:{iconRight:"account_circle"},width:"half"},{field:"last_name",interface:"input",options:{iconRight:"account_circle"},width:"half"},{field:"email",interface:"input",options:{iconRight:"email"},width:"half"},{field:"password",special:["hash","conceal"],interface:"input-hash",options:{iconRight:"lock",masked:!0},width:"half"},{field:"avatar",interface:"file",width:"full",display:"image"},{field:"location",interface:"input",options:{iconRight:"place"},width:"half"},{field:"title",interface:"input",options:{iconRight:"work"},width:"half"},{field:"description",interface:"input-multiline",width:"full"},{field:"tags",interface:"tags",special:["cast-json"],width:"full",options:{iconRight:"local_offer"},display:"labels",display_options:{choices:null,format:!1}},{field:"preferences_divider",interface:"presentation-divider",options:{icon:"face",title:"$t:fields.directus_users.user_preferences"},special:["alias","no-data"],width:"full"},{field:"language",interface:"system-language",width:"half",options:{includeProjectDefault:!0}},{field:"tfa_secret",interface:"system-mfa-setup",special:["conceal"],width:"half"},{field:"email_notifications",interface:"boolean",width:"half",special:["cast-boolean"]},{field:"theming_divider",interface:"presentation-divider",options:{icon:"palette",title:"$t:theme"},special:["alias","no-data"],width:"full"},{field:"appearance",interface:"select-dropdown",options:{choices:[{value:null,text:"$t:default_sync_with_project"},{value:"auto",text:"$t:appearance_auto"},{value:"light",text:"$t:appearance_light"},{value:"dark",text:"$t:appearance_dark"}]},width:"half"},{field:"theme_light",width:"full",interface:"system-theme",options:{appearance:"light",includeNull:!0}},{field:"theme_light_overrides",width:"full",interface:"system-theme-overrides",options:{appearance:"light"},special:["cast-json"]},{field:"theme_dark",width:"full",interface:"system-theme",options:{appearance:"dark",includeNull:!0}},{field:"theme_dark_overrides",width:"full",interface:"system-theme-overrides",options:{appearance:"dark"},special:["cast-json"]},{field:"admin_divider",interface:"presentation-divider",options:{icon:"verified_user",title:"$t:fields.directus_users.admin_options",color:"var(--theme--danger)"},special:["alias","no-data"],width:"full"},{field:"status",interface:"select-dropdown",options:{choices:[{text:"$t:fields.directus_users.status_draft",value:"draft"},{text:"$t:fields.directus_users.status_invited",value:"invited"},{text:"$t:fields.directus_users.status_unverified",value:"unverified"},{text:"$t:fields.directus_users.status_active",value:"active"},{text:"$t:fields.directus_users.status_suspended",value:"suspended"},{text:"$t:fields.directus_users.status_archived",value:"archived"}]},width:"half"},{field:"role",interface:"select-dropdown-m2o",options:{template:"{{ name }}"},special:["m2o"],width:"half",display:"related-values",display_options:{template:"{{ name }}"}},{field:"policies",interface:"list-m2m",options:{layout:"list"},display:"related-values",special:["m2m"],width:"full"},{field:"token",interface:"system-token",special:["conceal"],width:"full"},{field:"id",special:["uuid"],interface:"input",options:{iconRight:"vpn_key"},width:"full"},{field:"last_page",width:"half"},{field:"last_access",width:"half",display:"datetime",readonly:!0,display_options:{relative:!0}},{field:"provider",width:"half",interface:"select-dropdown",options:{choices:[{text:"$t:default_provider",value:"default"}]}},{field:"external_identifier",width:"half",options:{iconRight:"account_circle"},interface:"input"},{field:"auth_data",hidden:!0}]},N={table:"directus_versions",fields:[{field:"id",special:["uuid"],readonly:!0,hidden:!0},{field:"key"},{field:"name"},{field:"collection"},{field:"item"},{field:"hash",readonly:!0,hidden:!0},{field:"date_created",special:["date-created","cast-timestamp"]},{field:"date_updated",special:["date-updated","cast-timestamp"]},{field:"user_created",special:["user-created"]},{field:"user_updated",special:["user-updated"]},{field:"delta",special:["cast-json"]}]},U$1={table:"directus_webhooks",fields:[{field:"id",hidden:!0},{field:"name",interface:"input",options:{iconRight:"title"},width:"full"},{field:"method",interface:"select-dropdown",display:"labels",display_options:{choices:[{value:"POST",foreground:"var(--theme--primary)",background:"var(--theme--primary-subdued)"},{value:"GET",foreground:"var(--theme--secondary)",background:"var(--secondary-25)"}],format:!1},options:{choices:["GET","POST"]},width:"half"},{field:"url",interface:"input",options:{iconRight:"link"},width:"half"},{field:"status",interface:"select-dropdown",display:"labels",display_options:{showAsDot:!0,choices:[{text:"$t:field_options.directus_webhooks.status_options_active",value:"active",foreground:"var(--theme--primary-background)",background:"var(--theme--primary)"},{text:"$t:field_options.directus_webhooks.status_options_inactive",value:"inactive",foreground:"var(--theme--foreground)",background:"var(--background-normal-alt)"}]},options:{choices:[{text:"$t:field_options.directus_webhooks.status_options_active",value:"active"},{text:"$t:field_options.directus_webhooks.status_options_inactive",value:"inactive"}]},width:"half"},{field:"data",interface:"boolean",options:{label:"$t:fields.directus_webhooks.data_label"},special:["cast-boolean"],width:"half",display:"boolean"},{field:"headers",special:["cast-json"],interface:"list",options:{template:"{{ header }}: {{ value }}",addLabel:"$t:field_options.directus_webhooks.headers.add",fields:[{field:"header",name:"$t:field_options.directus_webhooks.headers.header",type:"string",meta:{interface:"input",width:"half"}},{field:"value",name:"$t:field_options.directus_webhooks.headers.value",type:"string",meta:{interface:"input",width:"half"}}]},width:"full"},{field:"triggers_divider",interface:"presentation-divider",options:{icon:"api",title:"$t:fields.directus_webhooks.triggers"},special:["alias","no-data"],width:"full"},{field:"actions",interface:"select-multiple-checkbox",options:{choices:[{text:"$t:create",value:"create"},{text:"$t:update",value:"update"},{text:"$t:delete_label",value:"delete"}]},special:["cast-csv"],width:"full",display:"labels",display_options:{choices:[{text:"$t:create",value:"create",foreground:"var(--theme--primary)",background:"var(--theme--primary-subdued)"},{text:"$t:update",value:"update",foreground:"var(--blue)",background:"var(--blue-25)"},{text:"$t:delete_label",value:"delete",foreground:"var(--theme--danger)",background:"var(--danger-25)"},{text:"$t:login",value:"login",foreground:"var(--purple)",background:"var(--purple-25)"}]}},{field:"collections",interface:"system-collections",special:["cast-csv"],width:"full",display:"labels",display_options:{choices:null,format:!1}},{field:"was_active_before_deprecation",hidden:!0},{field:"migrated_flow",hidden:!0}]},me=[];function e(e){let{fields:t,table:r}=e;t.forEach(((e,t)=>{me.push({system:!0,...o,...e,collection:r,sort:t+1})}))}e(s),e(a),e(d),e(n),e(c),e(r$1),e(f),e(u),e(p),e(_),e(h),e(m),e(y),e(g$1),e(w),e(v),e(b$1),e($$1),e(k$1),e(x$1),e(R),e(j$1),e(F),e(E),e(q),e(N),e(U$1);var C=[{collection:"directus_activity",action:"read",permissions:{user:{_eq:"$CURRENT_USER"}}},{collection:"directus_comments",action:"read",permissions:{user_created:{_eq:"$CURRENT_USER"}}},{collection:"directus_comments",action:"create",validation:{comment:{_nnull:!0}}},{collection:"directus_comments",action:"update",permissions:{user_created:{_eq:"$CURRENT_USER"}},fields:["comment"]},{collection:"directus_comments",action:"delete",permissions:{user_created:{_eq:"$CURRENT_USER"}}},{collection:"directus_presets",action:"read",permissions:{_or:[{user:{_eq:"$CURRENT_USER"}},{_and:[{user:{_null:!0}},{role:{_eq:"$CURRENT_ROLE"}}]},{_and:[{user:{_null:!0}},{role:{_null:!0}}]}]}},{collection:"directus_presets",action:"create",validation:{user:{_eq:"$CURRENT_USER"}}},{collection:"directus_presets",action:"update",permissions:{user:{_eq:"$CURRENT_USER"}},validation:{user:{_eq:"$CURRENT_USER"}}},{collection:"directus_presets",action:"delete",permissions:{user:{_eq:"$CURRENT_USER"}}},{collection:"directus_roles",action:"read",permissions:{id:{_in:"$CURRENT_ROLES"}}},{collection:"directus_settings",action:"read"},{collection:"directus_translations",action:"read"},{collection:"directus_notifications",action:"read",permissions:{recipient:{_eq:"$CURRENT_USER"}}},{collection:"directus_notifications",action:"update",permissions:{recipient:{_eq:"$CURRENT_USER"}},fields:["status"]},{collection:"directus_shares",action:"read",permissions:{user_created:{_eq:"$CURRENT_USER"}}},{collection:"directus_users",action:"read",permissions:{id:{_eq:"$CURRENT_USER"}},fields:["id","first_name","last_name","last_page","email","password","location","title","description","tags","preferences_divider","avatar","language","appearance","theme_light","theme_dark","tfa_secret","status","role"]}],P=[{collection:"directus_collections",action:"read"},{collection:"directus_fields",action:"read"},{collection:"directus_relations",action:"read"},{collection:"directus_translations",action:"read"}],T={policy:null,permissions:{},validation:null,presets:null,fields:["*"],system:!0},we=P.map((e=>({...T,...e}))),util,objectUtil;function toArray(e){return"string"==typeof e?e.split(","):Array.isArray(e)?e:[e]}[...we,...C].map((e=>({...T,...e}))),BaseJoi.extend({type:"string",base:BaseJoi.string(),messages:{"string.contains":"{{#label}} must contain [{{#substring}}]","string.icontains":"{{#label}} must contain case insensitive [{{#substring}}]","string.ncontains":"{{#label}} can't contain [{{#substring}}]"},rules:{contains:{args:[{name:"substring",ref:!0,assert:e=>"string"==typeof e,message:"must be a string"}],method(e){return this.$_addRule({name:"contains",args:{substring:e}})},validate:(e,t,{substring:r})=>!1===e.includes(r)?t.error("string.contains",{substring:r}):e},icontains:{args:[{name:"substring",ref:!0,assert:e=>"string"==typeof e,message:"must be a string"}],method(e){return this.$_addRule({name:"icontains",args:{substring:e}})},validate:(e,t,{substring:r})=>!1===e.toLowerCase().includes(r.toLowerCase())?t.error("string.icontains",{substring:r}):e},ncontains:{args:[{name:"substring",ref:!0,assert:e=>"string"==typeof e,message:"must be a string"}],method(e){return this.$_addRule({name:"ncontains",args:{substring:e}})},validate:(e,t,{substring:r})=>!0===e.includes(r)?t.error("string.ncontains",{substring:r}):e}}}),function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw new Error},e.arrayToEnum=e=>{const t={};for(const r of e)t[r]=r;return t},e.getValidEnumValues=t=>{const r=e.objectKeys(t).filter((e=>"number"!=typeof t[t[e]])),s={};for(const e of r)s[e]=t[e];return e.objectValues(s)},e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]})),e.objectKeys="function"==typeof Object.keys?e=>Object.keys(e):e=>{const t=[];for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.push(r);return t},e.find=(e,t)=>{for(const r of e)if(t(r))return r},e.isInteger="function"==typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e,t=" | "){return e.map((e=>"string"==typeof e?`'${e}'`:e)).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"==typeof t?t.toString():t}(util||(util={})),function(e){e.mergeShapes=(e,t)=>({...e,...t})}(objectUtil||(objectUtil={}));const ZodParsedType=util.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=e=>{switch(typeof e){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return isNaN(e)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":return Array.isArray(e)?ZodParsedType.array:null===e?ZodParsedType.null:e.then&&"function"==typeof e.then&&e.catch&&"function"==typeof e.catch?ZodParsedType.promise:"undefined"!=typeof Map&&e instanceof Map?ZodParsedType.map:"undefined"!=typeof Set&&e instanceof Set?ZodParsedType.set:"undefined"!=typeof Date&&e instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},ZodIssueCode=util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),quotelessJson=e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:");class ZodError extends Error{get errors(){return this.issues}constructor(e){super(),this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};const t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name="ZodError",this.issues=e}format(e){const t=e||function(e){return e.message},r={_errors:[]},s=e=>{for(const n of e.issues)if("invalid_union"===n.code)n.unionErrors.map(s);else if("invalid_return_type"===n.code)s(n.returnTypeError);else if("invalid_arguments"===n.code)s(n.argumentsError);else if(0===n.path.length)r._errors.push(t(n));else{let e=r,s=0;for(;s<n.path.length;){const r=n.path[s];s===n.path.length-1?(e[r]=e[r]||{_errors:[]},e[r]._errors.push(t(n))):e[r]=e[r]||{_errors:[]},e=e[r],s++}}};return s(this),r}static assert(e){if(!(e instanceof ZodError))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,util.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(e=e=>e.message){const t={},r=[];for(const s of this.issues)s.path.length>0?(t[s.path[0]]=t[s.path[0]]||[],t[s.path[0]].push(e(s))):r.push(e(s));return{formErrors:r,fieldErrors:t}}get formErrors(){return this.flatten()}}ZodError.create=e=>new ZodError(e);const errorMap=(e,t)=>{let r;switch(e.code){case ZodIssueCode.invalid_type:r=e.received===ZodParsedType.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case ZodIssueCode.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected,util.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:r=`Unrecognized key(s) in object: ${util.joinValues(e.keys,", ")}`;break;case ZodIssueCode.invalid_union:r="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${util.joinValues(e.options)}`;break;case ZodIssueCode.invalid_enum_value:r=`Invalid enum value. Expected ${util.joinValues(e.options)}, received '${e.received}'`;break;case ZodIssueCode.invalid_arguments:r="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:r="Invalid function return type";break;case ZodIssueCode.invalid_date:r="Invalid date";break;case ZodIssueCode.invalid_string:"object"==typeof e.validation?"includes"in e.validation?(r=`Invalid input: must include "${e.validation.includes}"`,"number"==typeof e.validation.position&&(r=`${r} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?r=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?r=`Invalid input: must end with "${e.validation.endsWith}"`:util.assertNever(e.validation):r="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case ZodIssueCode.too_small:r="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case ZodIssueCode.too_big:r="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case ZodIssueCode.custom:r="Invalid input";break;case ZodIssueCode.invalid_intersection_types:r="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;case ZodIssueCode.not_finite:r="Number must be finite";break;default:r=t.defaultError,util.assertNever(e)}return{message:r}};let overrideErrorMap=errorMap;function setErrorMap(e){overrideErrorMap=e}function getErrorMap(){return overrideErrorMap}const makeIssue=e=>{const{data:t,path:r,errorMaps:s,issueData:n}=e,i=[...r,...n.path||[]],a={...n,path:i};if(void 0!==n.message)return{...n,path:i,message:n.message};let o="";const l=s.filter((e=>!!e)).slice().reverse();for(const e of l)o=e(a,{data:t,defaultError:o}).message;return{...n,path:i,message:o}},EMPTY_PATH=[];function addIssueToContext(e,t){const r=getErrorMap(),s=makeIssue({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,r,r===errorMap?void 0:errorMap].filter((e=>!!e))});e.common.issues.push(s)}class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,t){const r=[];for(const s of t){if("aborted"===s.status)return INVALID;"dirty"===s.status&&e.dirty(),r.push(s.value)}return{status:e.value,value:r}}static async mergeObjectAsync(e,t){const r=[];for(const e of t){const t=await e.key,s=await e.value;r.push({key:t,value:s})}return ParseStatus.mergeObjectSync(e,r)}static mergeObjectSync(e,t){const r={};for(const s of t){const{key:t,value:n}=s;if("aborted"===t.status)return INVALID;if("aborted"===n.status)return INVALID;"dirty"===t.status&&e.dirty(),"dirty"===n.status&&e.dirty(),"__proto__"===t.value||void 0===n.value&&!s.alwaysSet||(r[t.value]=n.value)}return{status:e.value,value:r}}}const INVALID=Object.freeze({status:"aborted"}),DIRTY=e=>({status:"dirty",value:e}),OK=e=>({status:"valid",value:e}),isAborted=e=>"aborted"===e.status,isDirty=e=>"dirty"===e.status,isValid=e=>"valid"===e.status,isAsync=e=>"undefined"!=typeof Promise&&e instanceof Promise;function __classPrivateFieldGet(e,t,r,s){if("a"===r&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?s:"a"===r?s.call(e):s?s.value:t.get(e)}function __classPrivateFieldSet(e,t,r,s,n){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?n.call(e,r):n?n.value=r:t.set(e,r),r}var errorUtil,_ZodEnum_cache,_ZodNativeEnum_cache;"function"==typeof SuppressedError&&SuppressedError,function(e){e.errToObj=e=>"string"==typeof e?{message:e}:e||{},e.toString=e=>"string"==typeof e?e:null==e?void 0:e.message}(errorUtil||(errorUtil={}));class ParseInputLazyPath{constructor(e,t,r,s){this._cachedPath=[],this.parent=e,this.data=t,this._path=r,this._key=s}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const handleResult=(e,t)=>{if(isValid(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const t=new ZodError(e.common.issues);return this._error=t,this._error}}};function processCreateParams(e){if(!e)return{};const{errorMap:t,invalid_type_error:r,required_error:s,description:n}=e;if(t&&(r||s))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(t)return{errorMap:t,description:n};return{errorMap:(t,n)=>{var i,a;const{message:o}=e;return"invalid_enum_value"===t.code?{message:null!=o?o:n.defaultError}:void 0===n.data?{message:null!==(i=null!=o?o:s)&&void 0!==i?i:n.defaultError}:"invalid_type"!==t.code?{message:n.defaultError}:{message:null!==(a=null!=o?o:r)&&void 0!==a?a:n.defaultError}},description:n}}class ZodType{get description(){return this._def.description}_getType(e){return getParsedType(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new ParseStatus,ctx:{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(isAsync(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const r=this.safeParse(e,t);if(r.success)return r.data;throw r.error}safeParse(e,t){var r;const s={common:{issues:[],async:null!==(r=null==t?void 0:t.async)&&void 0!==r&&r,contextualErrorMap:null==t?void 0:t.errorMap},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)},n=this._parseSync({data:e,path:s.path,parent:s});return handleResult(s,n)}"~validate"(e){var t,r;const s={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)};if(!this["~standard"].async)try{const t=this._parseSync({data:e,path:[],parent:s});return isValid(t)?{value:t.value}:{issues:s.common.issues}}catch(e){(null===(r=null===(t=null==e?void 0:e.message)||void 0===t?void 0:t.toLowerCase())||void 0===r?void 0:r.includes("encountered"))&&(this["~standard"].async=!0),s.common={issues:[],async:!0}}return this._parseAsync({data:e,path:[],parent:s}).then((e=>isValid(e)?{value:e.value}:{issues:s.common.issues}))}async parseAsync(e,t){const r=await this.safeParseAsync(e,t);if(r.success)return r.data;throw r.error}async safeParseAsync(e,t){const r={common:{issues:[],contextualErrorMap:null==t?void 0:t.errorMap,async:!0},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)},s=this._parse({data:e,path:r.path,parent:r}),n=await(isAsync(s)?s:Promise.resolve(s));return handleResult(r,n)}refine(e,t){const r=e=>"string"==typeof t||void 0===t?{message:t}:"function"==typeof t?t(e):t;return this._refinement(((t,s)=>{const n=e(t),i=()=>s.addIssue({code:ZodIssueCode.custom,...r(t)});return"undefined"!=typeof Promise&&n instanceof Promise?n.then((e=>!!e||(i(),!1))):!!n||(i(),!1)}))}refinement(e,t){return this._refinement(((r,s)=>!!e(r)||(s.addIssue("function"==typeof t?t(r,s):t),!1)))}_refinement(e){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:e=>this["~validate"](e)}}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this,this._def)}or(e){return ZodUnion.create([this,e],this._def)}and(e){return ZodIntersection.create(this,e,this._def)}transform(e){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t="function"==typeof e?e:()=>e;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:t,typeName:ZodFirstPartyTypeKind.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind.ZodBranded,type:this,...processCreateParams(this._def)})}catch(e){const t="function"==typeof e?e:()=>e;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:t,typeName:ZodFirstPartyTypeKind.ZodCatch})}describe(e){return new(0,this.constructor)({...this._def,description:e})}pipe(e){return ZodPipeline.create(this,e)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[0-9a-z]+$/,ulidRegex=/^[0-9A-HJKMNP-TV-Z]{26}$/i,uuidRegex=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,nanoidRegex=/^[a-z0-9_-]{21}$/i,jwtRegex=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,durationRegex=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,emailRegex=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,_emojiRegex="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let emojiRegex;const ipv4Regex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ipv4CidrRegex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,ipv6Regex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,ipv6CidrRegex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,base64Regex=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,base64urlRegex=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,dateRegexSource="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dateRegex=new RegExp(`^${dateRegexSource}$`);function timeRegexSource(e){let t="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return e.precision?t=`${t}\\.\\d{${e.precision}}`:null==e.precision&&(t=`${t}(\\.\\d+)?`),t}function timeRegex(e){return new RegExp(`^${timeRegexSource(e)}$`)}function datetimeRegex(e){let t=`${dateRegexSource}T${timeRegexSource(e)}`;const r=[];return r.push(e.local?"Z?":"Z"),e.offset&&r.push("([+-]\\d{2}:?\\d{2})"),t=`${t}(${r.join("|")})`,new RegExp(`^${t}$`)}function isValidIP(e,t){return!("v4"!==t&&t||!ipv4Regex.test(e))||!("v6"!==t&&t||!ipv6Regex.test(e))}function isValidJWT(e,t){if(!jwtRegex.test(e))return!1;try{const[r]=e.split("."),s=r.replace(/-/g,"+").replace(/_/g,"/").padEnd(r.length+(4-r.length%4)%4,"="),n=JSON.parse(atob(s));return"object"==typeof n&&null!==n&&(!(!n.typ||!n.alg)&&(!t||n.alg===t))}catch(e){return!1}}function isValidCidr(e,t){return!("v4"!==t&&t||!ipv4CidrRegex.test(e))||!("v6"!==t&&t||!ipv6CidrRegex.test(e))}class ZodString extends ZodType{_parse(e){this._def.coerce&&(e.data=String(e.data));if(this._getType(e)!==ZodParsedType.string){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:t.parsedType}),INVALID}const t=new ParseStatus;let r;for(const s of this._def.checks)if("min"===s.kind)e.data.length<s.value&&(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),t.dirty());else if("max"===s.kind)e.data.length>s.value&&(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),t.dirty());else if("length"===s.kind){const n=e.data.length>s.value,i=e.data.length<s.value;(n||i)&&(r=this._getOrReturnCtx(e,r),n?addIssueToContext(r,{code:ZodIssueCode.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}):i&&addIssueToContext(r,{code:ZodIssueCode.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}),t.dirty())}else if("email"===s.kind)emailRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"email",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("emoji"===s.kind)emojiRegex||(emojiRegex=new RegExp(_emojiRegex,"u")),emojiRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"emoji",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("uuid"===s.kind)uuidRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"uuid",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("nanoid"===s.kind)nanoidRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"nanoid",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("cuid"===s.kind)cuidRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"cuid",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("cuid2"===s.kind)cuid2Regex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"cuid2",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("ulid"===s.kind)ulidRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"ulid",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty());else if("url"===s.kind)try{new URL(e.data)}catch(n){r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"url",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()}else if("regex"===s.kind){s.regex.lastIndex=0;s.regex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"regex",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty())}else if("trim"===s.kind)e.data=e.data.trim();else if("includes"===s.kind)e.data.includes(s.value,s.position)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:{includes:s.value,position:s.position},message:s.message}),t.dirty());else if("toLowerCase"===s.kind)e.data=e.data.toLowerCase();else if("toUpperCase"===s.kind)e.data=e.data.toUpperCase();else if("startsWith"===s.kind)e.data.startsWith(s.value)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:{startsWith:s.value},message:s.message}),t.dirty());else if("endsWith"===s.kind)e.data.endsWith(s.value)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:{endsWith:s.value},message:s.message}),t.dirty());else if("datetime"===s.kind){datetimeRegex(s).test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:"datetime",message:s.message}),t.dirty())}else if("date"===s.kind){dateRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:"date",message:s.message}),t.dirty())}else if("time"===s.kind){timeRegex(s).test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.invalid_string,validation:"time",message:s.message}),t.dirty())}else"duration"===s.kind?durationRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"duration",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):"ip"===s.kind?isValidIP(e.data,s.version)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"ip",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):"jwt"===s.kind?isValidJWT(e.data,s.alg)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"jwt",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):"cidr"===s.kind?isValidCidr(e.data,s.version)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"cidr",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):"base64"===s.kind?base64Regex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"base64",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):"base64url"===s.kind?base64urlRegex.test(e.data)||(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{validation:"base64url",code:ZodIssueCode.invalid_string,message:s.message}),t.dirty()):util.assertNever(s);return{status:t.value,value:e.data}}_regex(e,t,r){return this.refinement((t=>e.test(t)),{validation:t,code:ZodIssueCode.invalid_string,...errorUtil.errToObj(r)})}_addCheck(e){return new ZodString({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...errorUtil.errToObj(e)})}url(e){return this._addCheck({kind:"url",...errorUtil.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...errorUtil.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...errorUtil.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...errorUtil.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...errorUtil.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...errorUtil.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...errorUtil.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...errorUtil.errToObj(e)})}base64url(e){return this._addCheck({kind:"base64url",...errorUtil.errToObj(e)})}jwt(e){return this._addCheck({kind:"jwt",...errorUtil.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...errorUtil.errToObj(e)})}cidr(e){return this._addCheck({kind:"cidr",...errorUtil.errToObj(e)})}datetime(e){var t,r;return"string"==typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:"datetime",precision:void 0===(null==e?void 0:e.precision)?null:null==e?void 0:e.precision,offset:null!==(t=null==e?void 0:e.offset)&&void 0!==t&&t,local:null!==(r=null==e?void 0:e.local)&&void 0!==r&&r,...errorUtil.errToObj(null==e?void 0:e.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return"string"==typeof e?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:void 0===(null==e?void 0:e.precision)?null:null==e?void 0:e.precision,...errorUtil.errToObj(null==e?void 0:e.message)})}duration(e){return this._addCheck({kind:"duration",...errorUtil.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...errorUtil.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null==t?void 0:t.position,...errorUtil.errToObj(null==t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...errorUtil.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...errorUtil.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...errorUtil.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...errorUtil.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...errorUtil.errToObj(t)})}nonempty(e){return this.min(1,errorUtil.errToObj(e))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((e=>"datetime"===e.kind))}get isDate(){return!!this._def.checks.find((e=>"date"===e.kind))}get isTime(){return!!this._def.checks.find((e=>"time"===e.kind))}get isDuration(){return!!this._def.checks.find((e=>"duration"===e.kind))}get isEmail(){return!!this._def.checks.find((e=>"email"===e.kind))}get isURL(){return!!this._def.checks.find((e=>"url"===e.kind))}get isEmoji(){return!!this._def.checks.find((e=>"emoji"===e.kind))}get isUUID(){return!!this._def.checks.find((e=>"uuid"===e.kind))}get isNANOID(){return!!this._def.checks.find((e=>"nanoid"===e.kind))}get isCUID(){return!!this._def.checks.find((e=>"cuid"===e.kind))}get isCUID2(){return!!this._def.checks.find((e=>"cuid2"===e.kind))}get isULID(){return!!this._def.checks.find((e=>"ulid"===e.kind))}get isIP(){return!!this._def.checks.find((e=>"ip"===e.kind))}get isCIDR(){return!!this._def.checks.find((e=>"cidr"===e.kind))}get isBase64(){return!!this._def.checks.find((e=>"base64"===e.kind))}get isBase64url(){return!!this._def.checks.find((e=>"base64url"===e.kind))}get minLength(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}function floatSafeRemainder(e,t){const r=(e.toString().split(".")[1]||"").length,s=(t.toString().split(".")[1]||"").length,n=r>s?r:s;return parseInt(e.toFixed(n).replace(".",""))%parseInt(t.toFixed(n).replace(".",""))/Math.pow(10,n)}ZodString.create=e=>{var t;return new ZodString({checks:[],typeName:ZodFirstPartyTypeKind.ZodString,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...processCreateParams(e)})};class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){this._def.coerce&&(e.data=Number(e.data));if(this._getType(e)!==ZodParsedType.number){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:t.parsedType}),INVALID}let t;const r=new ParseStatus;for(const s of this._def.checks)if("int"===s.kind)util.isInteger(e.data)||(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:s.message}),r.dirty());else if("min"===s.kind){(s.inclusive?e.data<s.value:e.data<=s.value)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.too_small,minimum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),r.dirty())}else if("max"===s.kind){(s.inclusive?e.data>s.value:e.data>=s.value)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.too_big,maximum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),r.dirty())}else"multipleOf"===s.kind?0!==floatSafeRemainder(e.data,s.value)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.not_multiple_of,multipleOf:s.value,message:s.message}),r.dirty()):"finite"===s.kind?Number.isFinite(e.data)||(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.not_finite,message:s.message}),r.dirty()):util.assertNever(s);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,errorUtil.toString(t))}gt(e,t){return this.setLimit("min",e,!1,errorUtil.toString(t))}lte(e,t){return this.setLimit("max",e,!0,errorUtil.toString(t))}lt(e,t){return this.setLimit("max",e,!1,errorUtil.toString(t))}setLimit(e,t,r,s){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:r,message:errorUtil.toString(s)}]})}_addCheck(e){return new ZodNumber({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:errorUtil.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:errorUtil.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:errorUtil.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find((e=>"int"===e.kind||"multipleOf"===e.kind&&util.isInteger(e.value)))}get isFinite(){let e=null,t=null;for(const r of this._def.checks){if("finite"===r.kind||"int"===r.kind||"multipleOf"===r.kind)return!0;"min"===r.kind?(null===t||r.value>t)&&(t=r.value):"max"===r.kind&&(null===e||r.value<e)&&(e=r.value)}return Number.isFinite(t)&&Number.isFinite(e)}}ZodNumber.create=e=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber,coerce:(null==e?void 0:e.coerce)||!1,...processCreateParams(e)});class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce)try{e.data=BigInt(e.data)}catch(t){return this._getInvalidInput(e)}if(this._getType(e)!==ZodParsedType.bigint)return this._getInvalidInput(e);let t;const r=new ParseStatus;for(const s of this._def.checks)if("min"===s.kind){(s.inclusive?e.data<s.value:e.data<=s.value)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.too_small,type:"bigint",minimum:s.value,inclusive:s.inclusive,message:s.message}),r.dirty())}else if("max"===s.kind){(s.inclusive?e.data>s.value:e.data>=s.value)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.too_big,type:"bigint",maximum:s.value,inclusive:s.inclusive,message:s.message}),r.dirty())}else"multipleOf"===s.kind?e.data%s.value!==BigInt(0)&&(t=this._getOrReturnCtx(e,t),addIssueToContext(t,{code:ZodIssueCode.not_multiple_of,multipleOf:s.value,message:s.message}),r.dirty()):util.assertNever(s);return{status:r.value,value:e.data}}_getInvalidInput(e){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:t.parsedType}),INVALID}gte(e,t){return this.setLimit("min",e,!0,errorUtil.toString(t))}gt(e,t){return this.setLimit("min",e,!1,errorUtil.toString(t))}lte(e,t){return this.setLimit("max",e,!0,errorUtil.toString(t))}lt(e,t){return this.setLimit("max",e,!1,errorUtil.toString(t))}setLimit(e,t,r,s){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:r,message:errorUtil.toString(s)}]})}_addCheck(e){return new ZodBigInt({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:errorUtil.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}ZodBigInt.create=e=>{var t;return new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind.ZodBigInt,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...processCreateParams(e)})};class ZodBoolean extends ZodType{_parse(e){this._def.coerce&&(e.data=Boolean(e.data));if(this._getType(e)!==ZodParsedType.boolean){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:t.parsedType}),INVALID}return OK(e.data)}}ZodBoolean.create=e=>new ZodBoolean({typeName:ZodFirstPartyTypeKind.ZodBoolean,coerce:(null==e?void 0:e.coerce)||!1,...processCreateParams(e)});class ZodDate extends ZodType{_parse(e){this._def.coerce&&(e.data=new Date(e.data));if(this._getType(e)!==ZodParsedType.date){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:t.parsedType}),INVALID}if(isNaN(e.data.getTime())){return addIssueToContext(this._getOrReturnCtx(e),{code:ZodIssueCode.invalid_date}),INVALID}const t=new ParseStatus;let r;for(const s of this._def.checks)"min"===s.kind?e.data.getTime()<s.value&&(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.too_small,message:s.message,inclusive:!0,exact:!1,minimum:s.value,type:"date"}),t.dirty()):"max"===s.kind?e.data.getTime()>s.value&&(r=this._getOrReturnCtx(e,r),addIssueToContext(r,{code:ZodIssueCode.too_big,message:s.message,inclusive:!0,exact:!1,maximum:s.value,type:"date"}),t.dirty()):util.assertNever(s);return{status:t.value,value:new Date(e.data.getTime())}}_addCheck(e){return new ZodDate({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:errorUtil.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:errorUtil.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}}ZodDate.create=e=>new ZodDate({checks:[],coerce:(null==e?void 0:e.coerce)||!1,typeName:ZodFirstPartyTypeKind.ZodDate,...processCreateParams(e)});class ZodSymbol extends ZodType{_parse(e){if(this._getType(e)!==ZodParsedType.symbol){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:t.parsedType}),INVALID}return OK(e.data)}}ZodSymbol.create=e=>new ZodSymbol({typeName:ZodFirstPartyTypeKind.ZodSymbol,...processCreateParams(e)});class ZodUndefined extends ZodType{_parse(e){if(this._getType(e)!==ZodParsedType.undefined){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:t.parsedType}),INVALID}return OK(e.data)}}ZodUndefined.create=e=>new ZodUndefined({typeName:ZodFirstPartyTypeKind.ZodUndefined,...processCreateParams(e)});class ZodNull extends ZodType{_parse(e){if(this._getType(e)!==ZodParsedType.null){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:t.parsedType}),INVALID}return OK(e.data)}}ZodNull.create=e=>new ZodNull({typeName:ZodFirstPartyTypeKind.ZodNull,...processCreateParams(e)});class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(e){return OK(e.data)}}ZodAny.create=e=>new ZodAny({typeName:ZodFirstPartyTypeKind.ZodAny,...processCreateParams(e)});class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(e){return OK(e.data)}}ZodUnknown.create=e=>new ZodUnknown({typeName:ZodFirstPartyTypeKind.ZodUnknown,...processCreateParams(e)});class ZodNever extends ZodType{_parse(e){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:t.parsedType}),INVALID}}ZodNever.create=e=>new ZodNever({typeName:ZodFirstPartyTypeKind.ZodNever,...processCreateParams(e)});class ZodVoid extends ZodType{_parse(e){if(this._getType(e)!==ZodParsedType.undefined){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:t.parsedType}),INVALID}return OK(e.data)}}ZodVoid.create=e=>new ZodVoid({typeName:ZodFirstPartyTypeKind.ZodVoid,...processCreateParams(e)});class ZodArray extends ZodType{_parse(e){const{ctx:t,status:r}=this._processInputParams(e),s=this._def;if(t.parsedType!==ZodParsedType.array)return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:t.parsedType}),INVALID;if(null!==s.exactLength){const e=t.data.length>s.exactLength.value,n=t.data.length<s.exactLength.value;(e||n)&&(addIssueToContext(t,{code:e?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:n?s.exactLength.value:void 0,maximum:e?s.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:s.exactLength.message}),r.dirty())}if(null!==s.minLength&&t.data.length<s.minLength.value&&(addIssueToContext(t,{code:ZodIssueCode.too_small,minimum:s.minLength.value,type:"array",inclusive:!0,exact:!1,message:s.minLength.message}),r.dirty()),null!==s.maxLength&&t.data.length>s.maxLength.value&&(addIssueToContext(t,{code:ZodIssueCode.too_big,maximum:s.maxLength.value,type:"array",inclusive:!0,exact:!1,message:s.maxLength.message}),r.dirty()),t.common.async)return Promise.all([...t.data].map(((e,r)=>s.type._parseAsync(new ParseInputLazyPath(t,e,t.path,r))))).then((e=>ParseStatus.mergeArray(r,e)));const n=[...t.data].map(((e,r)=>s.type._parseSync(new ParseInputLazyPath(t,e,t.path,r))));return ParseStatus.mergeArray(r,n)}get element(){return this._def.type}min(e,t){return new ZodArray({...this._def,minLength:{value:e,message:errorUtil.toString(t)}})}max(e,t){return new ZodArray({...this._def,maxLength:{value:e,message:errorUtil.toString(t)}})}length(e,t){return new ZodArray({...this._def,exactLength:{value:e,message:errorUtil.toString(t)}})}nonempty(e){return this.min(1,e)}}function deepPartialify(e){if(e instanceof ZodObject){const t={};for(const r in e.shape){const s=e.shape[r];t[r]=ZodOptional.create(deepPartialify(s))}return new ZodObject({...e._def,shape:()=>t})}return e instanceof ZodArray?new ZodArray({...e._def,type:deepPartialify(e.element)}):e instanceof ZodOptional?ZodOptional.create(deepPartialify(e.unwrap())):e instanceof ZodNullable?ZodNullable.create(deepPartialify(e.unwrap())):e instanceof ZodTuple?ZodTuple.create(e.items.map((e=>deepPartialify(e)))):e}ZodArray.create=(e,t)=>new ZodArray({type:e,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind.ZodArray,...processCreateParams(t)});class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const e=this._def.shape(),t=util.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==ZodParsedType.object){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:t.parsedType}),INVALID}const{status:t,ctx:r}=this._processInputParams(e),{shape:s,keys:n}=this._getCached(),i=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(const e in r.data)n.includes(e)||i.push(e);const a=[];for(const e of n){const t=s[e],n=r.data[e];a.push({key:{status:"valid",value:e},value:t._parse(new ParseInputLazyPath(r,n,r.path,e)),alwaysSet:e in r.data})}if(this._def.catchall instanceof ZodNever){const e=this._def.unknownKeys;if("passthrough"===e)for(const e of i)a.push({key:{status:"valid",value:e},value:{status:"valid",value:r.data[e]}});else if("strict"===e)i.length>0&&(addIssueToContext(r,{code:ZodIssueCode.unrecognized_keys,keys:i}),t.dirty());else if("strip"!==e)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const e=this._def.catchall;for(const t of i){const s=r.data[t];a.push({key:{status:"valid",value:t},value:e._parse(new ParseInputLazyPath(r,s,r.path,t)),alwaysSet:t in r.data})}}return r.common.async?Promise.resolve().then((async()=>{const e=[];for(const t of a){const r=await t.key,s=await t.value;e.push({key:r,value:s,alwaysSet:t.alwaysSet})}return e})).then((e=>ParseStatus.mergeObjectSync(t,e))):ParseStatus.mergeObjectSync(t,a)}get shape(){return this._def.shape()}strict(e){return errorUtil.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,r)=>{var s,n,i,a;const o=null!==(i=null===(n=(s=this._def).errorMap)||void 0===n?void 0:n.call(s,t,r).message)&&void 0!==i?i:r.defaultError;return"unrecognized_keys"===t.code?{message:null!==(a=errorUtil.errToObj(e).message)&&void 0!==a?a:o}:{message:o}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(e){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new ZodObject({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:ZodFirstPartyTypeKind.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new ZodObject({...this._def,catchall:e})}pick(e){const t={};return util.objectKeys(e).forEach((r=>{e[r]&&this.shape[r]&&(t[r]=this.shape[r])})),new ZodObject({...this._def,shape:()=>t})}omit(e){const t={};return util.objectKeys(this.shape).forEach((r=>{e[r]||(t[r]=this.shape[r])})),new ZodObject({...this._def,shape:()=>t})}deepPartial(){return deepPartialify(this)}partial(e){const t={};return util.objectKeys(this.shape).forEach((r=>{const s=this.shape[r];e&&!e[r]?t[r]=s:t[r]=s.optional()})),new ZodObject({...this._def,shape:()=>t})}required(e){const t={};return util.objectKeys(this.shape).forEach((r=>{if(e&&!e[r])t[r]=this.shape[r];else{let e=this.shape[r];for(;e instanceof ZodOptional;)e=e._def.innerType;t[r]=e}})),new ZodObject({...this._def,shape:()=>t})}keyof(){return createZodEnum(util.objectKeys(this.shape))}}ZodObject.create=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(t)}),ZodObject.strictCreate=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(t)}),ZodObject.lazycreate=(e,t)=>new ZodObject({shape:e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(t)});class ZodUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),r=this._def.options;if(t.common.async)return Promise.all(r.map((async e=>{const r={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:r}),ctx:r}}))).then((function(e){for(const t of e)if("valid"===t.result.status)return t.result;for(const r of e)if("dirty"===r.result.status)return t.common.issues.push(...r.ctx.common.issues),r.result;const r=e.map((e=>new ZodError(e.ctx.common.issues)));return addIssueToContext(t,{code:ZodIssueCode.invalid_union,unionErrors:r}),INVALID}));{let e;const s=[];for(const n of r){const r={...t,common:{...t.common,issues:[]},parent:null},i=n._parseSync({data:t.data,path:t.path,parent:r});if("valid"===i.status)return i;"dirty"!==i.status||e||(e={result:i,ctx:r}),r.common.issues.length&&s.push(r.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;const n=s.map((e=>new ZodError(e)));return addIssueToContext(t,{code:ZodIssueCode.invalid_union,unionErrors:n}),INVALID}}get options(){return this._def.options}}ZodUnion.create=(e,t)=>new ZodUnion({options:e,typeName:ZodFirstPartyTypeKind.ZodUnion,...processCreateParams(t)});const getDiscriminator=e=>e instanceof ZodLazy?getDiscriminator(e.schema):e instanceof ZodEffects?getDiscriminator(e.innerType()):e instanceof ZodLiteral?[e.value]:e instanceof ZodEnum?e.options:e instanceof ZodNativeEnum?util.objectValues(e.enum):e instanceof ZodDefault?getDiscriminator(e._def.innerType):e instanceof ZodUndefined?[void 0]:e instanceof ZodNull?[null]:e instanceof ZodOptional?[void 0,...getDiscriminator(e.unwrap())]:e instanceof ZodNullable?[null,...getDiscriminator(e.unwrap())]:e instanceof ZodBranded||e instanceof ZodReadonly?getDiscriminator(e.unwrap()):e instanceof ZodCatch?getDiscriminator(e._def.innerType):[];class ZodDiscriminatedUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==ZodParsedType.object)return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:t.parsedType}),INVALID;const r=this.discriminator,s=t.data[r],n=this.optionsMap.get(s);return n?t.common.async?n._parseAsync({data:t.data,path:t.path,parent:t}):n._parseSync({data:t.data,path:t.path,parent:t}):(addIssueToContext(t,{code:ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,r){const s=new Map;for(const r of t){const t=getDiscriminator(r.shape[e]);if(!t.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const n of t){if(s.has(n))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(n)}`);s.set(n,r)}}return new ZodDiscriminatedUnion({typeName:ZodFirstPartyTypeKind.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:s,...processCreateParams(r)})}}function mergeValues(e,t){const r=getParsedType(e),s=getParsedType(t);if(e===t)return{valid:!0,data:e};if(r===ZodParsedType.object&&s===ZodParsedType.object){const r=util.objectKeys(t),s=util.objectKeys(e).filter((e=>-1!==r.indexOf(e))),n={...e,...t};for(const r of s){const s=mergeValues(e[r],t[r]);if(!s.valid)return{valid:!1};n[r]=s.data}return{valid:!0,data:n}}if(r===ZodParsedType.array&&s===ZodParsedType.array){if(e.length!==t.length)return{valid:!1};const r=[];for(let s=0;s<e.length;s++){const n=mergeValues(e[s],t[s]);if(!n.valid)return{valid:!1};r.push(n.data)}return{valid:!0,data:r}}return r===ZodParsedType.date&&s===ZodParsedType.date&&+e==+t?{valid:!0,data:e}:{valid:!1}}class ZodIntersection extends ZodType{_parse(e){const{status:t,ctx:r}=this._processInputParams(e),s=(e,s)=>{if(isAborted(e)||isAborted(s))return INVALID;const n=mergeValues(e.value,s.value);return n.valid?((isDirty(e)||isDirty(s))&&t.dirty(),{status:t.value,value:n.data}):(addIssueToContext(r,{code:ZodIssueCode.invalid_intersection_types}),INVALID)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then((([e,t])=>s(e,t))):s(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}}ZodIntersection.create=(e,t,r)=>new ZodIntersection({left:e,right:t,typeName:ZodFirstPartyTypeKind.ZodIntersection,...processCreateParams(r)});class ZodTuple extends ZodType{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==ZodParsedType.array)return addIssueToContext(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:r.parsedType}),INVALID;if(r.data.length<this._def.items.length)return addIssueToContext(r,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;!this._def.rest&&r.data.length>this._def.items.length&&(addIssueToContext(r,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());const s=[...r.data].map(((e,t)=>{const s=this._def.items[t]||this._def.rest;return s?s._parse(new ParseInputLazyPath(r,e,r.path,t)):null})).filter((e=>!!e));return r.common.async?Promise.all(s).then((e=>ParseStatus.mergeArray(t,e))):ParseStatus.mergeArray(t,s)}get items(){return this._def.items}rest(e){return new ZodTuple({...this._def,rest:e})}}ZodTuple.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:e,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null,...processCreateParams(t)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==ZodParsedType.object)return addIssueToContext(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:r.parsedType}),INVALID;const s=[],n=this._def.keyType,i=this._def.valueType;for(const e in r.data)s.push({key:n._parse(new ParseInputLazyPath(r,e,r.path,e)),value:i._parse(new ParseInputLazyPath(r,r.data[e],r.path,e)),alwaysSet:e in r.data});return r.common.async?ParseStatus.mergeObjectAsync(t,s):ParseStatus.mergeObjectSync(t,s)}get element(){return this._def.valueType}static create(e,t,r){return new ZodRecord(t instanceof ZodType?{keyType:e,valueType:t,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(r)}:{keyType:ZodString.create(),valueType:e,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(t)})}}class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==ZodParsedType.map)return addIssueToContext(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:r.parsedType}),INVALID;const s=this._def.keyType,n=this._def.valueType,i=[...r.data.entries()].map((([e,t],i)=>({key:s._parse(new ParseInputLazyPath(r,e,r.path,[i,"key"])),value:n._parse(new ParseInputLazyPath(r,t,r.path,[i,"value"]))})));if(r.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const r of i){const s=await r.key,n=await r.value;if("aborted"===s.status||"aborted"===n.status)return INVALID;"dirty"!==s.status&&"dirty"!==n.status||t.dirty(),e.set(s.value,n.value)}return{status:t.value,value:e}}))}{const e=new Map;for(const r of i){const s=r.key,n=r.value;if("aborted"===s.status||"aborted"===n.status)return INVALID;"dirty"!==s.status&&"dirty"!==n.status||t.dirty(),e.set(s.value,n.value)}return{status:t.value,value:e}}}}ZodMap.create=(e,t,r)=>new ZodMap({valueType:t,keyType:e,typeName:ZodFirstPartyTypeKind.ZodMap,...processCreateParams(r)});class ZodSet extends ZodType{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==ZodParsedType.set)return addIssueToContext(r,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:r.parsedType}),INVALID;const s=this._def;null!==s.minSize&&r.data.size<s.minSize.value&&(addIssueToContext(r,{code:ZodIssueCode.too_small,minimum:s.minSize.value,type:"set",inclusive:!0,exact:!1,message:s.minSize.message}),t.dirty()),null!==s.maxSize&&r.data.size>s.maxSize.value&&(addIssueToContext(r,{code:ZodIssueCode.too_big,maximum:s.maxSize.value,type:"set",inclusive:!0,exact:!1,message:s.maxSize.message}),t.dirty());const n=this._def.valueType;function i(e){const r=new Set;for(const s of e){if("aborted"===s.status)return INVALID;"dirty"===s.status&&t.dirty(),r.add(s.value)}return{status:t.value,value:r}}const a=[...r.data.values()].map(((e,t)=>n._parse(new ParseInputLazyPath(r,e,r.path,t))));return r.common.async?Promise.all(a).then((e=>i(e))):i(a)}min(e,t){return new ZodSet({...this._def,minSize:{value:e,message:errorUtil.toString(t)}})}max(e,t){return new ZodSet({...this._def,maxSize:{value:e,message:errorUtil.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}ZodSet.create=(e,t)=>new ZodSet({valueType:e,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind.ZodSet,...processCreateParams(t)});class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==ZodParsedType.function)return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:t.parsedType}),INVALID;function r(e,r){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),errorMap].filter((e=>!!e)),issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:r}})}function s(e,r){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),errorMap].filter((e=>!!e)),issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:r}})}const n={errorMap:t.common.contextualErrorMap},i=t.data;if(this._def.returns instanceof ZodPromise){const e=this;return OK((async function(...t){const a=new ZodError([]),o=await e._def.args.parseAsync(t,n).catch((e=>{throw a.addIssue(r(t,e)),a})),l=await Reflect.apply(i,this,o),c=await e._def.returns._def.type.parseAsync(l,n).catch((e=>{throw a.addIssue(s(l,e)),a}));return c}))}{const e=this;return OK((function(...t){const a=e._def.args.safeParse(t,n);if(!a.success)throw new ZodError([r(t,a.error)]);const o=Reflect.apply(i,this,a.data),l=e._def.returns.safeParse(o,n);if(!l.success)throw new ZodError([s(o,l.error)]);return l.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ZodFunction({...this._def,args:ZodTuple.create(e).rest(ZodUnknown.create())})}returns(e){return new ZodFunction({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,r){return new ZodFunction({args:e||ZodTuple.create([]).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind.ZodFunction,...processCreateParams(r)})}}class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}ZodLazy.create=(e,t)=>new ZodLazy({getter:e,typeName:ZodFirstPartyTypeKind.ZodLazy,...processCreateParams(t)});class ZodLiteral extends ZodType{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{received:t.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:e.data}}get value(){return this._def.value}}function createZodEnum(e,t){return new ZodEnum({values:e,typeName:ZodFirstPartyTypeKind.ZodEnum,...processCreateParams(t)})}ZodLiteral.create=(e,t)=>new ZodLiteral({value:e,typeName:ZodFirstPartyTypeKind.ZodLiteral,...processCreateParams(t)});class ZodEnum extends ZodType{constructor(){super(...arguments),_ZodEnum_cache.set(this,void 0)}_parse(e){if("string"!=typeof e.data){const t=this._getOrReturnCtx(e),r=this._def.values;return addIssueToContext(t,{expected:util.joinValues(r),received:t.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodEnum_cache,"f")||__classPrivateFieldSet(this,_ZodEnum_cache,new Set(this._def.values),"f"),!__classPrivateFieldGet(this,_ZodEnum_cache,"f").has(e.data)){const t=this._getOrReturnCtx(e),r=this._def.values;return addIssueToContext(t,{received:t.data,code:ZodIssueCode.invalid_enum_value,options:r}),INVALID}return OK(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e,t=this._def){return ZodEnum.create(e,{...this._def,...t})}exclude(e,t=this._def){return ZodEnum.create(this.options.filter((t=>!e.includes(t))),{...this._def,...t})}}_ZodEnum_cache=new WeakMap,ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{constructor(){super(...arguments),_ZodNativeEnum_cache.set(this,void 0)}_parse(e){const t=util.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(e);if(r.parsedType!==ZodParsedType.string&&r.parsedType!==ZodParsedType.number){const e=util.objectValues(t);return addIssueToContext(r,{expected:util.joinValues(e),received:r.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f")||__classPrivateFieldSet(this,_ZodNativeEnum_cache,new Set(util.getValidEnumValues(this._def.values)),"f"),!__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f").has(e.data)){const e=util.objectValues(t);return addIssueToContext(r,{received:r.data,code:ZodIssueCode.invalid_enum_value,options:e}),INVALID}return OK(e.data)}get enum(){return this._def.values}}_ZodNativeEnum_cache=new WeakMap,ZodNativeEnum.create=(e,t)=>new ZodNativeEnum({values:e,typeName:ZodFirstPartyTypeKind.ZodNativeEnum,...processCreateParams(t)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==ZodParsedType.promise&&!1===t.common.async)return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:t.parsedType}),INVALID;const r=t.parsedType===ZodParsedType.promise?t.data:Promise.resolve(t.data);return OK(r.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}ZodPromise.create=(e,t)=>new ZodPromise({type:e,typeName:ZodFirstPartyTypeKind.ZodPromise,...processCreateParams(t)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:r}=this._processInputParams(e),s=this._def.effect||null,n={addIssue:e=>{addIssueToContext(r,e),e.fatal?t.abort():t.dirty()},get path(){return r.path}};if(n.addIssue=n.addIssue.bind(n),"preprocess"===s.type){const e=s.transform(r.data,n);if(r.common.async)return Promise.resolve(e).then((async e=>{if("aborted"===t.value)return INVALID;const s=await this._def.schema._parseAsync({data:e,path:r.path,parent:r});return"aborted"===s.status?INVALID:"dirty"===s.status||"dirty"===t.value?DIRTY(s.value):s}));{if("aborted"===t.value)return INVALID;const s=this._def.schema._parseSync({data:e,path:r.path,parent:r});return"aborted"===s.status?INVALID:"dirty"===s.status||"dirty"===t.value?DIRTY(s.value):s}}if("refinement"===s.type){const e=e=>{const t=s.refinement(e,n);if(r.common.async)return Promise.resolve(t);if(t instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1===r.common.async){const s=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return"aborted"===s.status?INVALID:("dirty"===s.status&&t.dirty(),e(s.value),{status:t.value,value:s.value})}return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then((r=>"aborted"===r.status?INVALID:("dirty"===r.status&&t.dirty(),e(r.value).then((()=>({status:t.value,value:r.value}))))))}if("transform"===s.type){if(!1===r.common.async){const e=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!isValid(e))return e;const i=s.transform(e.value,n);if(i instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:i}}return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then((e=>isValid(e)?Promise.resolve(s.transform(e.value,n)).then((e=>({status:t.value,value:e}))):e))}util.assertNever(s)}}ZodEffects.create=(e,t,r)=>new ZodEffects({schema:e,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:t,...processCreateParams(r)}),ZodEffects.createWithPreprocess=(e,t,r)=>new ZodEffects({schema:t,effect:{type:"preprocess",transform:e},typeName:ZodFirstPartyTypeKind.ZodEffects,...processCreateParams(r)});class ZodOptional extends ZodType{_parse(e){return this._getType(e)===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}ZodOptional.create=(e,t)=>new ZodOptional({innerType:e,typeName:ZodFirstPartyTypeKind.ZodOptional,...processCreateParams(t)});class ZodNullable extends ZodType{_parse(e){return this._getType(e)===ZodParsedType.null?OK(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}ZodNullable.create=(e,t)=>new ZodNullable({innerType:e,typeName:ZodFirstPartyTypeKind.ZodNullable,...processCreateParams(t)});class ZodDefault extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);let r=t.data;return t.parsedType===ZodParsedType.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}ZodDefault.create=(e,t)=>new ZodDefault({innerType:e,typeName:ZodFirstPartyTypeKind.ZodDefault,defaultValue:"function"==typeof t.default?t.default:()=>t.default,...processCreateParams(t)});class ZodCatch extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),r={...t,common:{...t.common,issues:[]}},s=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return isAsync(s)?s.then((e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new ZodError(r.common.issues)},input:r.data})}))):{status:"valid",value:"valid"===s.status?s.value:this._def.catchValue({get error(){return new ZodError(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}}ZodCatch.create=(e,t)=>new ZodCatch({innerType:e,typeName:ZodFirstPartyTypeKind.ZodCatch,catchValue:"function"==typeof t.catch?t.catch:()=>t.catch,...processCreateParams(t)});class ZodNaN extends ZodType{_parse(e){if(this._getType(e)!==ZodParsedType.nan){const t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:t.parsedType}),INVALID}return{status:"valid",value:e.data}}}ZodNaN.create=e=>new ZodNaN({typeName:ZodFirstPartyTypeKind.ZodNaN,...processCreateParams(e)});const BRAND=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),r=t.data;return this._def.type._parse({data:r,path:t.path,parent:t})}unwrap(){return this._def.type}}class ZodPipeline extends ZodType{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.common.async){return(async()=>{const e=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return"aborted"===e.status?INVALID:"dirty"===e.status?(t.dirty(),DIRTY(e.value)):this._def.out._parseAsync({data:e.value,path:r.path,parent:r})})()}{const e=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return"aborted"===e.status?INVALID:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:r.path,parent:r})}}static create(e,t){return new ZodPipeline({in:e,out:t,typeName:ZodFirstPartyTypeKind.ZodPipeline})}}class ZodReadonly extends ZodType{_parse(e){const t=this._def.innerType._parse(e),r=e=>(isValid(e)&&(e.value=Object.freeze(e.value)),e);return isAsync(t)?t.then((e=>r(e))):r(t)}unwrap(){return this._def.innerType}}function custom(e,t={},r){return e?ZodAny.create().superRefine(((s,n)=>{var i,a;if(!e(s)){const e="function"==typeof t?t(s):"string"==typeof t?{message:t}:t,o=null===(a=null!==(i=e.fatal)&&void 0!==i?i:r)||void 0===a||a,l="string"==typeof e?{message:e}:e;n.addIssue({code:"custom",...l,fatal:o})}})):ZodAny.create()}ZodReadonly.create=(e,t)=>new ZodReadonly({innerType:e,typeName:ZodFirstPartyTypeKind.ZodReadonly,...processCreateParams(t)});const late={object:ZodObject.lazycreate};var ZodFirstPartyTypeKind;!function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"}(ZodFirstPartyTypeKind||(ZodFirstPartyTypeKind={}));const instanceOfType=(e,t={message:`Input not instance of ${e.name}`})=>custom((t=>t instanceof e),t),stringType=ZodString.create,numberType=ZodNumber.create,nanType=ZodNaN.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,symbolType=ZodSymbol.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,discriminatedUnionType=ZodDiscriminatedUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,pipelineType=ZodPipeline.create,ostring=()=>stringType().optional(),onumber=()=>numberType().optional(),oboolean=()=>booleanType().optional(),coerce={string:e=>ZodString.create({...e,coerce:!0}),number:e=>ZodNumber.create({...e,coerce:!0}),boolean:e=>ZodBoolean.create({...e,coerce:!0}),bigint:e=>ZodBigInt.create({...e,coerce:!0}),date:e=>ZodDate.create({...e,coerce:!0})},NEVER=INVALID;var z=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap:setErrorMap,getErrorMap:getErrorMap,makeIssue:makeIssue,EMPTY_PATH:EMPTY_PATH,addIssueToContext:addIssueToContext,ParseStatus:ParseStatus,INVALID:INVALID,DIRTY:DIRTY,OK:OK,isAborted:isAborted,isDirty:isDirty,isValid:isValid,isAsync:isAsync,get util(){return util},get objectUtil(){return objectUtil},ZodParsedType:ZodParsedType,getParsedType:getParsedType,ZodType:ZodType,datetimeRegex:datetimeRegex,ZodString:ZodString,ZodNumber:ZodNumber,ZodBigInt:ZodBigInt,ZodBoolean:ZodBoolean,ZodDate:ZodDate,ZodSymbol:ZodSymbol,ZodUndefined:ZodUndefined,ZodNull:ZodNull,ZodAny:ZodAny,ZodUnknown:ZodUnknown,ZodNever:ZodNever,ZodVoid:ZodVoid,ZodArray:ZodArray,ZodObject:ZodObject,ZodUnion:ZodUnion,ZodDiscriminatedUnion:ZodDiscriminatedUnion,ZodIntersection:ZodIntersection,ZodTuple:ZodTuple,ZodRecord:ZodRecord,ZodMap:ZodMap,ZodSet:ZodSet,ZodFunction:ZodFunction,ZodLazy:ZodLazy,ZodLiteral:ZodLiteral,ZodEnum:ZodEnum,ZodNativeEnum:ZodNativeEnum,ZodPromise:ZodPromise,ZodEffects:ZodEffects,ZodTransformer:ZodEffects,ZodOptional:ZodOptional,ZodNullable:ZodNullable,ZodDefault:ZodDefault,ZodCatch:ZodCatch,ZodNaN:ZodNaN,BRAND:BRAND,ZodBranded:ZodBranded,ZodPipeline:ZodPipeline,ZodReadonly:ZodReadonly,custom:custom,Schema:ZodType,ZodSchema:ZodType,late:late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind},coerce:coerce,any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,discriminatedUnion:discriminatedUnionType,effect:effectsType,enum:enumType,function:functionType,instanceof:instanceOfType,intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nan:nanType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean:oboolean,onumber:onumber,optional:optionalType,ostring:ostring,pipeline:pipelineType,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,symbol:symbolType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,NEVER:NEVER,ZodIssueCode:ZodIssueCode,quotelessJson:quotelessJson,ZodError:ZodError}),APP_EXTENSION_TYPES=["interface","display","layout","module","panel","theme"],API_EXTENSION_TYPES=["hook","endpoint"],HYBRID_EXTENSION_TYPES=["operation"],BUNDLE_EXTENSION_TYPES=["bundle"],EXTENSION_PKG_KEY="directus:extension",SplitEntrypoint=z.object({app:z.string(),api:z.string()}),ExtensionSandboxRequestedScopes=z.object({request:z.optional(z.object({urls:z.array(z.string()),methods:z.array(z.union([z.literal("GET"),z.literal("POST"),z.literal("PATCH"),z.literal("PUT"),z.literal("DELETE")]))})),log:z.optional(z.object({})),sleep:z.optional(z.object({}))}),ExtensionSandboxOptions=z.optional(z.object({enabled:z.boolean(),requestedScopes:ExtensionSandboxRequestedScopes})),ExtensionOptionsBundleEntry=z.union([z.object({type:z.enum(API_EXTENSION_TYPES),name:z.string(),source:z.string()}),z.object({type:z.enum(APP_EXTENSION_TYPES),name:z.string(),source:z.string()}),z.object({type:z.enum(HYBRID_EXTENSION_TYPES),name:z.string(),source:SplitEntrypoint})]),ExtensionOptionsBase=z.object({host:z.string(),hidden:z.boolean().optional()}),ExtensionOptionsApp=z.object({type:z.enum(APP_EXTENSION_TYPES),path:z.string(),source:z.string()}),ExtensionOptionsApi=z.object({type:z.enum(API_EXTENSION_TYPES),path:z.string(),source:z.string(),sandbox:ExtensionSandboxOptions}),ExtensionOptionsHybrid=z.object({type:z.enum(HYBRID_EXTENSION_TYPES),path:SplitEntrypoint,source:SplitEntrypoint,sandbox:ExtensionSandboxOptions}),ExtensionOptionsBundle=z.object({type:z.literal("bundle"),partial:z.boolean().optional(),path:SplitEntrypoint,entries:z.array(ExtensionOptionsBundleEntry)});z.array(ExtensionOptionsBundleEntry);var ExtensionOptions=ExtensionOptionsBase.and(z.union([ExtensionOptionsApp,ExtensionOptionsApi,ExtensionOptionsHybrid,ExtensionOptionsBundle]));function defineEndpoint(e){return e}z.object({name:z.string(),version:z.string(),type:z.union([z.literal("module"),z.literal("commonjs")]).optional(),description:z.string().optional(),icon:z.string().optional(),dependencies:z.record(z.string()).optional(),devDependencies:z.record(z.string()).optional(),[EXTENSION_PKG_KEY]:ExtensionOptions});var A="/",L=(e,t)=>(e.endsWith(A)&&(e=e.slice(0,-1)),t.startsWith(A)||(t=A+t),e+t),g=(e,t,r)=>{let s=e.pathname===A?t:L(e.pathname,t),n=new globalThis.URL(s,e);if(r)for(let[e,t]of Object.entries(J(r)))if(t&&"object"==typeof t&&!Array.isArray(t))for(let[r,s]of Object.entries(t))n.searchParams.set(`${e}[${r}]`,String(s));else n.searchParams.set(e,t);return n};function $(e){return!("object"!=typeof e||!e)&&("headers"in e&&"ok"in e&&"json"in e&&"function"==typeof e.json&&"text"in e&&"function"==typeof e.json)}async function k(e){if("object"==typeof e&&e){if($(e)){let t=e.headers.get("Content-Type")?.toLowerCase();if(t?.startsWith("application/json")||t?.startsWith("application/health+json")){let t=await e.json();if(!e.ok||"errors"in t)throw t;return"data"in t?t.data:t}if(t?.startsWith("text/html")||t?.startsWith("text/plain")){let t=await e.text();if(!e.ok)throw t;return t}return 204===e.status?null:e}if("errors"in e)throw e;return"data"in e?e.data:e}}var b=async(e,t,r=globalThis.fetch)=>(t.headers="object"!=typeof t.headers||Array.isArray(t.headers)?{}:t.headers,r(e,t).then((e=>k(e).catch((t=>{let r={errors:t&&"object"==typeof t&&"errors"in t?t.errors:t,response:e};return t&&"object"==typeof t&&"data"in t&&(r.data=t.data),Promise.reject(r)}))))),pe=e=>t=>{let r=e??null;return{getToken:async()=>r,async setToken(e){r=e}}},K={fetch:globalThis.fetch,WebSocket:globalThis.WebSocket,URL:globalThis.URL,logger:globalThis.console},le=(e,t={})=>{let r=t.globals?{...K,...t.globals}:K;return{globals:r,url:new r.URL(e),with(e){return{...this,...e(this)}}}},lt=(e,t)=>()=>({path:"/comments",params:t??{},body:JSON.stringify(e),method:"POST"}),Tt=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"}),bt=(e,t)=>()=>({path:"/files",method:"POST",body:e,params:t??{},headers:{"Content-Type":"multipart/form-data"}}),jt=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"}),Et=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"});function j(e){return["directus_access","directus_activity","directus_collections","directus_comments","directus_fields","directus_files","directus_folders","directus_migrations","directus_permissions","directus_policies","directus_presets","directus_relations","directus_revisions","directus_roles","directus_sessions","directus_settings","directus_users","directus_webhooks","directus_dashboards","directus_panels","directus_notifications","directus_shares","directus_flows","directus_operations","directus_translations","directus_versions","directus_extensions"].includes(e)}var vt=(e,t,r)=>()=>{let s=String(e);if(j(s))throw new Error("Cannot use createItems for core collections");return{path:`/items/${s}`,params:r??{},body:JSON.stringify(t),method:"POST"}},Kt=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"}),_t=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"}),Bt=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"}),Xt=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"}),Zt=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"}),sr=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"}),pr=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"}),dr=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"}),U=e=>{let t=(e,r=[])=>{if("object"==typeof e){let s=[];for(let n in e){let i=e[n]??[];if(Array.isArray(i))for(let e of i)s.push(t(e,[...r,n]));else if("object"==typeof i)for(let e of Object.keys(i)){let a=i[e];for(let i of a)s.push(t(i,[...r,`${n}:${e}`]))}}return s.flatMap((e=>e))}return[...r,String(e)].join(".")};return e.flatMap((e=>t(e)))},J=e=>{let t={};Array.isArray(e.fields)&&e.fields.length>0&&(t.fields=U(e.fields).join(",")),e.filter&&Object.keys(e.filter).length>0&&(t.filter=JSON.stringify(e.filter)),e.search&&(t.search=e.search),"sort"in e&&e.sort&&(t.sort="string"==typeof e.sort?e.sort:e.sort.join(",")),"number"==typeof e.limit&&e.limit>=-1&&(t.limit=String(e.limit)),"number"==typeof e.offset&&e.offset>=0&&(t.offset=String(e.offset)),"number"==typeof e.page&&e.page>=1&&(t.page=String(e.page)),e.deep&&Object.keys(e.deep).length>0&&(t.deep=JSON.stringify(e.deep)),e.alias&&Object.keys(e.alias).length>0&&(t.alias=JSON.stringify(e.alias)),e.aggregate&&Object.keys(e.aggregate).length>0&&(t.aggregate=JSON.stringify(e.aggregate)),e.groupBy&&e.groupBy.length>0&&(t.groupBy=e.groupBy.join(","));for(let[r,s]of Object.entries(e))r in t||(t[r]="string"==typeof s||"number"==typeof s||"boolean"==typeof s?String(s):JSON.stringify(s));return t},r=(e,t)=>{if(0===e.length)throw new Error(t)},x=(e,t)=>{if(j(String(e)))throw new Error(t)},ys=e=>()=>({path:"/comments",params:e??{},method:"GET"}),fs=e=>()=>({path:"/dashboards",params:e??{},method:"GET"}),Ts=()=>()=>({path:"/extensions/",method:"GET"}),js=e=>()=>({path:"/files",params:e??{},method:"GET"}),As=e=>()=>({path:"/flows",params:e??{},method:"GET"}),Us=e=>()=>({path:"/folders",params:e??{},method:"GET"}),Gs=(e,t)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use readItems for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"}),Ys=e=>()=>({path:"/panels",params:e??{},method:"GET"}),rm=e=>()=>({path:"/permissions",params:e??{},method:"GET"}),nm=e=>()=>({path:"/policies",params:e??{},method:"GET"}),Om=e=>()=>({path:"/roles",params:e??{},method:"GET"}),Em=e=>()=>({path:"/settings",params:e??{},method:"GET"}),Gm=e=>()=>({path:"/translations",params:e??{},method:"GET"}),Hm=e=>()=>({path:"/users",params:e??{},method:"GET"}),Vm=e=>()=>({path:"/users/me",params:e??{},method:"GET"}),Fi=e=>()=>({method:"POST",path:"/schema/apply",body:JSON.stringify(e)}),wi=(e,t=!1)=>()=>({method:"POST",path:"/schema/diff",params:t?{force:t}:{},body:JSON.stringify(e)}),Cn=(e,t,s,n)=>()=>(r(e,"Keys cannot be empty"),r(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,params:n??{},body:JSON.stringify(s),method:"PATCH"}),Un=(e,t,s)=>()=>(r(e,"Key cannot be empty"),{path:`/folders/${e}`,params:s??{},body:JSON.stringify(t),method:"PATCH"}),Gn=(e,t,s)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateItems for core collections"),{path:`/items/${e}`,params:s??{},body:JSON.stringify(t),method:"PATCH"}),Xn=(e,t,s)=>()=>(r(e,"Key cannot be empty"),{path:`/operations/${e}`,params:s??{},body:JSON.stringify(t),method:"PATCH"}),Dc=(e,t,s)=>()=>(r(e,"Key cannot be empty"),{path:`/roles/${e}`,params:s??{},body:JSON.stringify(t),method:"PATCH"}),Pc=(e,t)=>()=>({path:"/settings",params:t??{},body:JSON.stringify(e),method:"PATCH"}),vc=(e,t,s)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateSingleton for core collections"),{path:`/items/${e}`,params:s??{},body:JSON.stringify(t),method:"PATCH"}),B={},ju=(e={})=>t=>{let r={...B,...e};return{async request(s){let n=s();if(n.headers||(n.headers={}),"Content-Type"in n.headers?"multipart/form-data"===n.headers["Content-Type"]&&delete n.headers["Content-Type"]:n.headers["Content-Type"]="application/json","getToken"in this&&!("Authorization"in n.headers)){let e=await this.getToken();e&&(n.headers.Authorization=`Bearer ${e}`)}let i=g(t.url,n.path,n.params),a={method:n.method??"GET",headers:n.headers??{}};"credentials"in r&&(a.credentials=r.credentials),n.body&&(a.body=n.body),n.onRequest&&(a=await n.onRequest(a)),r.onRequest&&(a=await r.onRequest(a));let o=await b(i.toString(),a,t.globals.fetch);return"onResponse"in n&&(o=await n.onResponse(o,a)),"onResponse"in e&&(o=await e.onResponse(o,a)),o}}};function Ju(e){return()=>e}async function notifyUser(e,t,r){var s;await e.createOne({status:"inbox",subject:r.name,recipient:t.user,message:Array.isArray(r.errors)&&r.errors.length>0?null==(s=r.errors[0])?void 0:s.message:JSON.stringify(r)})}async function createTmpFile(){const e=await createTmpDirectory(),t=createHash("sha1").update((new Date).toString()).digest("hex").slice(0,8),r=path.join(e.path,t);try{const e=await fs$1.open(r,"wx");await e.close()}catch(t){throw await e.cleanup(),t}return{path:r,cleanup:async function(){await fs$1.unlink(r),await e.cleanup()}}}async function createTmpDirectory(){const e=await fs$1.mkdtemp(path.join(tmpdir(),"directus-"));return{path:e,cleanup:async function(){return await fs$1.rmdir(e)}}}async function saveToFile(e,t,r,s,n){const i=await createTmpFile().catch((()=>null));if(!i)return;const a=JSON.stringify(e);return await appendFile(i.path,a),await r.uploadOne(createReadStream(i.path),{title:t,folder:s,filename_download:`${t}.json`,storage:n,type:"application/json"})}async function validate_system({roles:e,policies:t,permissions:r,users:s,access:n,folders:i,dashboards:a,flows:o,panels:l,operations:c,settings:d,translations:u,presets:p,extensions:h,comments:f,shares:m,scope:_,system_errors:y}){return!!_&&(!y&&(!_.users||Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&Array.isArray(r)&&r.length>0&&Array.isArray(s)&&s.length>0&&Array.isArray(n)&&n.length>0&&Array.isArray(m))&&(!_.content||Array.isArray(i))&&(!_.dashboards||Array.isArray(a)&&Array.isArray(l))&&(!_.flows||Array.isArray(o)&&Array.isArray(c))&&d&&Array.isArray(u)&&(!_.presets||Array.isArray(p)&&p.length>0)&&(!_.extensions||Array.isArray(h))&&(!_.comments||Array.isArray(f)))}async function validate_data({fullData:e,singletons:t,files:r,data_errors:s,scope:n}){return!!n&&(!s&&(!n.content||null!=e&&null!=t&&null!=r))}async function validate_migration(e){let t=!0;return e.forEach((e=>{"response"in e||(console.error(`${e.name} ${null==e?void 0:e.errors[0]}`),t=!1)})),t}var parser$5={},DLList$2;parser$5.load=function(e,t,r={}){var s,n,i;for(s in t)i=t[s],r[s]=null!=(n=e[s])?n:i;return r},parser$5.overwrite=function(e,t,r={}){var s,n;for(s in e)n=e[s],void 0!==t[s]&&(r[s]=n);return r},DLList$2=class{constructor(e,t){this.incr=e,this.decr=t,this._first=null,this._last=null,this.length=0}push(e){var t;this.length++,"function"==typeof this.incr&&this.incr(),t={value:e,prev:this._last,next:null},null!=this._last?(this._last.next=t,this._last=t):this._first=this._last=t}shift(){var e;if(null!=this._first)return this.length--,"function"==typeof this.decr&&this.decr(),e=this._first.value,null!=(this._first=this._first.next)?this._first.prev=null:this._last=null,e}first(){if(null!=this._first)return this._first.value}getArray(){var e,t,r;for(e=this._first,r=[];null!=e;)r.push((t=e,e=e.next,t.value));return r}forEachShift(e){var t;for(t=this.shift();null!=t;)e(t),t=this.shift()}debug(){var e,t,r,s,n;for(e=this._first,n=[];null!=e;)n.push((t=e,e=e.next,{value:t.value,prev:null!=(r=t.prev)?r.value:void 0,next:null!=(s=t.next)?s.value:void 0}));return n}};var DLList_1=DLList$2,Events$3;function asyncGeneratorStep$6(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$6(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$6(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$6(i,s,n,a,o,"throw",e)}a(void 0)}))}}Events$3=class{constructor(e){if(this.instance=e,this._events={},null!=this.instance.on||null!=this.instance.once||null!=this.instance.removeAllListeners)throw new Error("An Emitter already exists for this object");this.instance.on=(e,t)=>this._addListener(e,"many",t),this.instance.once=(e,t)=>this._addListener(e,"once",t),this.instance.removeAllListeners=(e=null)=>null!=e?delete this._events[e]:this._events={}}_addListener(e,t,r){var s;return null==(s=this._events)[e]&&(s[e]=[]),this._events[e].push({cb:r,status:t}),this.instance}listenerCount(e){return null!=this._events[e]?this._events[e].length:0}trigger(e,...t){var r=this;return _asyncToGenerator$6((function*(){var s,n;try{if("debug"!==e&&r.trigger("debug",`Event triggered: ${e}`,t),null==r._events[e])return;return r._events[e]=r._events[e].filter((function(e){return"none"!==e.status})),n=r._events[e].map(function(){var e=_asyncToGenerator$6((function*(e){var s,n;if("none"!==e.status){"once"===e.status&&(e.status="none");try{return"function"==typeof(null!=(n="function"==typeof e.cb?e.cb(...t):void 0)?n.then:void 0)?yield n:n}catch(e){return s=e,r.trigger("error",s),null}}}));return function(t){return e.apply(this,arguments)}}()),(yield Promise.all(n)).find((function(e){return null!=e}))}catch(e){return s=e,r.trigger("error",s),null}}))()}};var Events_1=Events$3,DLList$1,Events$2,Queues;DLList$1=DLList_1,Events$2=Events_1,Queues=class{constructor(e){this.Events=new Events$2(this),this._length=0,this._lists=function(){var t,r,s;for(s=[],t=1,r=e;1<=r?t<=r:t>=r;1<=r?++t:--t)s.push(new DLList$1((()=>this.incr()),(()=>this.decr())));return s}.call(this)}incr(){if(0==this._length++)return this.Events.trigger("leftzero")}decr(){if(0==--this._length)return this.Events.trigger("zero")}push(e){return this._lists[e.options.priority].push(e)}queued(e){return null!=e?this._lists[e].length:this._length}shiftAll(e){return this._lists.forEach((function(t){return t.forEachShift(e)}))}getFirst(e=this._lists){var t,r,s;for(t=0,r=e.length;t<r;t++)if((s=e[t]).length>0)return s;return[]}shiftLastFrom(e){return this.getFirst(this._lists.slice(e).reverse()).shift()}};var Queues_1=Queues,BottleneckError$4;BottleneckError$4=class extends Error{};var BottleneckError_1=BottleneckError$4,BottleneckError$3,DEFAULT_PRIORITY,Job,NUM_PRIORITIES,parser$4;function asyncGeneratorStep$5(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$5(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$5(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$5(i,s,n,a,o,"throw",e)}a(void 0)}))}}NUM_PRIORITIES=10,DEFAULT_PRIORITY=5,parser$4=parser$5,BottleneckError$3=BottleneckError_1,Job=class{constructor(e,t,r,s,n,i,a,o){this.task=e,this.args=t,this.rejectOnDrop=n,this.Events=i,this._states=a,this.Promise=o,this.options=parser$4.load(r,s),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===s.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise(((e,t)=>{this._resolve=e,this._reject=t})),this.retryCount=0}_sanitizePriority(e){var t;return(t=~~e!==e?DEFAULT_PRIORITY:e)<0?0:t>NUM_PRIORITIES-1?NUM_PRIORITIES-1:t}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:e,message:t="This job has been dropped by Bottleneck"}={}){return!!this._states.remove(this.options.id)&&(this.rejectOnDrop&&this._reject(null!=e?e:new BottleneckError$3(t)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0)}_assertStatus(e){var t;if((t=this._states.jobStatus(this.options.id))!==e&&("DONE"!==e||null!==t))throw new BottleneckError$3(`Invalid job status ${t}, expected ${e}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(e,t){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:e,blocked:t})}doRun(){return 0===this.retryCount?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}doExecute(e,t,r,s){var n=this;return _asyncToGenerator$5((function*(){var i,a,o;0===n.retryCount?(n._assertStatus("RUNNING"),n._states.next(n.options.id)):n._assertStatus("EXECUTING"),a={args:n.args,options:n.options,retryCount:n.retryCount},n.Events.trigger("executing",a);try{if(o=yield null!=e?e.schedule(n.options,n.task,...n.args):n.task(...n.args),t())return n.doDone(a),yield s(n.options,a),n._assertStatus("DONE"),n._resolve(o)}catch(e){return i=e,n._onFailure(i,a,t,r,s)}}))()}doExpire(e,t,r){var s,n;return this._states.jobStatus("RUNNING"===this.options.id)&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),n={args:this.args,options:this.options,retryCount:this.retryCount},s=new BottleneckError$3(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(s,n,e,t,r)}_onFailure(e,t,r,s,n){var i=this;return _asyncToGenerator$5((function*(){var a,o;if(r())return null!=(a=yield i.Events.trigger("failed",e,t))?(o=~~a,i.Events.trigger("retry",`Retrying ${i.options.id} after ${o} ms`,t),i.retryCount++,s(o)):(i.doDone(t),yield n(i.options,t),i._assertStatus("DONE"),i._reject(e))}))()}doDone(e){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",e)}};var Job_1=Job,BottleneckError$2,LocalDatastore,parser$3;function asyncGeneratorStep$4(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$4(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$4(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$4(i,s,n,a,o,"throw",e)}a(void 0)}))}}parser$3=parser$5,BottleneckError$2=BottleneckError_1,LocalDatastore=class{constructor(e,t,r){this.instance=e,this.storeOptions=t,this.clientId=this.instance._randomIndex(),parser$3.load(r,r,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var e;return null==this.heartbeat&&(null!=this.storeOptions.reservoirRefreshInterval&&null!=this.storeOptions.reservoirRefreshAmount||null!=this.storeOptions.reservoirIncreaseInterval&&null!=this.storeOptions.reservoirIncreaseAmount)?"function"==typeof(e=this.heartbeat=setInterval((()=>{var e,t,r,s,n;if(s=Date.now(),null!=this.storeOptions.reservoirRefreshInterval&&s>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=s,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),null!=this.storeOptions.reservoirIncreaseInterval&&s>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval){var i=this.storeOptions;if(e=i.reservoirIncreaseAmount,r=i.reservoirIncreaseMaximum,n=i.reservoir,this._lastReservoirIncrease=s,(t=null!=r?Math.min(e,r-n):e)>0)return this.storeOptions.reservoir+=t,this.instance._drainAll(this.computeCapacity())}}),this.heartbeatInterval)).unref?e.unref():void 0:clearInterval(this.heartbeat)}__publish__(e){var t=this;return _asyncToGenerator$4((function*(){return yield t.yieldLoop(),t.instance.Events.trigger("message",e.toString())}))()}__disconnect__(e){var t=this;return _asyncToGenerator$4((function*(){return yield t.yieldLoop(),clearInterval(t.heartbeat),t.Promise.resolve()}))()}yieldLoop(e=0){return new this.Promise((function(t,r){return setTimeout(t,e)}))}computePenalty(){var e;return null!=(e=this.storeOptions.penalty)?e:15*this.storeOptions.minTime||5e3}__updateSettings__(e){var t=this;return _asyncToGenerator$4((function*(){return yield t.yieldLoop(),parser$3.overwrite(e,e,t.storeOptions),t._startHeartbeat(),t.instance._drainAll(t.computeCapacity()),!0}))()}__running__(){var e=this;return _asyncToGenerator$4((function*(){return yield e.yieldLoop(),e._running}))()}__queued__(){var e=this;return _asyncToGenerator$4((function*(){return yield e.yieldLoop(),e.instance.queued()}))()}__done__(){var e=this;return _asyncToGenerator$4((function*(){return yield e.yieldLoop(),e._done}))()}__groupCheck__(e){var t=this;return _asyncToGenerator$4((function*(){return yield t.yieldLoop(),t._nextRequest+t.timeout<e}))()}computeCapacity(){var e,t,r=this.storeOptions;return e=r.maxConcurrent,t=r.reservoir,null!=e&&null!=t?Math.min(e-this._running,t):null!=e?e-this._running:null!=t?t:null}conditionsCheck(e){var t;return null==(t=this.computeCapacity())||e<=t}__incrementReservoir__(e){var t=this;return _asyncToGenerator$4((function*(){var r;return yield t.yieldLoop(),r=t.storeOptions.reservoir+=e,t.instance._drainAll(t.computeCapacity()),r}))()}__currentReservoir__(){var e=this;return _asyncToGenerator$4((function*(){return yield e.yieldLoop(),e.storeOptions.reservoir}))()}isBlocked(e){return this._unblockTime>=e}check(e,t){return this.conditionsCheck(e)&&this._nextRequest-t<=0}__check__(e){var t=this;return _asyncToGenerator$4((function*(){var r;return yield t.yieldLoop(),r=Date.now(),t.check(e,r)}))()}__register__(e,t,r){var s=this;return _asyncToGenerator$4((function*(){var e,r;return yield s.yieldLoop(),e=Date.now(),s.conditionsCheck(t)?(s._running+=t,null!=s.storeOptions.reservoir&&(s.storeOptions.reservoir-=t),r=Math.max(s._nextRequest-e,0),s._nextRequest=e+r+s.storeOptions.minTime,{success:!0,wait:r,reservoir:s.storeOptions.reservoir}):{success:!1}}))()}strategyIsBlock(){return 3===this.storeOptions.strategy}__submit__(e,t){var r=this;return _asyncToGenerator$4((function*(){var s,n,i;if(yield r.yieldLoop(),null!=r.storeOptions.maxConcurrent&&t>r.storeOptions.maxConcurrent)throw new BottleneckError$2(`Impossible to add a job having a weight of ${t} to a limiter having a maxConcurrent setting of ${r.storeOptions.maxConcurrent}`);return n=Date.now(),i=null!=r.storeOptions.highWater&&e===r.storeOptions.highWater&&!r.check(t,n),(s=r.strategyIsBlock()&&(i||r.isBlocked(n)))&&(r._unblockTime=n+r.computePenalty(),r._nextRequest=r._unblockTime+r.storeOptions.minTime,r.instance._dropAllQueued()),{reachedHWM:i,blocked:s,strategy:r.storeOptions.strategy}}))()}__free__(e,t){var r=this;return _asyncToGenerator$4((function*(){return yield r.yieldLoop(),r._running-=t,r._done+=t,r.instance._drainAll(r.computeCapacity()),{running:r._running}}))()}};var LocalDatastore_1=LocalDatastore,Scripts$2={},require$$0={"blacklist_client.lua":"local blacklist = ARGV[num_static_argv + 1]\n\nif redis.call('zscore', client_last_seen_key, blacklist) then\n  redis.call('zadd', client_last_seen_key, 0, blacklist)\nend\n\n\nreturn {}\n","check.lua":"local weight = tonumber(ARGV[num_static_argv + 1])\n\nlocal capacity = process_tick(now, false)['capacity']\nlocal nextRequest = tonumber(redis.call('hget', settings_key, 'nextRequest'))\n\nreturn conditions_check(capacity, weight) and nextRequest - now <= 0\n","conditions_check.lua":"local conditions_check = function (capacity, weight)\n  return capacity == nil or weight <= capacity\nend\n","current_reservoir.lua":"return process_tick(now, false)['reservoir']\n","done.lua":"process_tick(now, false)\n\nreturn tonumber(redis.call('hget', settings_key, 'done'))\n","free.lua":"local index = ARGV[num_static_argv + 1]\n\nredis.call('zadd', job_expirations_key, 0, index)\n\nreturn process_tick(now, false)['running']\n","get_time.lua":"redis.replicate_commands()\n\nlocal get_time = function ()\n  local time = redis.call('time')\n\n  return tonumber(time[1]..string.sub(time[2], 1, 3))\nend\n","group_check.lua":"return not (redis.call('exists', settings_key) == 1)\n","heartbeat.lua":"process_tick(now, true)\n","increment_reservoir.lua":"local incr = tonumber(ARGV[num_static_argv + 1])\n\nredis.call('hincrby', settings_key, 'reservoir', incr)\n\nlocal reservoir = process_tick(now, true)['reservoir']\n\nlocal groupTimeout = tonumber(redis.call('hget', settings_key, 'groupTimeout'))\nrefresh_expiration(0, 0, groupTimeout)\n\nreturn reservoir\n","init.lua":"local clear = tonumber(ARGV[num_static_argv + 1])\nlocal limiter_version = ARGV[num_static_argv + 2]\nlocal num_local_argv = num_static_argv + 2\n\nif clear == 1 then\n  redis.call('del', unpack(KEYS))\nend\n\nif redis.call('exists', settings_key) == 0 then\n  -- Create\n  local args = {'hmset', settings_key}\n\n  for i = num_local_argv + 1, #ARGV do\n    table.insert(args, ARGV[i])\n  end\n\n  redis.call(unpack(args))\n  redis.call('hmset', settings_key,\n    'nextRequest', now,\n    'lastReservoirRefresh', now,\n    'lastReservoirIncrease', now,\n    'running', 0,\n    'done', 0,\n    'unblockTime', 0,\n    'capacityPriorityCounter', 0\n  )\n\nelse\n  -- Apply migrations\n  local settings = redis.call('hmget', settings_key,\n    'id',\n    'version'\n  )\n  local id = settings[1]\n  local current_version = settings[2]\n\n  if current_version ~= limiter_version then\n    local version_digits = {}\n    for k, v in string.gmatch(current_version, \"([^.]+)\") do\n      table.insert(version_digits, tonumber(k))\n    end\n\n    -- 2.10.0\n    if version_digits[2] < 10 then\n      redis.call('hsetnx', settings_key, 'reservoirRefreshInterval', '')\n      redis.call('hsetnx', settings_key, 'reservoirRefreshAmount', '')\n      redis.call('hsetnx', settings_key, 'lastReservoirRefresh', '')\n      redis.call('hsetnx', settings_key, 'done', 0)\n      redis.call('hset', settings_key, 'version', '2.10.0')\n    end\n\n    -- 2.11.1\n    if version_digits[2] < 11 or (version_digits[2] == 11 and version_digits[3] < 1) then\n      if redis.call('hstrlen', settings_key, 'lastReservoirRefresh') == 0 then\n        redis.call('hmset', settings_key,\n          'lastReservoirRefresh', now,\n          'version', '2.11.1'\n        )\n      end\n    end\n\n    -- 2.14.0\n    if version_digits[2] < 14 then\n      local old_running_key = 'b_'..id..'_running'\n      local old_executing_key = 'b_'..id..'_executing'\n\n      if redis.call('exists', old_running_key) == 1 then\n        redis.call('rename', old_running_key, job_weights_key)\n      end\n      if redis.call('exists', old_executing_key) == 1 then\n        redis.call('rename', old_executing_key, job_expirations_key)\n      end\n      redis.call('hset', settings_key, 'version', '2.14.0')\n    end\n\n    -- 2.15.2\n    if version_digits[2] < 15 or (version_digits[2] == 15 and version_digits[3] < 2) then\n      redis.call('hsetnx', settings_key, 'capacityPriorityCounter', 0)\n      redis.call('hset', settings_key, 'version', '2.15.2')\n    end\n\n    -- 2.17.0\n    if version_digits[2] < 17 then\n      redis.call('hsetnx', settings_key, 'clientTimeout', 10000)\n      redis.call('hset', settings_key, 'version', '2.17.0')\n    end\n\n    -- 2.18.0\n    if version_digits[2] < 18 then\n      redis.call('hsetnx', settings_key, 'reservoirIncreaseInterval', '')\n      redis.call('hsetnx', settings_key, 'reservoirIncreaseAmount', '')\n      redis.call('hsetnx', settings_key, 'reservoirIncreaseMaximum', '')\n      redis.call('hsetnx', settings_key, 'lastReservoirIncrease', now)\n      redis.call('hset', settings_key, 'version', '2.18.0')\n    end\n\n  end\n\n  process_tick(now, false)\nend\n\nlocal groupTimeout = tonumber(redis.call('hget', settings_key, 'groupTimeout'))\nrefresh_expiration(0, 0, groupTimeout)\n\nreturn {}\n","process_tick.lua":"local process_tick = function (now, always_publish)\n\n  local compute_capacity = function (maxConcurrent, running, reservoir)\n    if maxConcurrent ~= nil and reservoir ~= nil then\n      return math.min((maxConcurrent - running), reservoir)\n    elseif maxConcurrent ~= nil then\n      return maxConcurrent - running\n    elseif reservoir ~= nil then\n      return reservoir\n    else\n      return nil\n    end\n  end\n\n  local settings = redis.call('hmget', settings_key,\n    'id',\n    'maxConcurrent',\n    'running',\n    'reservoir',\n    'reservoirRefreshInterval',\n    'reservoirRefreshAmount',\n    'lastReservoirRefresh',\n    'reservoirIncreaseInterval',\n    'reservoirIncreaseAmount',\n    'reservoirIncreaseMaximum',\n    'lastReservoirIncrease',\n    'capacityPriorityCounter',\n    'clientTimeout'\n  )\n  local id = settings[1]\n  local maxConcurrent = tonumber(settings[2])\n  local running = tonumber(settings[3])\n  local reservoir = tonumber(settings[4])\n  local reservoirRefreshInterval = tonumber(settings[5])\n  local reservoirRefreshAmount = tonumber(settings[6])\n  local lastReservoirRefresh = tonumber(settings[7])\n  local reservoirIncreaseInterval = tonumber(settings[8])\n  local reservoirIncreaseAmount = tonumber(settings[9])\n  local reservoirIncreaseMaximum = tonumber(settings[10])\n  local lastReservoirIncrease = tonumber(settings[11])\n  local capacityPriorityCounter = tonumber(settings[12])\n  local clientTimeout = tonumber(settings[13])\n\n  local initial_capacity = compute_capacity(maxConcurrent, running, reservoir)\n\n  --\n  -- Process 'running' changes\n  --\n  local expired = redis.call('zrangebyscore', job_expirations_key, '-inf', '('..now)\n\n  if #expired > 0 then\n    redis.call('zremrangebyscore', job_expirations_key, '-inf', '('..now)\n\n    local flush_batch = function (batch, acc)\n      local weights = redis.call('hmget', job_weights_key, unpack(batch))\n                      redis.call('hdel',  job_weights_key, unpack(batch))\n      local clients = redis.call('hmget', job_clients_key, unpack(batch))\n                      redis.call('hdel',  job_clients_key, unpack(batch))\n\n      -- Calculate sum of removed weights\n      for i = 1, #weights do\n        acc['total'] = acc['total'] + (tonumber(weights[i]) or 0)\n      end\n\n      -- Calculate sum of removed weights by client\n      local client_weights = {}\n      for i = 1, #clients do\n        local removed = tonumber(weights[i]) or 0\n        if removed > 0 then\n          acc['client_weights'][clients[i]] = (acc['client_weights'][clients[i]] or 0) + removed\n        end\n      end\n    end\n\n    local acc = {\n      ['total'] = 0,\n      ['client_weights'] = {}\n    }\n    local batch_size = 1000\n\n    -- Compute changes to Zsets and apply changes to Hashes\n    for i = 1, #expired, batch_size do\n      local batch = {}\n      for j = i, math.min(i + batch_size - 1, #expired) do\n        table.insert(batch, expired[j])\n      end\n\n      flush_batch(batch, acc)\n    end\n\n    -- Apply changes to Zsets\n    if acc['total'] > 0 then\n      redis.call('hincrby', settings_key, 'done', acc['total'])\n      running = tonumber(redis.call('hincrby', settings_key, 'running', -acc['total']))\n    end\n\n    for client, weight in pairs(acc['client_weights']) do\n      redis.call('zincrby', client_running_key, -weight, client)\n    end\n  end\n\n  --\n  -- Process 'reservoir' changes\n  --\n  local reservoirRefreshActive = reservoirRefreshInterval ~= nil and reservoirRefreshAmount ~= nil\n  if reservoirRefreshActive and now >= lastReservoirRefresh + reservoirRefreshInterval then\n    reservoir = reservoirRefreshAmount\n    redis.call('hmset', settings_key,\n      'reservoir', reservoir,\n      'lastReservoirRefresh', now\n    )\n  end\n\n  local reservoirIncreaseActive = reservoirIncreaseInterval ~= nil and reservoirIncreaseAmount ~= nil\n  if reservoirIncreaseActive and now >= lastReservoirIncrease + reservoirIncreaseInterval then\n    local num_intervals = math.floor((now - lastReservoirIncrease) / reservoirIncreaseInterval)\n    local incr = reservoirIncreaseAmount * num_intervals\n    if reservoirIncreaseMaximum ~= nil then\n      incr = math.min(incr, reservoirIncreaseMaximum - (reservoir or 0))\n    end\n    if incr > 0 then\n      reservoir = (reservoir or 0) + incr\n    end\n    redis.call('hmset', settings_key,\n      'reservoir', reservoir,\n      'lastReservoirIncrease', lastReservoirIncrease + (num_intervals * reservoirIncreaseInterval)\n    )\n  end\n\n  --\n  -- Clear unresponsive clients\n  --\n  local unresponsive = redis.call('zrangebyscore', client_last_seen_key, '-inf', (now - clientTimeout))\n  local unresponsive_lookup = {}\n  local terminated_clients = {}\n  for i = 1, #unresponsive do\n    unresponsive_lookup[unresponsive[i]] = true\n    if tonumber(redis.call('zscore', client_running_key, unresponsive[i])) == 0 then\n      table.insert(terminated_clients, unresponsive[i])\n    end\n  end\n  if #terminated_clients > 0 then\n    redis.call('zrem', client_running_key,         unpack(terminated_clients))\n    redis.call('hdel', client_num_queued_key,      unpack(terminated_clients))\n    redis.call('zrem', client_last_registered_key, unpack(terminated_clients))\n    redis.call('zrem', client_last_seen_key,       unpack(terminated_clients))\n  end\n\n  --\n  -- Broadcast capacity changes\n  --\n  local final_capacity = compute_capacity(maxConcurrent, running, reservoir)\n\n  if always_publish or (initial_capacity ~= nil and final_capacity == nil) then\n    -- always_publish or was not unlimited, now unlimited\n    redis.call('publish', 'b_'..id, 'capacity:'..(final_capacity or ''))\n\n  elseif initial_capacity ~= nil and final_capacity ~= nil and final_capacity > initial_capacity then\n    -- capacity was increased\n    -- send the capacity message to the limiter having the lowest number of running jobs\n    -- the tiebreaker is the limiter having not registered a job in the longest time\n\n    local lowest_concurrency_value = nil\n    local lowest_concurrency_clients = {}\n    local lowest_concurrency_last_registered = {}\n    local client_concurrencies = redis.call('zrange', client_running_key, 0, -1, 'withscores')\n\n    for i = 1, #client_concurrencies, 2 do\n      local client = client_concurrencies[i]\n      local concurrency = tonumber(client_concurrencies[i+1])\n\n      if (\n        lowest_concurrency_value == nil or lowest_concurrency_value == concurrency\n      ) and (\n        not unresponsive_lookup[client]\n      ) and (\n        tonumber(redis.call('hget', client_num_queued_key, client)) > 0\n      ) then\n        lowest_concurrency_value = concurrency\n        table.insert(lowest_concurrency_clients, client)\n        local last_registered = tonumber(redis.call('zscore', client_last_registered_key, client))\n        table.insert(lowest_concurrency_last_registered, last_registered)\n      end\n    end\n\n    if #lowest_concurrency_clients > 0 then\n      local position = 1\n      local earliest = lowest_concurrency_last_registered[1]\n\n      for i,v in ipairs(lowest_concurrency_last_registered) do\n        if v < earliest then\n          position = i\n          earliest = v\n        end\n      end\n\n      local next_client = lowest_concurrency_clients[position]\n      redis.call('publish', 'b_'..id,\n        'capacity-priority:'..(final_capacity or '')..\n        ':'..next_client..\n        ':'..capacityPriorityCounter\n      )\n      redis.call('hincrby', settings_key, 'capacityPriorityCounter', '1')\n    else\n      redis.call('publish', 'b_'..id, 'capacity:'..(final_capacity or ''))\n    end\n  end\n\n  return {\n    ['capacity'] = final_capacity,\n    ['running'] = running,\n    ['reservoir'] = reservoir\n  }\nend\n","queued.lua":"local clientTimeout = tonumber(redis.call('hget', settings_key, 'clientTimeout'))\nlocal valid_clients = redis.call('zrangebyscore', client_last_seen_key, (now - clientTimeout), 'inf')\nlocal client_queued = redis.call('hmget', client_num_queued_key, unpack(valid_clients))\n\nlocal sum = 0\nfor i = 1, #client_queued do\n  sum = sum + tonumber(client_queued[i])\nend\n\nreturn sum\n","refresh_expiration.lua":"local refresh_expiration = function (now, nextRequest, groupTimeout)\n\n  if groupTimeout ~= nil then\n    local ttl = (nextRequest + groupTimeout) - now\n\n    for i = 1, #KEYS do\n      redis.call('pexpire', KEYS[i], ttl)\n    end\n  end\n\nend\n","refs.lua":"local settings_key = KEYS[1]\nlocal job_weights_key = KEYS[2]\nlocal job_expirations_key = KEYS[3]\nlocal job_clients_key = KEYS[4]\nlocal client_running_key = KEYS[5]\nlocal client_num_queued_key = KEYS[6]\nlocal client_last_registered_key = KEYS[7]\nlocal client_last_seen_key = KEYS[8]\n\nlocal now = tonumber(ARGV[1])\nlocal client = ARGV[2]\n\nlocal num_static_argv = 2\n","register.lua":"local index = ARGV[num_static_argv + 1]\nlocal weight = tonumber(ARGV[num_static_argv + 2])\nlocal expiration = tonumber(ARGV[num_static_argv + 3])\n\nlocal state = process_tick(now, false)\nlocal capacity = state['capacity']\nlocal reservoir = state['reservoir']\n\nlocal settings = redis.call('hmget', settings_key,\n  'nextRequest',\n  'minTime',\n  'groupTimeout'\n)\nlocal nextRequest = tonumber(settings[1])\nlocal minTime = tonumber(settings[2])\nlocal groupTimeout = tonumber(settings[3])\n\nif conditions_check(capacity, weight) then\n\n  redis.call('hincrby', settings_key, 'running', weight)\n  redis.call('hset', job_weights_key, index, weight)\n  if expiration ~= nil then\n    redis.call('zadd', job_expirations_key, now + expiration, index)\n  end\n  redis.call('hset', job_clients_key, index, client)\n  redis.call('zincrby', client_running_key, weight, client)\n  redis.call('hincrby', client_num_queued_key, client, -1)\n  redis.call('zadd', client_last_registered_key, now, client)\n\n  local wait = math.max(nextRequest - now, 0)\n  local newNextRequest = now + wait + minTime\n\n  if reservoir == nil then\n    redis.call('hset', settings_key,\n      'nextRequest', newNextRequest\n    )\n  else\n    reservoir = reservoir - weight\n    redis.call('hmset', settings_key,\n      'reservoir', reservoir,\n      'nextRequest', newNextRequest\n    )\n  end\n\n  refresh_expiration(now, newNextRequest, groupTimeout)\n\n  return {true, wait, reservoir}\n\nelse\n  return {false}\nend\n","register_client.lua":"local queued = tonumber(ARGV[num_static_argv + 1])\n\n-- Could have been re-registered concurrently\nif not redis.call('zscore', client_last_seen_key, client) then\n  redis.call('zadd', client_running_key, 0, client)\n  redis.call('hset', client_num_queued_key, client, queued)\n  redis.call('zadd', client_last_registered_key, 0, client)\nend\n\nredis.call('zadd', client_last_seen_key, now, client)\n\nreturn {}\n","running.lua":"return process_tick(now, false)['running']\n","submit.lua":"local queueLength = tonumber(ARGV[num_static_argv + 1])\nlocal weight = tonumber(ARGV[num_static_argv + 2])\n\nlocal capacity = process_tick(now, false)['capacity']\n\nlocal settings = redis.call('hmget', settings_key,\n  'id',\n  'maxConcurrent',\n  'highWater',\n  'nextRequest',\n  'strategy',\n  'unblockTime',\n  'penalty',\n  'minTime',\n  'groupTimeout'\n)\nlocal id = settings[1]\nlocal maxConcurrent = tonumber(settings[2])\nlocal highWater = tonumber(settings[3])\nlocal nextRequest = tonumber(settings[4])\nlocal strategy = tonumber(settings[5])\nlocal unblockTime = tonumber(settings[6])\nlocal penalty = tonumber(settings[7])\nlocal minTime = tonumber(settings[8])\nlocal groupTimeout = tonumber(settings[9])\n\nif maxConcurrent ~= nil and weight > maxConcurrent then\n  return redis.error_reply('OVERWEIGHT:'..weight..':'..maxConcurrent)\nend\n\nlocal reachedHWM = (highWater ~= nil and queueLength == highWater\n  and not (\n    conditions_check(capacity, weight)\n    and nextRequest - now <= 0\n  )\n)\n\nlocal blocked = strategy == 3 and (reachedHWM or unblockTime >= now)\n\nif blocked then\n  local computedPenalty = penalty\n  if computedPenalty == nil then\n    if minTime == 0 then\n      computedPenalty = 5000\n    else\n      computedPenalty = 15 * minTime\n    end\n  end\n\n  local newNextRequest = now + computedPenalty + minTime\n\n  redis.call('hmset', settings_key,\n    'unblockTime', now + computedPenalty,\n    'nextRequest', newNextRequest\n  )\n\n  local clients_queued_reset = redis.call('hkeys', client_num_queued_key)\n  local queued_reset = {}\n  for i = 1, #clients_queued_reset do\n    table.insert(queued_reset, clients_queued_reset[i])\n    table.insert(queued_reset, 0)\n  end\n  redis.call('hmset', client_num_queued_key, unpack(queued_reset))\n\n  redis.call('publish', 'b_'..id, 'blocked:')\n\n  refresh_expiration(now, newNextRequest, groupTimeout)\nend\n\nif not blocked and not reachedHWM then\n  redis.call('hincrby', client_num_queued_key, client, 1)\nend\n\nreturn {reachedHWM, blocked, strategy}\n","update_settings.lua":"local args = {'hmset', settings_key}\n\nfor i = num_static_argv + 1, #ARGV do\n  table.insert(args, ARGV[i])\nend\n\nredis.call(unpack(args))\n\nprocess_tick(now, true)\n\nlocal groupTimeout = tonumber(redis.call('hget', settings_key, 'groupTimeout'))\nrefresh_expiration(0, 0, groupTimeout)\n\nreturn {}\n","validate_client.lua":"if not redis.call('zscore', client_last_seen_key, client) then\n  return redis.error_reply('UNKNOWN_CLIENT')\nend\n\nredis.call('zadd', client_last_seen_key, now, client)\n","validate_keys.lua":"if not (redis.call('exists', settings_key) == 1) then\n  return redis.error_reply('SETTINGS_KEY_NOT_FOUND')\nend\n"},Events$1,RedisConnection$1,Scripts$1,parser$2;function asyncGeneratorStep$3(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$3(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$3(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$3(i,s,n,a,o,"throw",e)}a(void 0)}))}}!function(e){var t,r,s;t={refs:(r=require$$0)["refs.lua"],validate_keys:r["validate_keys.lua"],validate_client:r["validate_client.lua"],refresh_expiration:r["refresh_expiration.lua"],process_tick:r["process_tick.lua"],conditions_check:r["conditions_check.lua"],get_time:r["get_time.lua"]},e.allKeys=function(e){return[`b_${e}_settings`,`b_${e}_job_weights`,`b_${e}_job_expirations`,`b_${e}_job_clients`,`b_${e}_client_running`,`b_${e}_client_num_queued`,`b_${e}_client_last_registered`,`b_${e}_client_last_seen`]},s={init:{keys:e.allKeys,headers:["process_tick"],refresh_expiration:!0,code:r["init.lua"]},group_check:{keys:e.allKeys,headers:[],refresh_expiration:!1,code:r["group_check.lua"]},register_client:{keys:e.allKeys,headers:["validate_keys"],refresh_expiration:!1,code:r["register_client.lua"]},blacklist_client:{keys:e.allKeys,headers:["validate_keys","validate_client"],refresh_expiration:!1,code:r["blacklist_client.lua"]},heartbeat:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!1,code:r["heartbeat.lua"]},update_settings:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!0,code:r["update_settings.lua"]},running:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!1,code:r["running.lua"]},queued:{keys:e.allKeys,headers:["validate_keys","validate_client"],refresh_expiration:!1,code:r["queued.lua"]},done:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!1,code:r["done.lua"]},check:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick","conditions_check"],refresh_expiration:!1,code:r["check.lua"]},submit:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick","conditions_check"],refresh_expiration:!0,code:r["submit.lua"]},register:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick","conditions_check"],refresh_expiration:!0,code:r["register.lua"]},free:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!0,code:r["free.lua"]},current_reservoir:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!1,code:r["current_reservoir.lua"]},increment_reservoir:{keys:e.allKeys,headers:["validate_keys","validate_client","process_tick"],refresh_expiration:!0,code:r["increment_reservoir.lua"]}},e.names=Object.keys(s),e.keys=function(e,t){return s[e].keys(t)},e.payload=function(e){var r;return r=s[e],Array.prototype.concat(t.refs,r.headers.map((function(e){return t[e]})),r.refresh_expiration?t.refresh_expiration:"",r.code).join("\n")}}(Scripts$2),parser$2=parser$5,Events$1=Events_1,Scripts$1=Scripts$2,RedisConnection$1=function(){class RedisConnection{constructor(options={}){parser$2.load(options,this.defaults,this),null==this.Redis&&(this.Redis=eval("require")("redis")),null==this.Events&&(this.Events=new Events$1(this)),this.terminated=!1,null==this.client&&(this.client=this.Redis.createClient(this.clientOptions)),this.subscriber=this.client.duplicate(),this.limiters={},this.shas={},this.ready=this.Promise.all([this._setup(this.client,!1),this._setup(this.subscriber,!0)]).then((()=>this._loadScripts())).then((()=>({client:this.client,subscriber:this.subscriber})))}_setup(e,t){return e.setMaxListeners(0),new this.Promise(((r,s)=>(e.on("error",(e=>this.Events.trigger("error",e))),t&&e.on("message",((e,t)=>{var r;return null!=(r=this.limiters[e])?r._store.onMessage(e,t):void 0})),e.ready?r():e.once("ready",r))))}_loadScript(e){return new this.Promise(((t,r)=>{var s;return s=Scripts$1.payload(e),this.client.multi([["script","load",s]]).exec(((s,n)=>null!=s?r(s):(this.shas[e]=n[0],t(n[0]))))}))}_loadScripts(){return this.Promise.all(Scripts$1.names.map((e=>this._loadScript(e))))}__runCommand__(e){var t=this;return _asyncToGenerator$3((function*(){return yield t.ready,new t.Promise(((r,s)=>t.client.multi([e]).exec_atomic((function(e,t){return null!=e?s(e):r(t[0])}))))}))()}__addLimiter__(e){return this.Promise.all([e.channel(),e.channel_client()].map((t=>new this.Promise(((r,s)=>{var n;return n=s=>{if(s===t)return this.subscriber.removeListener("subscribe",n),this.limiters[t]=e,r()},this.subscriber.on("subscribe",n),this.subscriber.subscribe(t)})))))}__removeLimiter__(e){var t=this;return this.Promise.all([e.channel(),e.channel_client()].map(function(){var e=_asyncToGenerator$3((function*(e){return t.terminated||(yield new t.Promise(((r,s)=>t.subscriber.unsubscribe(e,(function(t,n){return null!=t?s(t):n===e?r():void 0}))))),delete t.limiters[e]}));return function(t){return e.apply(this,arguments)}}()))}__scriptArgs__(e,t,r,s){var n;return n=Scripts$1.keys(e,t),[this.shas[e],n.length].concat(n,r,s)}__scriptFn__(e){return this.client.evalsha.bind(this.client)}disconnect(e=!0){var t,r,s,n;for(t=0,s=(n=Object.keys(this.limiters)).length;t<s;t++)r=n[t],clearInterval(this.limiters[r]._store.heartbeat);return this.limiters={},this.terminated=!0,this.client.end(e),this.subscriber.end(e),this.Promise.resolve()}}return RedisConnection.prototype.datastore="redis",RedisConnection.prototype.defaults={Redis:null,clientOptions:{},client:null,Promise:Promise,Events:null},RedisConnection}.call(void 0);var RedisConnection_1=RedisConnection$1,Events,IORedisConnection$1,Scripts,parser$1;function _slicedToArray$1(e,t){return _arrayWithHoles$1(e)||_iterableToArrayLimit$1(e,t)||_nonIterableRest$1()}function _nonIterableRest$1(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$1(e,t){var r=[],s=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(s=(a=o.next()).done)&&(r.push(a.value),!t||r.length!==t);s=!0);}catch(e){n=!0,i=e}finally{try{s||null==o.return||o.return()}finally{if(n)throw i}}return r}function _arrayWithHoles$1(e){if(Array.isArray(e))return e}function asyncGeneratorStep$2(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$2(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$2(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$2(i,s,n,a,o,"throw",e)}a(void 0)}))}}parser$1=parser$5,Events=Events_1,Scripts=Scripts$2,IORedisConnection$1=function(){class IORedisConnection{constructor(options={}){parser$1.load(options,this.defaults,this),null==this.Redis&&(this.Redis=eval("require")("ioredis")),null==this.Events&&(this.Events=new Events(this)),this.terminated=!1,null!=this.clusterNodes?(this.client=new this.Redis.Cluster(this.clusterNodes,this.clientOptions),this.subscriber=new this.Redis.Cluster(this.clusterNodes,this.clientOptions)):null!=this.client&&null==this.client.duplicate?this.subscriber=new this.Redis.Cluster(this.client.startupNodes,this.client.options):(null==this.client&&(this.client=new this.Redis(this.clientOptions)),this.subscriber=this.client.duplicate()),this.limiters={},this.ready=this.Promise.all([this._setup(this.client,!1),this._setup(this.subscriber,!0)]).then((()=>(this._loadScripts(),{client:this.client,subscriber:this.subscriber})))}_setup(e,t){return e.setMaxListeners(0),new this.Promise(((r,s)=>(e.on("error",(e=>this.Events.trigger("error",e))),t&&e.on("message",((e,t)=>{var r;return null!=(r=this.limiters[e])?r._store.onMessage(e,t):void 0})),"ready"===e.status?r():e.once("ready",r))))}_loadScripts(){return Scripts.names.forEach((e=>this.client.defineCommand(e,{lua:Scripts.payload(e)})))}__runCommand__(e){var t=this;return _asyncToGenerator$2((function*(){yield t.ready;var r=_slicedToArray$1(yield t.client.pipeline([e]).exec(),1),s=_slicedToArray$1(r[0],2);return s[0],s[1]}))()}__addLimiter__(e){return this.Promise.all([e.channel(),e.channel_client()].map((t=>new this.Promise(((r,s)=>this.subscriber.subscribe(t,(()=>(this.limiters[t]=e,r()))))))))}__removeLimiter__(e){var t=this;return[e.channel(),e.channel_client()].forEach(function(){var e=_asyncToGenerator$2((function*(e){return t.terminated||(yield t.subscriber.unsubscribe(e)),delete t.limiters[e]}));return function(t){return e.apply(this,arguments)}}())}__scriptArgs__(e,t,r,s){var n;return[(n=Scripts.keys(e,t)).length].concat(n,r,s)}__scriptFn__(e){return this.client[e].bind(this.client)}disconnect(e=!0){var t,r,s,n;for(t=0,s=(n=Object.keys(this.limiters)).length;t<s;t++)r=n[t],clearInterval(this.limiters[r]._store.heartbeat);return this.limiters={},this.terminated=!0,e?this.Promise.all([this.client.quit(),this.subscriber.quit()]):(this.client.disconnect(),this.subscriber.disconnect(),this.Promise.resolve())}}return IORedisConnection.prototype.datastore="ioredis",IORedisConnection.prototype.defaults={Redis:null,clientOptions:{},clusterNodes:null,client:null,Promise:Promise,Events:null},IORedisConnection}.call(void 0);var IORedisConnection_1=IORedisConnection$1,BottleneckError$1,IORedisConnection,RedisConnection,RedisDatastore,parser;function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){var r=[],s=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(s=(a=o.next()).done)&&(r.push(a.value),!t||r.length!==t);s=!0);}catch(e){n=!0,i=e}finally{try{s||null==o.return||o.return()}finally{if(n)throw i}}return r}function _arrayWithHoles(e){if(Array.isArray(e))return e}function asyncGeneratorStep$1(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator$1(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep$1(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep$1(i,s,n,a,o,"throw",e)}a(void 0)}))}}parser=parser$5,BottleneckError$1=BottleneckError_1,RedisConnection=RedisConnection_1,IORedisConnection=IORedisConnection_1,RedisDatastore=class{constructor(e,t,r){this.instance=e,this.storeOptions=t,this.originalId=this.instance.id,this.clientId=this.instance._randomIndex(),parser.load(r,r,this),this.clients={},this.capacityPriorityCounters={},this.sharedConnection=null!=this.connection,null==this.connection&&(this.connection="redis"===this.instance.datastore?new RedisConnection({Redis:this.Redis,clientOptions:this.clientOptions,Promise:this.Promise,Events:this.instance.Events}):"ioredis"===this.instance.datastore?new IORedisConnection({Redis:this.Redis,clientOptions:this.clientOptions,clusterNodes:this.clusterNodes,Promise:this.Promise,Events:this.instance.Events}):void 0),this.instance.connection=this.connection,this.instance.datastore=this.connection.datastore,this.ready=this.connection.ready.then((e=>(this.clients=e,this.runScript("init",this.prepareInitSettings(this.clearDatastore))))).then((()=>this.connection.__addLimiter__(this.instance))).then((()=>this.runScript("register_client",[this.instance.queued()]))).then((()=>{var e;return"function"==typeof(e=this.heartbeat=setInterval((()=>this.runScript("heartbeat",[]).catch((e=>this.instance.Events.trigger("error",e)))),this.heartbeatInterval)).unref&&e.unref(),this.clients}))}__publish__(e){var t=this;return _asyncToGenerator$1((function*(){return(yield t.ready).client.publish(t.instance.channel(),`message:${e.toString()}`)}))()}onMessage(e,t){var r=this;return _asyncToGenerator$1((function*(){var e,s,n,i,a,o,l,c,d,u;try{l=t.indexOf(":");var p=[t.slice(0,l),t.slice(l+1)];if(n=p[1],"capacity"===(u=p[0]))return yield r.instance._drainAll(n.length>0?~~n:void 0);if("capacity-priority"===u){var h=_slicedToArray(n.split(":"),3);return d=h[0],c=h[1],s=h[2],e=d.length>0?~~d:void 0,c===r.clientId?(i=yield r.instance._drainAll(e),o=null!=e?e-(i||0):"",yield r.clients.client.publish(r.instance.channel(),`capacity-priority:${o}::${s}`)):""===c?(clearTimeout(r.capacityPriorityCounters[s]),delete r.capacityPriorityCounters[s],r.instance._drainAll(e)):r.capacityPriorityCounters[s]=setTimeout(_asyncToGenerator$1((function*(){var t;try{return delete r.capacityPriorityCounters[s],yield r.runScript("blacklist_client",[c]),yield r.instance._drainAll(e)}catch(e){return t=e,r.instance.Events.trigger("error",t)}})),1e3)}if("message"===u)return r.instance.Events.trigger("message",n);if("blocked"===u)return yield r.instance._dropAllQueued()}catch(e){return a=e,r.instance.Events.trigger("error",a)}}))()}__disconnect__(e){return clearInterval(this.heartbeat),this.sharedConnection?this.connection.__removeLimiter__(this.instance):this.connection.disconnect(e)}runScript(e,t){var r=this;return _asyncToGenerator$1((function*(){return"init"!==e&&"register_client"!==e&&(yield r.ready),new r.Promise(((s,n)=>{var i,a;return i=[Date.now(),r.clientId].concat(t),r.instance.Events.trigger("debug",`Calling Redis script: ${e}.lua`,i),a=r.connection.__scriptArgs__(e,r.originalId,i,(function(e,t){return null!=e?n(e):s(t)})),r.connection.__scriptFn__(e)(...a)})).catch((s=>"SETTINGS_KEY_NOT_FOUND"===s.message?"heartbeat"===e?r.Promise.resolve():r.runScript("init",r.prepareInitSettings(!1)).then((()=>r.runScript(e,t))):"UNKNOWN_CLIENT"===s.message?r.runScript("register_client",[r.instance.queued()]).then((()=>r.runScript(e,t))):r.Promise.reject(s)))}))()}prepareArray(e){var t,r,s,n;for(s=[],t=0,r=e.length;t<r;t++)n=e[t],s.push(null!=n?n.toString():"");return s}prepareObject(e){var t,r,s;for(r in t=[],e)s=e[r],t.push(r,null!=s?s.toString():"");return t}prepareInitSettings(e){var t;return(t=this.prepareObject(Object.assign({},this.storeOptions,{id:this.originalId,version:this.instance.version,groupTimeout:this.timeout,clientTimeout:this.clientTimeout}))).unshift(e?1:0,this.instance.version),t}convertBool(e){return!!e}__updateSettings__(e){var t=this;return _asyncToGenerator$1((function*(){return yield t.runScript("update_settings",t.prepareObject(e)),parser.overwrite(e,e,t.storeOptions)}))()}__running__(){return this.runScript("running",[])}__queued__(){return this.runScript("queued",[])}__done__(){return this.runScript("done",[])}__groupCheck__(){var e=this;return _asyncToGenerator$1((function*(){return e.convertBool(yield e.runScript("group_check",[]))}))()}__incrementReservoir__(e){return this.runScript("increment_reservoir",[e])}__currentReservoir__(){return this.runScript("current_reservoir",[])}__check__(e){var t=this;return _asyncToGenerator$1((function*(){return t.convertBool(yield t.runScript("check",t.prepareArray([e])))}))()}__register__(e,t,r){var s=this;return _asyncToGenerator$1((function*(){var n,i,a,o=_slicedToArray(yield s.runScript("register",s.prepareArray([e,t,r])),3);return i=o[0],a=o[1],n=o[2],{success:s.convertBool(i),wait:a,reservoir:n}}))()}__submit__(e,t){var r=this;return _asyncToGenerator$1((function*(){var s,n,i,a,o;try{var l=_slicedToArray(yield r.runScript("submit",r.prepareArray([e,t])),3);return a=l[0],s=l[1],o=l[2],{reachedHWM:r.convertBool(a),blocked:r.convertBool(s),strategy:o}}catch(e){if(0===(n=e).message.indexOf("OVERWEIGHT")){var c=_slicedToArray(n.message.split(":"),3);throw c[0],t=c[1],i=c[2],new BottleneckError$1(`Impossible to add a job having a weight of ${t} to a limiter having a maxConcurrent setting of ${i}`)}throw n}}))()}__free__(e,t){var r=this;return _asyncToGenerator$1((function*(){return{running:yield r.runScript("free",r.prepareArray([e]))}}))()}};var RedisDatastore_1=RedisDatastore,BottleneckError,States;BottleneckError=BottleneckError_1,States=class{constructor(e){this.status=e,this._jobs={},this.counts=this.status.map((function(){return 0}))}next(e){var t,r;return r=(t=this._jobs[e])+1,null!=t&&r<this.status.length?(this.counts[t]--,this.counts[r]++,this._jobs[e]++):null!=t?(this.counts[t]--,delete this._jobs[e]):void 0}start(e){return this._jobs[e]=0,this.counts[0]++}remove(e){var t;return null!=(t=this._jobs[e])&&(this.counts[t]--,delete this._jobs[e]),null!=t}jobStatus(e){var t;return null!=(t=this.status[this._jobs[e]])?t:null}statusJobs(e){var t,r,s,n;if(null!=e){if((r=this.status.indexOf(e))<0)throw new BottleneckError(`status must be one of ${this.status.join(", ")}`);for(t in n=[],s=this._jobs)s[t]===r&&n.push(t);return n}return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce(((e,t,r)=>(e[this.status[r]]=t,e)),{})}};var States_1=States,DLList,Sync;function asyncGeneratorStep(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(s,n){var i=e.apply(t,r);function a(e){asyncGeneratorStep(i,s,n,a,o,"next",e)}function o(e){asyncGeneratorStep(i,s,n,a,o,"throw",e)}a(void 0)}))}}DLList=DLList_1,Sync=class{constructor(e,t){this.schedule=this.schedule.bind(this),this.name=e,this.Promise=t,this._running=0,this._queue=new DLList}isEmpty(){return 0===this._queue.length}_tryToRun(){var e=this;return _asyncToGenerator((function*(){var t,r,s,n,i,a,o;if(e._running<1&&e._queue.length>0){e._running++;var l=e._queue.shift();return o=l.task,t=l.args,i=l.resolve,n=l.reject,r=yield _asyncToGenerator((function*(){try{return a=yield o(...t),function(){return i(a)}}catch(e){return s=e,function(){return n(s)}}}))(),e._running--,e._tryToRun(),r()}}))()}schedule(e,...t){var r,s,n;return n=s=null,r=new this.Promise((function(e,t){return n=e,s=t})),this._queue.push({task:e,args:t,resolve:n,reject:s}),this._tryToRun(),r}};var Sync_1=Sync,version="2.19.5",require$$8={version:version},Group_1,hasRequiredGroup,Batcher_1,hasRequiredBatcher,Bottleneck_1,hasRequiredBottleneck;function requireGroup(){if(hasRequiredGroup)return Group_1;function e(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],s=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(s=(a=o.next()).done)&&(r.push(a.value),!t||r.length!==t);s=!0);}catch(e){n=!0,i=e}finally{try{s||null==o.return||o.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function t(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function r(e){return function(){var r=this,s=arguments;return new Promise((function(n,i){var a=e.apply(r,s);function o(e){t(a,n,i,o,l,"next",e)}function l(e){t(a,n,i,o,l,"throw",e)}o(void 0)}))}}var s,n,i,a,o,l;return hasRequiredGroup=1,l=parser$5,s=Events_1,a=RedisConnection_1,i=IORedisConnection_1,o=Scripts$2,n=function(){class t{constructor(e={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=e,l.load(this.limiterOptions,this.defaults,this),this.Events=new s(this),this.instances={},this.Bottleneck=requireBottleneck(),this._startAutoCleanup(),this.sharedConnection=null!=this.connection,null==this.connection&&("redis"===this.limiterOptions.datastore?this.connection=new a(Object.assign({},this.limiterOptions,{Events:this.Events})):"ioredis"===this.limiterOptions.datastore&&(this.connection=new i(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(e=""){var t;return null!=(t=this.instances[e])?t:(()=>{var t;return t=this.instances[e]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${e}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",t,e),t})()}deleteKey(e=""){var t=this;return r((function*(){var r,s;return s=t.instances[e],t.connection&&(r=yield t.connection.__runCommand__(["del",...o.allKeys(`${t.id}-${e}`)])),null!=s&&(delete t.instances[e],yield s.disconnect()),null!=s||r>0}))()}limiters(){var e,t,r,s;for(e in r=[],t=this.instances)s=t[e],r.push({key:e,limiter:s});return r}keys(){return Object.keys(this.instances)}clusterKeys(){var t=this;return r((function*(){var r,s,n,i,a,o,l;if(null==t.connection)return t.Promise.resolve(t.keys());for(a=[],r=null,l=`b_${t.id}-`.length,9;0!==r;){var c=e(yield t.connection.__runCommand__(["scan",null!=r?r:0,"match",`b_${t.id}-*_settings`,"count",1e4]),2);for(r=~~c[0],n=0,o=(s=c[1]).length;n<o;n++)i=s[n],a.push(i.slice(l,-9))}return a}))()}_startAutoCleanup(){var e,t=this;return clearInterval(this.interval),"function"==typeof(e=this.interval=setInterval(r((function*(){var e,r,s,n,i,a;for(r in i=Date.now(),n=[],s=t.instances){a=s[r];try{(yield a._store.__groupCheck__(i))?n.push(t.deleteKey(r)):n.push(void 0)}catch(t){e=t,n.push(a.Events.trigger("error",e))}}return n})),this.timeout/2)).unref?e.unref():void 0}updateSettings(e={}){if(l.overwrite(e,this.defaults,this),l.overwrite(e,e,this.limiterOptions),null!=e.timeout)return this._startAutoCleanup()}disconnect(e=!0){var t;if(!this.sharedConnection)return null!=(t=this.connection)?t.disconnect(e):void 0}}return t.prototype.defaults={timeout:3e5,connection:null,Promise:Promise,id:"group-key"},t}.call(void 0),Group_1=n}function requireBatcher(){return hasRequiredBatcher?Batcher_1:(hasRequiredBatcher=1,r=parser$5,t=Events_1,e=function(){class e{constructor(e={}){this.options=e,r.load(this.options,this.defaults,this),this.Events=new t(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise(((e,t)=>this._resolve=e))}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(e){var t;return this._arr.push(e),t=this._promise,this._arr.length===this.maxSize?this._flush():null!=this.maxTime&&1===this._arr.length&&(this._timeout=setTimeout((()=>this._flush()),this.maxTime)),t}}return e.prototype.defaults={maxTime:null,maxSize:null,Promise:Promise},e}.call(void 0),Batcher_1=e);var e,t,r}function requireBottleneck(){if(hasRequiredBottleneck)return Bottleneck_1;function e(e,t){return s(e)||function(e,t){var r=[],s=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(s=(a=o.next()).done)&&(r.push(a.value),!t||r.length!==t);s=!0);}catch(e){n=!0,i=e}finally{try{s||null==o.return||o.return()}finally{if(n)throw i}}return r}(e,t)||r()}function t(e){return s(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||r()}function r(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function s(e){if(Array.isArray(e))return e}function n(e,t,r,s,n,i,a){try{var o=e[i](a),l=o.value}catch(e){return void r(e)}o.done?t(l):Promise.resolve(l).then(s,n)}function i(e){return function(){var t=this,r=arguments;return new Promise((function(s,i){var a=e.apply(t,r);function o(e){n(a,s,i,o,l,"next",e)}function l(e){n(a,s,i,o,l,"throw",e)}o(void 0)}))}}hasRequiredBottleneck=1;var a,o,l,c,d,u,p,h,f,m=[].splice;return f=parser$5,d=Queues_1,l=Job_1,c=LocalDatastore_1,u=RedisDatastore_1,o=Events_1,p=States_1,h=Sync_1,a=function(){class r{constructor(e={},...t){var s,n;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(e,t),f.load(e,this.instanceDefaults,this),this._queues=new d(10),this._scheduled={},this._states=new p(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new o(this),this._submitLock=new h("submit",this.Promise),this._registerLock=new h("register",this.Promise),n=f.load(e,this.storeDefaults,{}),this._store=function(){if("redis"===this.datastore||"ioredis"===this.datastore||null!=this.connection)return s=f.load(e,this.redisStoreDefaults,{}),new u(this,n,s);if("local"===this.datastore)return s=f.load(e,this.localStoreDefaults,{}),new c(this,n,s);throw new r.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}.call(this),this._queues.on("leftzero",(()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.ref?e.ref():void 0})),this._queues.on("zero",(()=>{var e;return null!=(e=this._store.heartbeat)&&"function"==typeof e.unref?e.unref():void 0}))}_validateOptions(e,t){if(null==e||"object"!=typeof e||0!==t.length)throw new r.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(e){return this._store.__publish__(e)}disconnect(e=!0){return this._store.__disconnect__(e)}chain(e){return this._limiter=e,this}queued(e){return this._queues.queued(e)}clusterQueued(){return this._store.__queued__()}empty(){return 0===this.queued()&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(e){return this._states.jobStatus(e)}jobs(e){return this._states.statusJobs(e)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(e=1){return this._store.__check__(e)}_clearGlobalState(e){return null!=this._scheduled[e]&&(clearTimeout(this._scheduled[e].expiration),delete this._scheduled[e],!0)}_free(e,t,r,s){var n=this;return i((function*(){var t,i;try{if(i=(yield n._store.__free__(e,r.weight)).running,n.Events.trigger("debug",`Freed ${r.id}`,s),0===i&&n.empty())return n.Events.trigger("idle")}catch(e){return t=e,n.Events.trigger("error",t)}}))()}_run(e,t,r){var s,n,i;return t.doRun(),s=this._clearGlobalState.bind(this,e),i=this._run.bind(this,e,t),n=this._free.bind(this,e,t),this._scheduled[e]={timeout:setTimeout((()=>t.doExecute(this._limiter,s,i,n)),r),expiration:null!=t.options.expiration?setTimeout((function(){return t.doExpire(s,i,n)}),r+t.options.expiration):void 0,job:t}}_drainOne(e){return this._registerLock.schedule((()=>{var t,r,s,n,i;if(0===this.queued())return this.Promise.resolve(null);i=this._queues.getFirst();var a=s=i.first();return n=a.options,t=a.args,null!=e&&n.weight>e?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${n.id}`,{args:t,options:n}),r=this._randomIndex(),this._store.__register__(r,n.weight,n.expiration).then((({success:e,wait:a,reservoir:o})=>{var l;return this.Events.trigger("debug",`Drained ${n.id}`,{success:e,args:t,options:n}),e?(i.shift(),(l=this.empty())&&this.Events.trigger("empty"),0===o&&this.Events.trigger("depleted",l),this._run(r,s,a),this.Promise.resolve(n.weight)):this.Promise.resolve(null)})))}))}_drainAll(e,t=0){return this._drainOne(e).then((r=>{var s;return null!=r?(s=null!=e?e-r:e,this._drainAll(s,t+r)):this.Promise.resolve(t)})).catch((e=>this.Events.trigger("error",e)))}_dropAllQueued(e){return this._queues.shiftAll((function(t){return t.doDrop({message:e})}))}stop(e={}){var t,s;return e=f.load(e,this.stopDefaults),s=e=>{var t;return t=()=>{var t;return(t=this._states.counts)[0]+t[1]+t[2]+t[3]===e},new this.Promise(((e,r)=>t()?e():this.on("done",(()=>{if(t())return this.removeAllListeners("done"),e()}))))},t=e.dropWaitingJobs?(this._run=function(t,r){return r.doDrop({message:e.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule((()=>this._submitLock.schedule((()=>{var t,r,n;for(t in r=this._scheduled)n=r[t],"RUNNING"===this.jobStatus(n.job.options.id)&&(clearTimeout(n.timeout),clearTimeout(n.expiration),n.job.doDrop({message:e.dropErrorMessage}));return this._dropAllQueued(e.dropErrorMessage),s(0)}))))):this.schedule({priority:9,weight:0},(()=>s(1))),this._receive=function(t){return t._reject(new r.prototype.BottleneckError(e.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new r.prototype.BottleneckError("stop() has already been called")),t}_addToQueue(e){var t=this;return i((function*(){var s,n,i,a,o,l,c;s=e.args,a=e.options;try{var d=yield t._store.__submit__(t.queued(),a.weight);o=d.reachedHWM,n=d.blocked,c=d.strategy}catch(r){return i=r,t.Events.trigger("debug",`Could not queue ${a.id}`,{args:s,options:a,error:i}),e.doDrop({error:i}),!1}return n?(e.doDrop(),!0):o&&(null!=(l=c===r.prototype.strategy.LEAK?t._queues.shiftLastFrom(a.priority):c===r.prototype.strategy.OVERFLOW_PRIORITY?t._queues.shiftLastFrom(a.priority+1):c===r.prototype.strategy.OVERFLOW?e:void 0)&&l.doDrop(),null==l||c===r.prototype.strategy.OVERFLOW)?(null==l&&e.doDrop(),o):(e.doQueue(o,n),t._queues.push(e),yield t._drainAll(),o)}))()}_receive(e){return null!=this._states.jobStatus(e.options.id)?(e._reject(new r.prototype.BottleneckError(`A job with the same id already exists (id=${e.options.id})`)),!1):(e.doReceive(),this._submitLock.schedule(this._addToQueue,e))}submit(...r){var s,n,i,a,o,c,d,u,p;"function"==typeof r[0]?(c=t(r),n=c[0],r=c.slice(1),d=e(m.call(r,-1),1),s=d[0],a=f.load({},this.jobDefaults)):(a=(u=t(r))[0],n=u[1],r=u.slice(2),p=e(m.call(r,-1),1),s=p[0],a=f.load(a,this.jobDefaults));return o=(...e)=>new this.Promise((function(t,r){return n(...e,(function(...e){return(null!=e[0]?r:t)(e)}))})),(i=new l(o,r,a,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise)).promise.then((function(e){return"function"==typeof s?s(...e):void 0})).catch((function(e){return Array.isArray(e)?"function"==typeof s?s(...e):void 0:"function"==typeof s?s(e):void 0})),this._receive(i)}schedule(...e){var r,s,n;if("function"==typeof e[0]){var i=t(e);n=i[0],e=i.slice(1),s={}}else{var a=t(e);s=a[0],n=a[1],e=a.slice(2)}return r=new l(n,e,s,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(r),r.promise}wrap(e){var t,r;return t=this.schedule.bind(this),(r=function(...r){return t(e.bind(this),...r)}).withOptions=function(r,...s){return t(r,e,...s)},r}updateSettings(e={}){var t=this;return i((function*(){return yield t._store.__updateSettings__(f.overwrite(e,t.storeDefaults)),f.overwrite(e,t.instanceDefaults,t),t}))()}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(e=0){return this._store.__incrementReservoir__(e)}}return r.default=r,r.Events=o,r.version=r.prototype.version=require$$8.version,r.strategy=r.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},r.BottleneckError=r.prototype.BottleneckError=BottleneckError_1,r.Group=r.prototype.Group=requireGroup(),r.RedisConnection=r.prototype.RedisConnection=RedisConnection_1,r.IORedisConnection=r.prototype.IORedisConnection=IORedisConnection_1,r.Batcher=r.prototype.Batcher=requireBatcher(),r.prototype.jobDefaults={priority:5,weight:1,expiration:null,id:"<no-id>"},r.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:r.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},r.prototype.localStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:250},r.prototype.redisStoreDefaults={Promise:Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},r.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise:Promise},r.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},r}.call(void 0),Bottleneck_1=a}var lib=requireBottleneck(),Bottleneck=getDefaultExportFromCjs(lib);class DirectusError extends Error{constructor(e){super(e.statusText),this.name="Directus Migration Error",this.headers=e.headers,this.status=e.status,this.response=e,this.errors=[],this.message=e.statusText}formatError(){var e,t;if(0===this.errors.length)return`Directus Error: ${this.message} (Status: ${this.status})`;let r=`Directus Error: ${null==(e=this.errors[0])?void 0:e.message.trim()} (Status: ${this.status})`;return(null==(t=this.errors[0])?void 0:t.extensions)&&(r+=` ${JSON.stringify(this.errors[0].extensions)}`),r}async parseErrors(){try{const e=await this.response.json();e&&Array.isArray(e.errors)&&(this.errors=e.errors,this.message=this.formatError())}catch{}}}async function enhancedFetch(...e){const t=await fetch(...e);if(!t.ok){const e=new DirectusError(t);throw await e.parseErrors(),e}return t}async function initLimiter(){const e=new Bottleneck({maxConcurrent:2,minTime:100,reservoir:50,reservoirRefreshAmount:50,reservoirRefreshInterval:1e3,retryCount:3});return e.on("failed",(async(e,t)=>{var r,s;if(e instanceof DirectusError){const t=null==(r=e.headers)?void 0:r.get("Retry-After"),n=e.status;if(console.error(e.message),console.error(null==(s=e.errors[0])?void 0:s.message),429===n){const e=t?1e3*Number.parseInt(t,10):6e4;return console.warn(`Rate limited. Retrying after ${e}ms`),e}if(503===n){const e=t?1e3*Number.parseInt(t,10):5e3;return console.warn(`Server under pressure. Retrying after ${e}ms`),e}if(400===n||401===n)return}if(t.retryCount<3){const e=Math.min(1e3*2**t.retryCount,3e4);return console.warn(`Request failed. Retrying after ${e}ms`),e}console.warn("Max retries reached, not retrying further")})),e.on("retry",((e,t)=>{console.error(e),console.warn(`Retrying job (attempt ${t.retryCount+1})`)})),e.on("depleted",(e=>{e&&console.warn("Rate limit quota depleted. Requests will be queued.")})),e}const directusUserFields=["id","status","first_name","last_name","email","password","token","last_access","last_page","external_identifier","tfa_secret","auth_data","provider","role","language","avatar","title","description","location","tags","email_notifications"],directusRoleFields=["id","name","description","icon"],directusFileFields=["id","storage","filename_disk","filename_download","title","type","folder","uploaded_by","uploaded_on","modified_by","modified_on","charset","filesize","width","height","duration","embed","description","location","tags","metadata"],directusFolderFields=["id","name","parent"],directusFlowFields=["id","name","icon","color","description","status","trigger","accountability","options","operation","date_created","user_created"],directusOperationFields=["id","name","key","type","position_x","position_y","options","resolve","reject","flow","date_created","user_created"],directusDashboardFields=["id","name","icon","note","date_created","user_created","color"],directusPanelFields=["id","dashboard","name","icon","color","show_header","note","type","position_x","position_y","width","height","options","date_created","user_created"],directusSettingsFields=["id","project_name","project_url","project_color","project_logo","public_foreground","public_background","public_note","auth_login_attempts","auth_password_policy","storage_asset_transform","storage_asset_presets","custom_css","storage_default_folder","basemaps","mapbox_key","module_bar","project_descriptor","default_language","custom_aspect_ratios","public_favicon","default_appearance","default_theme_light","theme_light_overrides","default_theme_dark","theme_dark_overrides"],directusPolicyFields=["id","name","icon","description","ip_access","enforce_tfa","admin_access","app_access"],directusPresetFields=["bookmark","user","role","collection","search","layout","layout_query","layout_options","refresh_interval","filter","icon","color"];async function extractContent({res:e,services:t,accountability:r,schema:s,scope:n,folder:i,storage:a}){const{CollectionsService:o,FieldsService:l,FilesService:c,ItemsService:d}=t,u=new o({accountability:r,schema:s}),p=new l({accountability:r,schema:s}),h=new c({accountability:r,schema:s});try{e.write("* Fetching collections");const t=await u.readByQuery({limit:-1});e.write(" ...done\r\n\r\n"),e.write("* Fetching fields");const o=await getCollectionPrimaryKeys(p);e.write(" ...done\r\n\r\n"),e.write("* Fetching full data");const l=n.content?await loadFullData$1(t,d,o,r,s):[];e.write(" ..."),await saveToFile(l,"items_full_data",h,i,a),e.write("done\r\n\r\n"),e.write("* Fetching singletons");const c=n.content?await loadSingletons$1(t,d,r,s):[];e.write(" ..."),await saveToFile(c,"items_singleton",h,i,a),e.write("done\r\n\r\n"),e.write("* Fetching files");const f=n.content?await h.readByQuery({fields:directusFileFields,filter:{_or:[{folder:{_neq:i}},{folder:{_null:!0}}]},limit:-1}):[];return e.write(" ..."),await saveToFile(f,"files",h,i,a),e.write("done\r\n\r\n"),{collections:t,fullData:l,singletons:c,files:f,data_errors:null}}catch(e){return console.error(e),{collections:null,fullData:null,singletons:null,files:null,data_errors:e}}}async function extractData(e,t,r,s){let n=1;let i=[];const a=new t(e,{accountability:r,schema:s});for(;;)try{const e=await a.readByQuery({limit:100,page:n});if(0===e.length)break;for(const t of e)i.push(t);if(e.length<100)break;n++}catch(e){console.error(e),i=null;break}return i}async function extractSingleton(e,t,r,s){const n=new t(e,{accountability:r,schema:s});return await n.readSingleton()}async function loadFullData$1(e,t,r,s,n){const i=e.filter((e=>!e.collection.startsWith("directus_",0))).filter((e=>null!==e.schema)).filter((e=>{var t;return!(null==(t=e.meta)?void 0:t.singleton)}));return await Promise.all(i.map((async e=>{const i=e.collection;return{collection:i,primaryKeyField:getPrimaryKey(r,i),items:await extractData(i,t,s,n)}})))}async function loadSingletons$1(e,t,r,s){const n=e.filter((e=>!e.collection.startsWith("directus_",0))).filter((e=>{var t;return null==(t=e.meta)?void 0:t.singleton}));return await Promise.all(n.map((async e=>{const n=e.collection;return{collection:n,item:await extractSingleton(n,t,r,s)}})))}async function getCollectionPrimaryKeys(e){var t;const r=await e.readAll();if(!r)return;const s={};for(const e of r)e.schema&&(null==(t=e.schema)?void 0:t.is_primary_key)&&(s[e.collection]=e.field);return s}function getPrimaryKey(e,t){return e[t]||console.error(`Collection ${t} not found in collections map`),e[t]}async function extractSystemData({res:e,services:t,accountability:r,schema:s,scope:n,folder:i,storage:a}){const{AccessService:o,CommentsService:l,DashboardsService:c,ExtensionsService:d,FilesService:u,FlowsService:p,FoldersService:h,OperationsService:f,PanelsService:m,PermissionsService:_,PoliciesService:y,PresetsService:g,RolesService:v,SettingsService:b,SharesService:w,TranslationsService:E,UsersService:A}=t,R=new v({accountability:r,schema:s}),$=new y({accountability:r,schema:s}),T=new _({accountability:r,schema:s}),S=new A({accountability:r,schema:s}),x=new o({accountability:r,schema:s}),I=new h({accountability:r,schema:s}),k=new u({accountability:r,schema:s}),C=new c({accountability:r,schema:s}),O=new p({accountability:r,schema:s}),N=new m({accountability:r,schema:s}),P=new f({accountability:r,schema:s}),Z=new b({accountability:r,schema:s}),j=new E({accountability:r,schema:s}),D=new g({accountability:r,schema:s}),L=new d({accountability:r,schema:s}),F=new l({accountability:r,schema:s}),M=new w({accountability:r,schema:s});try{e.write(n.users?"* Fetching roles":"* Skipping roles\r\n\r\n");const t=n.users?await R.readByQuery({fields:directusRoleFields,limit:-1}):[];n.users&&(e.write(" ..."),await saveToFile(t,"roles",k,i,a),e.write("done\r\n\r\n")),e.write(n.users?"* Fetching policies":"* Skipping policies\r\n\r\n");const r=n.users?await $.readByQuery({fields:directusPolicyFields,limit:-1}):[];n.users&&(e.write(" ..."),await saveToFile(r,"policies",k,i,a),e.write("done\r\n\r\n")),e.write(n.users?"* Fetching permissions":"* Skipping permissions\r\n\r\n");const s=n.users?await T.readByQuery({limit:-1}):[];n.users&&(e.write(" ..."),await saveToFile(s,"permissions",k,i,a),e.write("done\r\n\r\n")),e.write(n.users?"* Fetching users":"* Skipping users\r\n\r\n");const o=n.users?await S.readByQuery({fields:directusUserFields,limit:-1}):[];n.users&&(e.write(" ..."),await saveToFile(o,"users",k,i,a),e.write("done\r\n\r\n")),e.write(n.users?"* Fetching access":"* Skipping access\r\n\r\n");const l=n.users?await x.readByQuery({limit:-1}):[];n.users&&(e.write(" ..."),await saveToFile(l,"access",k,i,a),e.write("done\r\n\r\n")),e.write(n.content?"* Fetching folders":"* Skipping folders\r\n\r\n");const c=n.content?await I.readByQuery({fields:directusFolderFields,filter:{id:{_neq:i}},limit:-1}):[];n.content&&(e.write(" ..."),await saveToFile(c,"folders",k,i,a),e.write("done\r\n\r\n")),e.write(n.dashboards?"* Fetching dashboards":"* Skipping dashboards\r\n\r\n");const d=n.dashboards?await C.readByQuery({fields:directusDashboardFields,limit:-1}):[];n.dashboards&&(e.write(" ..."),await saveToFile(d,"dashboards",k,i,a),e.write("done\r\n\r\n")),e.write(n.dashboards?"* Fetching panels":"* Skipping panels\r\n\r\n");const u=n.dashboards?await N.readByQuery({fields:directusPanelFields,limit:-1}):[];n.dashboards&&(e.write(" ..."),await saveToFile(u,"panels",k,i,a),e.write("done\r\n\r\n")),e.write(n.flows?"* Fetching flows":"* Skipping flows\r\n\r\n");const p=n.flows?await O.readByQuery({fields:directusFlowFields,limit:-1}):[];n.flows&&(e.write(" ..."),await saveToFile(p,"flows",k,i,a),e.write("done\r\n\r\n")),e.write(n.flows?"* Fetching operations":"* Skipping operations\r\n\r\n");const h=n.flows?await P.readByQuery({fields:directusOperationFields,limit:-1}):[];n.flows&&(e.write(" ..."),await saveToFile(h,"operations",k,i,a),e.write("done\r\n\r\n")),e.write("* Fetching settings");const f=await Z.readSingleton({fields:directusSettingsFields});e.write(" ..."),await saveToFile(f,"settings",k,i,a),e.write("done\r\n\r\n"),e.write("* Fetching translations");const m=await j.readByQuery({limit:-1});e.write(" ..."),await saveToFile(m,"translations",k,i,a),e.write("done\r\n\r\n"),e.write(n.presets?"* Fetching presets":"* Skipping presets");const _=n.presets?await D.readByQuery({fields:directusPresetFields,limit:-1}):[];n.presets&&(e.write(" ..."),await saveToFile(_,"presets",k,i,a),e.write("done\r\n\r\n")),e.write(n.extensions?"* Fetching extensions":"* Skipping extensions\r\n\r\n");const y=n.extensions?await L.readAll():[];n.extensions&&(e.write(" ..."),await saveToFile(y,"extensions",k,i,a),e.write("done\r\n\r\n")),e.write(n.comments?"* Fetching comments":"* Skipping comments");const g=n.comments?await F.readByQuery({limit:-1}):[];n.comments&&(e.write(" ..."),await saveToFile(g,"comments",k,i,a),e.write("done\r\n\r\n")),e.write(n.users?"* Fetching shares":"* Skipping shares\r\n\r\n");const v=n.users?await M.readByQuery({limit:-1}):[];return n.users&&(e.write(" ..."),await saveToFile(v,"shares",k,i,a),e.write("done\r\n\r\n")),{roles:t,policies:r,permissions:s,users:o,access:l,folders:c,dashboards:d,flows:p,panels:u,operations:h,settings:f,translations:m,presets:_,extensions:y,comments:g,shares:v,system_errors:null}}catch(e){return console.error(e),{roles:null,policies:null,permissions:null,users:null,access:null,folders:null,dashboards:null,flows:null,panels:null,operations:null,settings:null,translations:null,presets:null,extensions:null,comments:null,shares:null,system_errors:e}}}async function getRoleIds(e,t){var r;const s=null==(r=t.find((e=>"Administrator"===e.name)))?void 0:r.id,n=await e.request(Vm()),i=n.role;return{email:n.email,legacyAdminRoleId:s,newAdminRoleId:i}}async function migrateAccess({res:e,client:t,access:r,roles:s,dry_run:n=!1}){var i;if(!r||!s)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No access records found"}]};if(0===r.length)return e.write("* No access records to migrate\r\n\r\n"),{response:"Empty",name:"Access"};e.write(`* [Local] Using ${r.length} access records\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Access ...");const i=await t.request((()=>({method:"GET",params:{limit:-1},path:"/access"})));if(!i)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Access"}]};e.write("done\r\n\r\n");const{legacyAdminRoleId:a,newAdminRoleId:o}=s?await getRoleIds(t,s):{legacyAdminRoleId:null,newAdminRoleId:null},l=new Map(i.map((e=>[e.id,e]))),c=new Map(i.map((e=>[getCompositeKey(e),e])));e.write(`* [Remote] Uploading ${r.length} ${r.length>1?"Access record":"Access records"} `);for await(const s of r){if(l.has(s.id))continue;const r=getCompositeKey(s);c.has(r)||(null===s.role&&delete s.role,s.role===a&&(s.role=o),e.write("."),n||await t.request((()=>({body:JSON.stringify(s),method:"POST",path:"/access"}))),l.set(s.id,s),c.set(r,s))}return e.write(n?"skipped\r\n\r\n":"done\r\n\r\n"),e.write("* Access Migration Complete\r\n\r\n"),{response:"Success",name:"Access"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(i=r.errors[0])?void 0:i.message}\r\n\r\n`),r}}function getCompositeKey(e){var t,r;return`${null!=(t=e.role)?t:"null"}-${null!=(r=e.user)?r:"null"}-${e.policy}`}async function migrateComments({res:e,client:t,comments:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No comments found"}]};if(0===r.length)return e.write("* No comments to migrate\r\n\r\n"),{response:"Empty",name:"Comments"};e.write(`* [Local] Found ${r.length} comments\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Comments ...");const n=await t.request(ys({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Comments"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>e.id))),a=r.filter((e=>!i.has(e.id)));return e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Comments":"Comment"} `:"* No Comments to migrate\r\n\r\n"),a.length>0&&(e.write("."),s||await t.request(lt(a)),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")),e.write("* Comments Migration Complete\r\n\r\n"),{response:"Success",name:"Comments"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migrateDashboards({res:e,client:t,dashboards:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No dashboards found"}]};if(0===r.length)return e.write("* No dashboards to migrate\r\n\r\n"),{response:"Empty",name:"Insights"};e.write(`* [Local] Found ${r.length} dashboards\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Dashboards ...");const n=await t.request(fs({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Dashboards"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>e.id))),a=r.filter((e=>!i.has(e.id))).map((e=>{const t={...e};return delete t.panels,t}));return e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Dashboards":"Dashboard"} `:"* No Dashboards to migrate\r\n\r\n"),a.length>0&&(await Promise.all(a.map((async r=>{e.write("."),await t.request(Tt(r))}))),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n"),e.write("* Dashboard Migration Complete\r\n\r\n")),{response:"Success",name:"Insights"}}catch(t){console.error(t);const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}function chunkArray(e,t){return Array.from({length:Math.ceil(e.length/t)},((r,s)=>e.slice(s*t,(s+1)*t)))}const BATCH_SIZE=50;async function migrateData({res:e,client:t,fullData:r,singletons:s,dry_run:n=!1}){return r&&s?0===r.length&&0===s.length?(e.write("* No content to migrate\r\n\r\n"),{response:"Empty",name:"Content"}):(r&&(await loadSkeletonRecords(e,t,r,n),await loadFullData(e,t,r,n)),s&&await loadSingletons(e,t,s,n),{response:"Success",name:"Content"}):(e.write("* Couldn't read content from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No content found"}]})}async function loadSkeletonRecords(e,t,r,s){e.write("* Loading skeleton records\r\n\r\n"),await Promise.all(r.map((async r=>{const n=r.collection,i=r.primaryKeyField,a=r.items;e.write(`* [Remote] Fetching existing data for ${n} ...`);const o=await getExistingPrimaryKeys(e,t,n,i);e.write("done\r\n\r\n");const l=null==a?void 0:a.filter((e=>!o.has(e[i])));if(!l||0===l.length)return void e.write(`* Skipping ${n}: No new records to add\r\n\r\n`);const c=chunkArray(l,BATCH_SIZE).map((e=>e.map((e=>({[i]:e[i]})))));await Promise.all(c.map((async(r,i)=>{e.write(`    * [Remote] Uploading ${n} content ${i+1} of ${c.length}\r\n\r\n`),await uploadBatch(e,t,n,r,vt,s)}))),e.write(`* ${l.length} ${l.length>1?"records":"record"} ${s?"processed for":"uploaded to"} ${n}\r\n\r\n`)}))),e.write("* Skeleton records migrated\r\n\r\n\r\n\r\n")}async function getExistingPrimaryKeys(e,t,r,s){var n;const i=new Set;let a=1;for(e.write(`* [Remote] Fetching ${r} primary keys\r\n\r\n`);;)try{const e=await t.request(Gs(r,{fields:[s],limit:100,page:a}));if(0===e.length)break;for(const t of e)i.add(t[s]);if(e.length<100)break;a++}catch(t){console.error(t);const r=t;r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`);break}return e.write("done\r\n\r\n"),i}async function uploadBatch(e,t,r,s,n,i){var a;try{i||await t.request(n(r,s))}catch(t){console.error(t);const r=t;e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(a=r.errors[0])?void 0:a.message}\r\n\r\n`)}}async function loadFullData(e,t,r,s){e.write("* Updating records with full data\r\n\r\n"),await Promise.all(r.map((async r=>{const n=r.collection,i=r.items;if(!i)return;const a=chunkArray(i,BATCH_SIZE).map((e=>e.map((({user_created:e,user_updated:t,...r})=>r))));let o=0;await Promise.all(a.map((async r=>{o++,e.write(`* [Remote] Uploading ${n} content ${o} of ${a.length}\r\n\r\n`),await uploadBatch(e,t,n,r,Gn,s)})))}))),e.write("* All collections updated with full data\r\n\r\n")}async function loadSingletons(e,t,r,s){e.write("* Loading data for singleton collections .."),await Promise.all(r.map((async r=>{var n;const i=r.collection,a=r.item;try{const{user_created:r,user_updated:n,...o}=a;e.write("."),s||await t.request(vc(i,o))}catch(t){console.error(t);const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}))),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n"),e.write("* Loaded data for singleton collections\r\n\r\n")}async function installExtension(e,t){await t.request(Ju({body:JSON.stringify({extension:e.id,version:e.version}),method:"POST",path:"/extensions/registry/install"}))}async function migrateExtensions({res:e,client:t,extensions:r,dry_run:s=!1}){if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No extensions found"}]};if(0===r.length)return e.write("* No extensions to migrate\r\n\r\n"),{response:"Empty",name:"Extensions"};e.write(`* [Local] Found ${r.length} extensions\r\n\r\n`);try{const n=await t.request(Ts()),i=r.filter((e=>{var t;return"registry"===(null==(t=e.meta)?void 0:t.source)&&!e.bundle})),a=[...new Set(r.filter((e=>e.bundle)).map((e=>e.bundle)))],o=r.filter((e=>{var t;return"local"===(null==(t=e.meta)?void 0:t.source)})),l=r.filter((e=>{var t;return"registry"===(null==(t=e.meta)?void 0:t.source)&&!e.bundle&&!n.some((t=>"id"in t&&t.id===e.id))}));if(e.write(`* Found ${r.length} extensions total: ${i.length} registry extensions (including ${a.length} bundles), and ${o.length} local extensions`),e.write(r.length>0?`* [Remote] Installing ${r.length} ${r.length>1?"Extensions":"Extension"} `:"No Extensions to migrate\r\n\r\n"),l.length>0){const r=await Promise.allSettled(l.map((async e=>{var r,n,i,a;try{return s?`-- Skipped ${null==(i=e.schema)?void 0:i.name}`:(await installExtension({id:e.id,version:null==(r=e.meta)?void 0:r.folder},t),`-- Installed ${null==(n=e.schema)?void 0:n.name}`)}catch(t){return console.error(t),`-- Failed to install ${null==(a=e.schema)?void 0:a.name}`}})));for(const t of r)"fulfilled"===t.status&&e.write(`${t.value}\r\n\r\n`);e.write("* Finished installing extensions\r\n\r\n")}else e.write("* All extensions are already installed\r\n\r\n");return o.length>0&&(e.write(`* Note: ${o.length} local extensions need to be installed manually:\r\n\r\n`),o.forEach((t=>{"name"in t.schema&&e.write(`    * ${t.schema.name}\r\n\r\n`)}))),e.write("* Extension Migration Complete\r\n\r\n"),{response:"Success",name:"Extensions"}}catch{return e.write("* No extensions found or extensions file is empty. Skipping extension installation.\r\n\r\n"),{response:"Skipped",name:"Extensions"}}}var __accessCheck=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},__privateGet=(e,t,r)=>(__accessCheck(e,t,"read from private field"),r?r.call(e):t.get(e)),__privateAdd=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},__privateSet=(e,t,r,s)=>(__accessCheck(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),__privateMethod=(e,t,r)=>(__accessCheck(e,t,"access private method"),r),isFunction=e=>"function"==typeof e,isObject=e=>"object"==typeof e&&null!=e&&!Array.isArray(e),isAsyncIterable=e=>isObject(e)&&isFunction(e[Symbol.asyncIterator]),MAX_CHUNK_SIZE=65536;async function*clonePart(e){if(e.byteLength<=MAX_CHUNK_SIZE)return void(yield e);let t=0;for(;t<e.byteLength;){const r=Math.min(e.byteLength-t,MAX_CHUNK_SIZE),s=e.buffer.slice(t,t+r);t+=s.byteLength,yield new Uint8Array(s)}}async function*readStream(e){const t=e.getReader();for(;;){const{done:e,value:r}=await t.read();if(e)break;yield r}}async function*chunkStream(e){for await(const t of e)yield*clonePart(t)}var getStreamIterator=e=>{if(isAsyncIterable(e))return chunkStream(e);if(isFunction(e.getReader))return chunkStream(readStream(e));throw new TypeError("Unsupported data source: Expected either ReadableStream or async iterable.")},_parts,_type,_size;async function*consumeNodeBlob(e){let t=0;for(;t!==e.size;){const r=e.slice(t,Math.min(e.size,t+MAX_CHUNK_SIZE)),s=await r.arrayBuffer();t+=s.byteLength,yield new Uint8Array(s)}}async function*consumeBlobParts(e,t=!1){for(const r of e)ArrayBuffer.isView(r)?t?yield*clonePart(r):yield r:isFunction(r.stream)?yield*getStreamIterator(r.stream()):yield*consumeNodeBlob(r)}function*sliceBlob(e,t,r=0,s){s??=t;let n=r<0?Math.max(t+r,0):Math.min(r,t),i=s<0?Math.max(t+s,0):Math.min(s,t);const a=Math.max(i-n,0);let o=0;for(const t of e){if(o>=a)break;const e=ArrayBuffer.isView(t)?t.byteLength:t.size;if(n&&e<=n)n-=e,i-=e;else{let r;ArrayBuffer.isView(t)?(r=t.subarray(n,Math.min(e,i)),o+=r.byteLength):(r=t.slice(n,Math.min(e,i)),o+=r.size),i-=e,n=0,yield r}}}var _Blob=class e{constructor(t=[],r={}){if(__privateAdd(this,_parts,[]),__privateAdd(this,_type,""),__privateAdd(this,_size,0),r??={},"object"!=typeof t||null===t)throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");if(!isFunction(t[Symbol.iterator]))throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");if("object"!=typeof r&&!isFunction(r))throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");const s=new TextEncoder;for(const r of t){let t;t=ArrayBuffer.isView(r)?new Uint8Array(r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)):r instanceof ArrayBuffer?new Uint8Array(r.slice(0)):r instanceof e?r:s.encode(String(r)),__privateSet(this,_size,__privateGet(this,_size)+(ArrayBuffer.isView(t)?t.byteLength:t.size)),__privateGet(this,_parts).push(t)}const n=void 0===r.type?"":String(r.type);__privateSet(this,_type,/^[\x20-\x7E]*$/.test(n)?n:"")}static[Symbol.hasInstance](e){return Boolean(e&&"object"==typeof e&&isFunction(e.constructor)&&(isFunction(e.stream)||isFunction(e.arrayBuffer))&&/^(Blob|File)$/.test(e[Symbol.toStringTag]))}get type(){return __privateGet(this,_type)}get size(){return __privateGet(this,_size)}slice(t,r,s){return new e(sliceBlob(__privateGet(this,_parts),this.size,t,r),{type:s})}async text(){const e=new TextDecoder;let t="";for await(const r of consumeBlobParts(__privateGet(this,_parts)))t+=e.decode(r,{stream:!0});return t+=e.decode(),t}async arrayBuffer(){const e=new Uint8Array(this.size);let t=0;for await(const r of consumeBlobParts(__privateGet(this,_parts)))e.set(r,t),t+=r.length;return e.buffer}stream(){const e=consumeBlobParts(__privateGet(this,_parts),!0);return new ReadableStream({async pull(t){const{value:r,done:s}=await e.next();if(s)return queueMicrotask((()=>t.close()));t.enqueue(r)},async cancel(){await e.return()}})}get[Symbol.toStringTag](){return"Blob"}};_parts=new WeakMap,_type=new WeakMap,_size=new WeakMap;var Blob$1=_Blob;Object.defineProperties(Blob$1.prototype,{type:{enumerable:!0},size:{enumerable:!0},slice:{enumerable:!0},stream:{enumerable:!0},text:{enumerable:!0},arrayBuffer:{enumerable:!0}});var isBlob=e=>e instanceof Blob$1,_name,_lastModified,File=class extends Blob$1{constructor(e,t,r={}){if(super(e,r),__privateAdd(this,_name,void 0),__privateAdd(this,_lastModified,0),arguments.length<2)throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);__privateSet(this,_name,String(t));const s=void 0===r.lastModified?Date.now():Number(r.lastModified);Number.isNaN(s)||__privateSet(this,_lastModified,s)}static[Symbol.hasInstance](e){return e instanceof Blob$1&&"File"===e[Symbol.toStringTag]&&"string"==typeof e.name}get name(){return __privateGet(this,_name)}get webkitRelativePath(){return""}get lastModified(){return __privateGet(this,_lastModified)}get[Symbol.toStringTag](){return"File"}};_name=new WeakMap,_lastModified=new WeakMap;var isFile=e=>e instanceof File,_entries,_setEntry,setEntry_fn,FormData=class{constructor(){__privateAdd(this,_setEntry),__privateAdd(this,_entries,new Map)}static[Symbol.hasInstance](e){if(!e)return!1;const t=e;return Boolean(isFunction(t.constructor)&&"FormData"===t[Symbol.toStringTag]&&isFunction(t.append)&&isFunction(t.set)&&isFunction(t.get)&&isFunction(t.getAll)&&isFunction(t.has)&&isFunction(t.delete)&&isFunction(t.entries)&&isFunction(t.values)&&isFunction(t.keys)&&isFunction(t[Symbol.iterator])&&isFunction(t.forEach))}append(e,t,r){__privateMethod(this,_setEntry,setEntry_fn).call(this,{name:e,fileName:r,append:!0,rawValue:t,argsLength:arguments.length})}set(e,t,r){__privateMethod(this,_setEntry,setEntry_fn).call(this,{name:e,fileName:r,append:!1,rawValue:t,argsLength:arguments.length})}get(e){const t=__privateGet(this,_entries).get(String(e));return t?t[0]:null}getAll(e){const t=__privateGet(this,_entries).get(String(e));return t?t.slice():[]}has(e){return __privateGet(this,_entries).has(String(e))}delete(e){__privateGet(this,_entries).delete(String(e))}*keys(){for(const e of __privateGet(this,_entries).keys())yield e}*entries(){for(const e of this.keys()){const t=this.getAll(e);for(const r of t)yield[e,r]}}*values(){for(const[,e]of this)yield e}[Symbol.iterator](){return this.entries()}forEach(e,t){for(const[r,s]of this)e.call(t,s,r,this)}get[Symbol.toStringTag](){return"FormData"}};
/*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank */
async function migrateFiles({res:e,client:t,service:r,files:s,dry_run:n=!1}){var i;if(!s)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No files found"}]};if(0===s.length)return e.write("* No files to migrate\r\n\r\n"),{response:"Empty",name:"Files"};e.write(`* [Local] Found ${s.length} files\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Files ...");const i=await t.request(js({fields:["id","filename_disk"],limit:-1}));if(!i)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Files"}]};e.write("done\r\n\r\n");const a=new Set(i.map((e=>e.id))),o=new Set(i.map((e=>e.filename_disk))),l=s.filter((e=>!a.has(e.id)&&!o.has(e.filename_disk)));return e.write(l.length>0?`* [Remote] Uploading ${l.length} ${l.length>1?"Files":"File"}\r\n\r\n`:"* No Files to migrate\r\n\r\n"),await Promise.all(l.map((async(s,i)=>{const a=s.filename_disk,{stream:o,stat:c}=await r.getAsset(s.id);if(c.size>0)if(s.type){const r=await createTmpFile().catch((()=>null));if(r){await appendFile(r.path,o);const d=new Blob([readFileSync(r.path)],{type:s.type}),u=new FormData;u.append("id",s.id),s.title&&u.append("title",s.title),s.description&&u.append("description",s.description),s.folder&&u.append("folder",s.folder),u.append("file",d,a),e.write(`* [Remote] ${a} ${c.size} bytes [${i+1}/${l.length}]\r\n\r\n`),n||await t.request(bt(u)),r.cleanup().catch((()=>{e.write(`* Failed to cleanup temporary import file (${r.path})`)}))}else e.write(`* [Remote] Error: Couldn't write ${a} to disk [${i+1}/${l.length}]\r\n\r\n`)}else e.write(`* [Remote] Skipped ${a} [${i+1}/${l.length}]\r\n\r\n`)}))),{response:"Success",name:"Files"}}catch(t){console.error(t);const r=t;return r.errors&&r.errors.length>0&&e.write(`${null==(i=r.errors[0])?void 0:i.message}\r\n\r\n`),r}}async function migrateOperations({res:e,client:t,operations:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No operations found"}]};if(0===r.length)return e.write("* No operations to migrate\r\n\r\n"),{response:"Empty",name:"Operations"};e.write(`* [Local] Found ${r.length} operations\r\n\r\n`);try{const n=r.map((e=>{const t={...e};return delete t.reject,delete t.resolve,t}));e.write(n.length>0?`* [Remote] Uploading ${n.length} ${n.length>1?"Operations":"Operation"} ...`:"* No Operations to migrate\r\n\r\n"),s||await t.request(Kt(n)),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n");const i=await Promise.allSettled(r.map((e=>t.request(Xn(e.id,{reject:e.reject,resolve:e.resolve})))));for(const[t,r]of i.entries())"rejected"===r.status&&e.write(`* Error on Operation ${t}: ${r.reason}`);return e.write("* Operation Migration Complete\r\n\r\n"),{response:"Success",name:"Operations"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migrateFlows({res:e,client:t,flows:r,operations:s,dry_run:n=!1}){var i;if(!r||!s)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No flows found"}]};if(0===r.length)return e.write("* No flows to migrate\r\n\r\n"),{response:"Empty",name:"Flows"};if(0===s.length)return e.write("* No operations to migrate\r\n\r\n"),{response:"Empty",name:"Operations"};e.write(`* [Local] Found ${r.length} flows\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Flows ...");const i=await t.request(As({limit:-1}));if(!i)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Flows"}]};e.write("done\r\n\r\n");const a=new Set(i.map((e=>e.id))),o=r.filter((e=>!a.has(e.id)));if(e.write(o.length>0?`* [Remote] Uploading ${o.length} ${o.length>1?"Flows":"Flow"} `:"* No Flows to migrate\r\n\r\n"),o.length>0){const r=await Promise.allSettled(o.map((r=>(e.write("."),n?null:t.request(jt(r))))));e.write(n?"skipped\r\n\r\n":"done\r\n\r\n");const i=new Set;for(const[t,s]of r.entries())"fulfilled"===s.status&&o[t]?i.add(o[t].id):"reason"in s&&e.write(`* [Error] ${s.reason}`);const a=s.filter((e=>i.has(e.flow)));await migrateOperations({res:e,client:t,operations:a,dry_run:n})}return e.write("* Flows Migration Complete\r\n\r\n"),{response:"Success",name:"Flows"}}catch(t){const r=t;return r.errors&&r.errors.length>0&&e.write(`${null==(i=r.errors[0])?void 0:i.message}\r\n\r\n`),r}}async function migrateFolders({res:e,client:t,folders:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No folders found"}]};if(0===r.length)return e.write("* No folders to migrate\r\n\r\n"),{response:"Empty",name:"Folders"};e.write(`* [Local] Found ${r.length} folders\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Folders ...");const n=await t.request(Us({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Folders"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>e.id))),a=r.filter((e=>!i.has(e.id)));if(e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Folders":"Folder"} `:"* No Folders to migrate\r\n\r\n"),a.length>0){const r=a.map((e=>({id:e.id,name:e.name})));e.write("."),await t.request(Et(r)),await Promise.all(a.map((async r=>{const{id:s,...n}=r;e.write("."),await t.request(Un(s,n))}))),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")}return e.write("* Folder Migration Complete\r\n\r\n"),{response:"Success",name:"Folders"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migratePanels({res:e,client:t,panels:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No panels found"}]};if(0===r.length)return e.write("* No panels to migrate\r\n\r\n"),{response:"Empty",name:"Panels"};e.write(`* [Local] Found ${r.length} panels\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Panels ...");const n=await t.request(Ys({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"Issue Fetching Panels"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>e.id))),a=r.filter((e=>!i.has(e.id)));return e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Panels":"Panel"} `:"* No Panels to migrate\r\n\r\n"),a.length>0&&(await Promise.all(a.map((async r=>{e.write("."),await t.request(_t(r))}))),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n"),e.write("* Panel Migration Complete\r\n\r\n")),{response:"Success",name:"Panels"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migratePermissions({res:e,client:t,permissions:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No permissions found"}]};if(0===r.length)return e.write("* No permissions to migrate\r\n\r\n"),{response:"Empty",name:"Permissions"};e.write(`* [Local] Found ${r.length} permissions\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Permissions ...");const n=await t.request(rm({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"No Permissions found"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>`${e.collection}:${e.action}:${e.policy}`))),a=r.filter((e=>!i.has(`${e.collection}:${e.action}:${e.policy}`)));if(e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Permissions":"Permission"} `:"* No Permissions to migrate\r\n\r\n"),a.length>0){for await(const r of a)e.write("."),s||await t.request(Bt(r));e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")}return e.write("* Permission Migration Complete\r\n\r\n"),{response:"Success",name:"Permissions"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migratePolicies({res:e,client:t,policies:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No policies found"}]};if(0===r.length)return e.write("* No policies to migrate\r\n\r\n"),{response:"Empty",name:"Policies"};e.write(`* [Local] Found ${r.length} policies\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Policies ...");const n=await t.request(nm({limit:-1}));if(!n)return{name:"Directus Error",status:404,errors:[{message:"No Policies found"}]};e.write("done\r\n\r\n");const i=new Set(n.map((e=>e.id))),a="abf8a154-5b1c-4a46-ac9c-7300570f4f17",o=r.filter((e=>e.id!==a));if(e.write(o.length>0?`* [Remote] Uploading ${o.length} ${o.length>1?"Policies":"Policy"} `:"* No Policies to migrate\r\n\r\n"),o.length>0){const r=[];for await(const n of o)i.has(n.id)?r.push(n.name):(e.write("."),s||await t.request(Xt(n)),i.add(n.id));e.write(s?"skipped\r\n\r\n":"done\r\n\r\n"),r.forEach((t=>{e.write(`* Duplicate ID for ${t} - skipped\r\n\r\n`)}))}return e.write("* Policy Migration Complete\r\n\r\n"),{response:"Success",name:"Policies"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migratePresets({res:e,client:t,presets:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No presets found"}]};if(0===r.length)return e.write("* No presets to migrate\r\n\r\n"),{response:"Empty",name:"Presets"};e.write(`* [Local] Found ${r.length} presets\r\n\r\n`);try{e.write(r.length>0?`* [Remote] Uploading ${r.length} ${r.length>1?"Presets":"Preset"} `:"* No Presets to migrate\r\n\r\n");const n=r.map((e=>{delete e.id;const t={...e};return t.user=null,t}));return n.length>0?(e.write("."),s||await t.request(Zt(n)),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")):e.write("* No new presets to create\r\n\r\n"),e.write("* Preset Migration Complete\r\n\r\n"),{response:"Success",name:"Presets"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migrateRoles({res:e,client:t,roles:r,dry_run:s}){if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No roles found"}]};if(0===r.length)return e.write("* No roles to migrate\r\n\r\n"),{response:"Empty",name:"Roles"};e.write(`* [Local] Found ${r.length} roles\r\n\r\n`);const{legacyAdminRoleId:n,newAdminRoleId:i}=await getRoleIds(t,r);e.write("* [Remote] Fetching Existing Roles ...");const a=await t.request(Om({limit:-1}));if(!a)return{name:"Directus Error",status:404,errors:[{message:"No Roles found"}]};e.write("done\r\n\r\n");const o=new Set(a.map((e=>e.id))),l=new Set(a.map((e=>e.name.toLowerCase()))),c=r.filter((e=>"Administrator"!==e.name)).filter((e=>!l.has(e.name.toLowerCase()))).map((e=>{const t={...e};return delete t.users,delete t.parent,t})),d=[];if(e.write(c.length>0?`* [Remote] Uploading ${c.length} ${c.length>1?"Roles":"Role"} `:"* No Roles to migrate\r\n\r\n"),c.length>0){for await(const r of c)try{if(o.has(r.id))continue;e.write("."),s||await t.request(sr(r)),o.add(r.id),l.add(r.name.toLowerCase())}catch(e){d.push(e)}e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")}const u=r.filter((e=>null!==e.parent));if(e.write(u.length>0?`* [Remote] Updating ${u.length} Roles with parents `:"* No Roles to update\r\n\r\n"),u.length>0){for await(const r of u)try{r.parent===n&&(r.parent=i);const a={parent:r.parent};e.write("."),s||await t.request(Dc(r.id,a))}catch(e){d.push(e)}e.write(s?"skipped\r\n\r\n":"done\r\n\r\n")}return e.write("* Roles Migration Complete\r\n\r\n"),d.forEach((t=>{var r;e.write(`${null==(r=t.errors[0])?void 0:r.message}\r\n\r\n`)})),d.length>0?{name:"Roles Migration Error",errors:d.map((e=>e.errors[0]))}:{response:"Success",name:"Roles"}}async function migrateSchema({res:e,client:t,schema:r,dry_run:s=!1,force:n=!1}){var i;try{e.write("1. Comparing Schemas ...");const i=n?await t.request((()=>({body:JSON.stringify(r),method:"POST",path:"/schema/diff?force=true"}))):await t.request(wi(r));return"hash"in i?(e.write("done\r\n\r\n"),e.write("2. Applying Schemas ..."),s?e.write("skipped\r\n\r\n"):(await(n?t.request((()=>({body:JSON.stringify(i),method:"POST",path:"/schema/apply?force=true"}))):t.request(Fi(i))),e.write("done\r\n\r\n"))):e.write("match\r\n\r\n"),i}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(i=r.errors[0])?void 0:i.message}\r\n\r\n`),r}}async function checkSchema({client:e,schema:t}){try{return await e.request(wi(t))}catch(e){return e}}function isPlainObject(e){if(null===e||"object"!=typeof e)return!1;const t=Object.getPrototypeOf(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&(!(Symbol.iterator in e)&&(!(Symbol.toStringTag in e)||"[object Module]"===Object.prototype.toString.call(e)))}function _defu(e,t,r=".",s){if(!isPlainObject(t))return _defu(e,{},r,s);const n=Object.assign({},t);for(const t in e){if("__proto__"===t||"constructor"===t)continue;const i=e[t];null!=i&&(s&&s(n,t,i,r)||(Array.isArray(i)&&Array.isArray(n[t])?n[t]=[...i,...n[t]]:isPlainObject(i)&&isPlainObject(n[t])?n[t]=_defu(i,n[t],(r?`${r}.`:"")+t.toString(),s):n[t]=i))}return n}function createDefu(e){return(...t)=>t.reduce(((t,r)=>_defu(t,r,"",e)),{})}_entries=new WeakMap,_setEntry=new WeakSet,setEntry_fn=function({name:e,rawValue:t,append:r,fileName:s,argsLength:n}){const i=r?"append":"set";if(n<2)throw new TypeError(`Failed to execute '${i}' on 'FormData': 2 arguments required, but only ${n} present.`);let a;if(e=String(e),isFile(t))a=void 0===s?t:new File([t],s,{type:t.type,lastModified:t.lastModified});else if(isBlob(t))a=new File([t],void 0===s?"blob":s,{type:t.type});else{if(s)throw new TypeError(`Failed to execute '${i}' on 'FormData': parameter 2 is not of type 'Blob'.`);a=String(t)}const o=__privateGet(this,_entries).get(e);o&&r?o.push(a):__privateGet(this,_entries).set(e,[a])};const customDefu=createDefu(((e,t,r)=>Array.isArray(e[t])&&Array.isArray(r)?(e[t]=mergeArrays(t,e[t],r),!0):"string"==typeof e[t]&&"string"==typeof r?(e[t]=mergeJsonStrings(e[t],r),!0):void 0));function mergeArrays(e,t,r){const s={basemaps:["key"],custom_aspect_ratios:["key"],module_bar:["id","type"],storage_asset_presets:["key"]}[e];return s?t.concat(r.filter((e=>!t.some((t=>s.every((r=>t[r]===e[r]))))))):[...new Set([...t,...r])]}function mergeJsonStrings(e,t){try{return JSON.stringify(customDefu(JSON.parse(e),JSON.parse(t)))}catch{return t}}async function migrateSettings({res:e,client:t,settings:r,dry_run:s=!1}){var n;e.write("* [Local] Loading Settings\r\n\r\n");try{const n=await t.request(Em()),i=customDefu(n,r);return s||await t.request(Pc(i)),e.write("* Settings Migration Complete\r\n\r\n"),{response:"Success",name:"Settings"}}catch(t){console.error(t);const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migrateTranslations({res:e,client:t,translations:r,dry_run:s=!1}){var n;if(!r)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No translations found"}]};if(0===r.length)return e.write("* No Translations to migrate\r\n\r\n"),{response:"Empty",name:"Translations"};e.write(`* [Local] Found ${r.length} translations\r\n\r\n`);try{const n=await t.request(Gm({limit:-1})),i=new Set(n.map((e=>`${e.language}_${e.key}`))),a=r.filter((e=>{const t=`${e.language}_${e.key}`;return!i.has(t)}));return e.write(a.length>0?`* [Remote] Uploading ${a.length} ${a.length>1?"Translations":"Translation"} `:"* No Translations to migrate\r\n\r\n"),a.length>0&&(e.write("."),s||await t.request(pr(a))),e.write(s?"skipped\r\n\r\n":"done\r\n\r\n"),e.write("* Translations Migration Complete\r\n\r\n"),{response:"Success",name:"Translations"}}catch(t){console.error(t);const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(n=r.errors[0])?void 0:n.message}\r\n\r\n`),r}}async function migrateUsers({res:e,client:t,users:r,roles:s,dry_run:n=!1}){var i;if(!r||!s)return e.write("* Couldn't read data from extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No users found"}]};if(0===r.length)return e.write("* No users to migrate\r\n\r\n"),{response:"Empty",name:"Users"};if(0===s.length)return e.write("* No roles found in the extract\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No roles found"}]};e.write(`* [Local] Found ${r.length} users\r\n\r\n`);try{e.write("* [Remote] Fetching Existing Roles for users ...");const{legacyAdminRoleId:i,newAdminRoleId:a}=await getRoleIds(t,s),o=await t.request(Hm({limit:-1}));if(!o)return{name:"Directus Error",status:404,errors:[{message:"No Users found in destination"}]};e.write("done\r\n\r\n");const l=r.map((e=>{const t=e.role===i;return e.role=t?a:e.role,delete e.last_page,delete e.token,delete e.policies,delete e.password,e}));if(e.write(l.length>0?`* [Remote] Uploading ${l.length} ${l.length>1?"Users":"User"} `:"* No Users to migrate\r\n\r\n"),l.length>0){for await(const r of l){const s=o&&Array.isArray(o)?o.find((e=>e.id===r.id)):void 0,i=o&&Array.isArray(o)?o.find((e=>e.email===r.email)):void 0;s||(i&&delete r.email,null===r.email&&delete r.email,e.write("."),n||await t.request(dr(r)))}e.write(n?"skipped\r\n\r\n":"done\r\n\r\n")}return e.write("* User Migration Complete\r\n\r\n"),{response:"Success",name:"Users"}}catch(t){const r=t;return e.write("error\r\n\r\n"),r.errors&&r.errors.length>0&&e.write(`${null==(i=r.errors[0])?void 0:i.message}\r\n\r\n`),r}}async function updateRequiredFields({res:e,client:t,service:r,collections:s,dry_run:n=!1,task:i}){var a;const o=await r.readAll();if(!o||0===o.length)return e.write("* No fields to update\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No fields found"}]};if(!s||0===s.length)return e.write("* No collections found\r\n\r\n"),{name:"Directus Error",status:404,errors:[{message:"No collections found"}]};const l=s.filter((e=>!e.collection.startsWith("directus_"))),c=[];for await(const r of l){const s=o.filter((e=>{var t,s,n,i;return e.collection===r.collection&&!1===(null==(t=e.schema)?void 0:t.is_primary_key)&&(!0===(null==(s=e.meta)?void 0:s.required)||!1===(null==(n=e.schema)?void 0:n.is_nullable)||!0===(null==(i=e.schema)?void 0:i.is_unique))})).map((e=>"remove"===i?removeRequiredorIsNullable(e):e));e.write(`* [Remote] Updating ${s.length} fields in ${r.collection}\r\n\r\n`);for await(const r of s)try{e.write(`    * [Remote] Updating ${r.field} meta and schema\r\n\r\n`),n||await t.request(Cn(r.collection,r.field,{meta:{...r.meta},schema:{...r.schema}}))}catch(t){const r=t;r.errors&&r.errors.length>0&&e.write(`${null==(a=r.errors[0])?void 0:a.message}\r\n\r\n`),c.push(r)}}return c.length>0?{name:"Required Fields Error",errors:c.map((e=>e.errors[0]))}:{response:"Success",name:"Required Fields"}}function removeRequiredorIsNullable(e){var t,r,s;return!0===(null==(t=e.meta)?void 0:t.required)&&(e.meta.required=!1),!1===(null==(r=e.schema)?void 0:r.is_nullable)&&(e.schema.is_nullable=!0),!0===(null==(s=e.schema)?void 0:s.is_unique)&&(e.schema.is_unique=!1),e}const icon='<span class="icon"><i></i></span>',spinner='<div class="progress-circular"><svg class="circle indeterminate" viewBox="0 0 30 30"><path class="circle-background" d="M12.5,0A12.5,12.5,0,1,1,0,12.5,12.5,12.5,0,0,1,12.5,0Z" transform="translate(2.5 2.5)"></path><path class="circle-path" d="M12.5,0A12.5,12.5,0,1,1,0,12.5,12.5,12.5,0,0,1,12.5,0Z" transform="translate(2.5 2.5)" style="stroke-dasharray: 54.95, 78.5;"></path></svg></div>';var e0=defineEndpoint({id:"migration",handler:(e,{env:t,services:r,database:s,getSchema:n})=>{const{AssetsService:i,FieldsService:a,FilesService:o,FoldersService:l,NotificationsService:c,SchemaService:d}=r,u=toArray(t.STORAGE_LOCATIONS)[0];e.get("/*",(async(e,t)=>t.sendStatus(400))),e.post("/*",(async(e,t)=>{var p,h,f;if(!["/run","/dry-run","/check"].includes(e.url))throw t.sendStatus(400),new Error("Bad Request");const m="accountability"in e?e.accountability:null;if(!(null==m?void 0:m.admin))throw t.sendStatus(401),new Error("Unauthorised");const _="/dry-run"===e.url,y="/check"===e.url;if(!e.body.baseURL||!e.body.token||!e.body.scope)throw t.sendStatus(400),new Error("Bad Request");const g=e.body.baseURL,v=e.body.token,b=e.body.scope,w=await n(),E=await initLimiter(),A=new o({accountability:m,schema:w}),R=new a({accountability:m,schema:w}),$=new l({accountability:m,schema:w}),T=new i({accountability:m,schema:w}),S=new c({accountability:m,schema:w}),x=new d({knex:s,accountability:m}),I=le(g,{globals:{fetch:E.wrap(enhancedFetch)}}).with(pe(v)).with(ju());if(y){const e=await x.snapshot(),r=await checkSchema({client:I,schema:e});if(r&&"errors"in r){const e=Array.isArray(r.errors)&&r.errors.length>0?null==(p=r.errors[0])?void 0:p.message:"Unknown";t.json({status:"danger",icon:"error",message:e})}else t.json({status:"success",icon:"check",message:"This instance is compatible for migration."})}else{t.writeHead(200,{"Content-Type":"text/plain","Transfer-Encoding":"chunked"}),t.write(_?"## Staring Dry Run Extraction\r\n\r\n":"## Staring Extraction\r\n\r\n");const e=`Migration ${(new Date).toISOString()}`,s=await $.createOne({name:e,parent:null});t.write(`Created new folder ${e}\r\n\r\n`);try{t.write(`<div class="pending"><h3>${spinner} Creating Schema Snapshot</h3>\r\n\r\n`);const e=await x.snapshot();await saveToFile(e,"schema",A,s,u),t.write(`</div><h3 class="done">${icon} Schema Snapshot Created</h3>\r\n\r\n`),t.write(`<div class="pending"><h3>${spinner} Extracting System Data</h3>\r\n\r\n`);const n=await extractSystemData({res:t,services:r,accountability:m,schema:w,scope:b,folder:s,storage:u});if(n.system_errors){const e=Array.isArray(n.system_errors.errors)&&n.system_errors.errors.length>0?null==(h=n.system_errors.errors[0])?void 0:h.message:"Unknown";t.write(`Error Occurred: ${e}\r\n`),console.error(n.system_errors),await notifyUser(S,m,n.system_errors)}t.write("Validating System Data: ");let i=await validate_system({...n,scope:b});t.write(i?`</div><h3 class="done">${icon} System Data Extracted</h3>\r\n\r\n`:`</div><h3 class="error">${icon} System Data Extract Failed</h3>\r\n\r\n`),t.write(`<div class="pending"><h3>${spinner} Extracting Content</h3>\r\n\r\n`);const a=await extractContent({res:t,services:r,accountability:m,schema:w,scope:b,folder:s,storage:u});t.write("Validating Content: "),i=i?await validate_data({...a,scope:b}):i,t.write(i?`</div><h3 class="done">${icon} Content Extracted</h3>\r\n\r\n`:`</div><h3 class="error">${icon} System Data Extract Failed</h3>\r\n\r\n`),t.write(_?"## Checking Destination\r\n\r\n":"## Starting Migration\r\n\r\n"),t.write(`<div class="pending"><h3>${spinner} Applying Schema</h3>\r\n\r\n`);const o=await migrateSchema({res:t,client:I,schema:e,dry_run:_,force:b.force});if("errors"in o){const e=Array.isArray(o.errors)&&o.errors.length>0?null==(f=o.errors[0])?void 0:f.message:"Unknown";await notifyUser(S,m,o),t.write(`</div><h3 class="error">${icon} Schema Failed to Apply</h3>\r\n\r\n`),t.write(`Error Occurred: ${e}\r\n\r\n`)}else{if(t.write(`</div><h3 class="done">${icon} Schema Applied</h3>\r\n\r\n`),b.users){t.write(`<div class="pending"><h3>${spinner} Migrating Users</h3>\r\n\r\n`);const e=await migrateRoles({res:t,client:I,roles:n.roles,dry_run:_}),r=await migratePolicies({res:t,client:I,policies:n.policies,dry_run:_}),s=await migratePermissions({res:t,client:I,permissions:n.permissions,dry_run:_}),i=await migrateUsers({res:t,client:I,users:n.users,roles:n.roles,dry_run:_}),a=await migrateAccess({res:t,client:I,access:n.access,roles:n.roles,dry_run:_}),o=await validate_migration([e,r,s,i,a]);t.write(o?`</div><h3 class="done">${icon} Users Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Users Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Users Skipped</h3>\r\n\r\n`);if(b.content){t.write(`<div class="pending"><h3>${spinner} Removing Field Requirements</h3>\r\n\r\n`);const e=await updateRequiredFields({res:t,client:I,service:R,collections:a.collections,dry_run:_,task:"remove"}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Field Requirements Removed</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Failed to Remove Field Requirements</h3>\r\n\r\n`),t.write(`<div class="pending"><h3>${spinner} Migrating Files</h3>\r\n\r\n`);const s=await migrateFolders({res:t,client:I,folders:n.folders,dry_run:_}),i=await migrateFiles({res:t,client:I,service:T,files:a.files,dry_run:_}),o=await validate_migration([s,i]);if(t.write(o?`</div><h3 class="done">${icon} Files Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Files Migration Failed</h3>\r\n\r\n`),o&&r){t.write(`<div class="pending"><h3>${spinner} Migrating Collections</h3>\r\n\r\n`);const e=await migrateData({res:t,client:I,fullData:a.fullData,singletons:a.singletons,dry_run:_}),r=await validate_migration([e]);if(t.write(r?`</div><h3 class="done">${icon} Collections Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Collections Migration Failed</h3>\r\n\r\n`),r)if(b.comments){t.write(`<div class="pending"><h3>${spinner} Migrating Comments</h3>\r\n\r\n`);const e=await migrateComments({res:t,client:I,comments:n.comments,dry_run:_}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Comments Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Comments Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Comments Skipped</h3>\r\n\r\n`)}t.write(`<div class="pending"><h3>${spinner} Updating Required Fields</h3>\r\n\r\n`);const l=await updateRequiredFields({res:t,client:I,service:R,collections:a.collections,dry_run:_,task:"add"}),c=await validate_migration([l]);t.write(c?`</div><h3 class="done">${icon} Required Fields Updated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Failed to Update Required Fields</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Content Skipped</h3>\r\n\r\n`);if(b.dashboards){t.write(`<div class="pending"><h3>${spinner} Migrating Insights</h3>\r\n\r\n`);const e=await migrateDashboards({res:t,client:I,dashboards:n.dashboards,dry_run:_}),r=await migratePanels({res:t,client:I,panels:n.panels,dry_run:_}),s=await validate_migration([e,r]);t.write(s?`</div><h3 class="done">${icon} Insights Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Insights Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Insights Skipped</h3>\r\n\r\n`);if(b.flows){t.write(`<div class="pending"><h3>${spinner} Migrating Flows</h3>\r\n\r\n`);const e=await migrateFlows({res:t,client:I,flows:n.flows,operations:n.operations,dry_run:_}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Flows Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Flows Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Flows Skipped</h3>\r\n\r\n`);t.write(`<div class="pending"><h3>${spinner} Migrating Settings</h3>\r\n\r\n`);const e=await migrateSettings({res:t,client:I,settings:n.settings,dry_run:_}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Settings Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Settings Migration Failed</h3>\r\n\r\n`),t.write(`<div class="pending"><h3>${spinner} Migrating Translations</h3>\r\n\r\n`);const s=await migrateTranslations({res:t,client:I,translations:n.translations,dry_run:_}),i=await validate_migration([s]);if(t.write(i?`</div><h3 class="done">${icon} Translations Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Translations Migration Failed</h3>\r\n\r\n`),b.presets){t.write(`<div class="pending"><h3>${spinner} Migrating Presets</h3>\r\n\r\n`);const e=await migratePresets({res:t,client:I,presets:n.presets,dry_run:_}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Presets Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Presets Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Presets Skipped</h3>\r\n\r\n`);if(b.extensions){t.write(`<div class="pending"><h3>${spinner} Migrating Extensions</h3>\r\n\r\n`);const e=await migrateExtensions({res:t,client:I,extensions:n.extensions,dry_run:_}),r=await validate_migration([e]);t.write(r?`</div><h3 class="done">${icon} Extensions Migrated</h3>\r\n\r\n`:`</div><h3 class="error">${icon} Extensions Migration Failed</h3>\r\n\r\n`)}else t.write(`<h3 class="skipped">${icon} Extensions Skipped</h3>\r\n\r\n`)}t.write(`## Migration ${_?"Dry Run":""} Complete\r\n\r\n`),t.write(`The files can be download from the [file library](/admin/files/folders/${s}).\r\n\r\n`),t.end()}catch(e){t.write("An unkown error has occured. See log for details"),t.end(),console.error(e)}}}))}});const hooks=[],endpoints=[{name:"migration-endpoint",config:e0}],operations=[];export{endpoints,hooks,operations};
